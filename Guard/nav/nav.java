// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nav.proto

public final class nav {
  private nav() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code nav.Behavior}
   */
  public enum Behavior
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LOITER = 0;</code>
     *
     * <pre>
     * maintain stability
     * </pre>
     */
    LOITER(0, 0),
    /**
     * <code>APPROACH = 1;</code>
     *
     * <pre>
     * navigate toward objective without exceeding constraints
     * </pre>
     */
    APPROACH(1, 1),
    /**
     * <code>CAPTURE = 2;</code>
     *
     * <pre>
     * execute capture behavior
     * </pre>
     */
    CAPTURE(2, 2),
    /**
     * <code>RELEASE = 3;</code>
     *
     * <pre>
     * execute release behavior
     * </pre>
     */
    RELEASE(3, 3),
    /**
     * <code>DEPART = 4;</code>
     *
     * <pre>
     * navigate away from objective without exceeding constraints
     * </pre>
     */
    DEPART(4, 4),
    ;

    /**
     * <code>LOITER = 0;</code>
     *
     * <pre>
     * maintain stability
     * </pre>
     */
    public static final int LOITER_VALUE = 0;
    /**
     * <code>APPROACH = 1;</code>
     *
     * <pre>
     * navigate toward objective without exceeding constraints
     * </pre>
     */
    public static final int APPROACH_VALUE = 1;
    /**
     * <code>CAPTURE = 2;</code>
     *
     * <pre>
     * execute capture behavior
     * </pre>
     */
    public static final int CAPTURE_VALUE = 2;
    /**
     * <code>RELEASE = 3;</code>
     *
     * <pre>
     * execute release behavior
     * </pre>
     */
    public static final int RELEASE_VALUE = 3;
    /**
     * <code>DEPART = 4;</code>
     *
     * <pre>
     * navigate away from objective without exceeding constraints
     * </pre>
     */
    public static final int DEPART_VALUE = 4;


    public final int getNumber() { return value; }

    public static Behavior valueOf(int value) {
      switch (value) {
        case 0: return LOITER;
        case 1: return APPROACH;
        case 2: return CAPTURE;
        case 3: return RELEASE;
        case 4: return DEPART;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Behavior>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Behavior>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Behavior>() {
            public Behavior findValueByNumber(int number) {
              return Behavior.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return nav.getDescriptor().getEnumTypes().get(0);
    }

    private static final Behavior[] VALUES = values();

    public static Behavior valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Behavior(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:nav.Behavior)
  }

  public interface LabViewInOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.LabViewIn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct U
     *   {
     *     int32_t turn;
     *     int32_t speed;
     *   } u;
     *   unsigned char data[8];
     * };
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct U
     *   {
     *     int32_t turn;
     *     int32_t speed;
     *   } u;
     *   unsigned char data[8];
     * };
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code nav.LabViewIn}
   */
  public static final class LabViewIn extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.LabViewIn)
      LabViewInOrBuilder {
    // Use LabViewIn.newBuilder() to construct.
    private LabViewIn(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LabViewIn(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LabViewIn defaultInstance;
    public static LabViewIn getDefaultInstance() {
      return defaultInstance;
    }

    public LabViewIn getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LabViewIn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_LabViewIn_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_LabViewIn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.LabViewIn.class, nav.LabViewIn.Builder.class);
    }

    public static com.google.protobuf.Parser<LabViewIn> PARSER =
        new com.google.protobuf.AbstractParser<LabViewIn>() {
      public LabViewIn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LabViewIn(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LabViewIn> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct U
     *   {
     *     int32_t turn;
     *     int32_t speed;
     *   } u;
     *   unsigned char data[8];
     * };
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct U
     *   {
     *     int32_t turn;
     *     int32_t speed;
     *   } u;
     *   unsigned char data[8];
     * };
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.LabViewIn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LabViewIn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LabViewIn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LabViewIn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LabViewIn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LabViewIn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.LabViewIn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.LabViewIn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.LabViewIn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LabViewIn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.LabViewIn prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.LabViewIn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.LabViewIn)
        nav.LabViewInOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_LabViewIn_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_LabViewIn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.LabViewIn.class, nav.LabViewIn.Builder.class);
      }

      // Construct using nav.LabViewIn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_LabViewIn_descriptor;
      }

      public nav.LabViewIn getDefaultInstanceForType() {
        return nav.LabViewIn.getDefaultInstance();
      }

      public nav.LabViewIn build() {
        nav.LabViewIn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.LabViewIn buildPartial() {
        nav.LabViewIn result = new nav.LabViewIn(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.LabViewIn) {
          return mergeFrom((nav.LabViewIn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.LabViewIn other) {
        if (other == nav.LabViewIn.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.LabViewIn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.LabViewIn) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct U
       *   {
       *     int32_t turn;
       *     int32_t speed;
       *   } u;
       *   unsigned char data[8];
       * };
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct U
       *   {
       *     int32_t turn;
       *     int32_t speed;
       *   } u;
       *   unsigned char data[8];
       * };
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct U
       *   {
       *     int32_t turn;
       *     int32_t speed;
       *   } u;
       *   unsigned char data[8];
       * };
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct U
       *   {
       *     int32_t turn;
       *     int32_t speed;
       *   } u;
       *   unsigned char data[8];
       * };
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.LabViewIn)
    }

    static {
      defaultInstance = new LabViewIn(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.LabViewIn)
  }

  public interface LabViewOutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.LabViewOut)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct Y
     *   {
     *     double yawR; // radians
     *     double latR; // radians
     *     double lonR; // radians
     *     double yawRateRPS; // radians per second
     *     double forwardRateMPS; // meters per second
     *     double yawSigmaR; // radians
     *     double latSigmaR; // radians
     *     double lonSigmaR; // radians
     *   } y;
     *   unsigned char data[64];
     * };
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct Y
     *   {
     *     double yawR; // radians
     *     double latR; // radians
     *     double lonR; // radians
     *     double yawRateRPS; // radians per second
     *     double forwardRateMPS; // meters per second
     *     double yawSigmaR; // radians
     *     double latSigmaR; // radians
     *     double lonSigmaR; // radians
     *   } y;
     *   unsigned char data[64];
     * };
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code nav.LabViewOut}
   */
  public static final class LabViewOut extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.LabViewOut)
      LabViewOutOrBuilder {
    // Use LabViewOut.newBuilder() to construct.
    private LabViewOut(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LabViewOut(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LabViewOut defaultInstance;
    public static LabViewOut getDefaultInstance() {
      return defaultInstance;
    }

    public LabViewOut getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LabViewOut(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_LabViewOut_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_LabViewOut_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.LabViewOut.class, nav.LabViewOut.Builder.class);
    }

    public static com.google.protobuf.Parser<LabViewOut> PARSER =
        new com.google.protobuf.AbstractParser<LabViewOut>() {
      public LabViewOut parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LabViewOut(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LabViewOut> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct Y
     *   {
     *     double yawR; // radians
     *     double latR; // radians
     *     double lonR; // radians
     *     double yawRateRPS; // radians per second
     *     double forwardRateMPS; // meters per second
     *     double yawSigmaR; // radians
     *     double latSigmaR; // radians
     *     double lonSigmaR; // radians
     *   } y;
     *   unsigned char data[64];
     * };
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes data = 1;</code>
     *
     * <pre>
     * Contents are structured as follows:
     * union
     * {
     *   struct Y
     *   {
     *     double yawR; // radians
     *     double latR; // radians
     *     double lonR; // radians
     *     double yawRateRPS; // radians per second
     *     double forwardRateMPS; // meters per second
     *     double yawSigmaR; // radians
     *     double latSigmaR; // radians
     *     double lonSigmaR; // radians
     *   } y;
     *   unsigned char data[64];
     * };
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.LabViewOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LabViewOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LabViewOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LabViewOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LabViewOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LabViewOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.LabViewOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.LabViewOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.LabViewOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LabViewOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.LabViewOut prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.LabViewOut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.LabViewOut)
        nav.LabViewOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_LabViewOut_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_LabViewOut_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.LabViewOut.class, nav.LabViewOut.Builder.class);
      }

      // Construct using nav.LabViewOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_LabViewOut_descriptor;
      }

      public nav.LabViewOut getDefaultInstanceForType() {
        return nav.LabViewOut.getDefaultInstance();
      }

      public nav.LabViewOut build() {
        nav.LabViewOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.LabViewOut buildPartial() {
        nav.LabViewOut result = new nav.LabViewOut(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.LabViewOut) {
          return mergeFrom((nav.LabViewOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.LabViewOut other) {
        if (other == nav.LabViewOut.getDefaultInstance()) return this;
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.LabViewOut parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.LabViewOut) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct Y
       *   {
       *     double yawR; // radians
       *     double latR; // radians
       *     double lonR; // radians
       *     double yawRateRPS; // radians per second
       *     double forwardRateMPS; // meters per second
       *     double yawSigmaR; // radians
       *     double latSigmaR; // radians
       *     double lonSigmaR; // radians
       *   } y;
       *   unsigned char data[64];
       * };
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct Y
       *   {
       *     double yawR; // radians
       *     double latR; // radians
       *     double lonR; // radians
       *     double yawRateRPS; // radians per second
       *     double forwardRateMPS; // meters per second
       *     double yawSigmaR; // radians
       *     double latSigmaR; // radians
       *     double lonSigmaR; // radians
       *   } y;
       *   unsigned char data[64];
       * };
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct Y
       *   {
       *     double yawR; // radians
       *     double latR; // radians
       *     double lonR; // radians
       *     double yawRateRPS; // radians per second
       *     double forwardRateMPS; // meters per second
       *     double yawSigmaR; // radians
       *     double latSigmaR; // radians
       *     double lonSigmaR; // radians
       *   } y;
       *   unsigned char data[64];
       * };
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 1;</code>
       *
       * <pre>
       * Contents are structured as follows:
       * union
       * {
       *   struct Y
       *   {
       *     double yawR; // radians
       *     double latR; // radians
       *     double lonR; // radians
       *     double yawRateRPS; // radians per second
       *     double forwardRateMPS; // meters per second
       *     double yawSigmaR; // radians
       *     double latSigmaR; // radians
       *     double lonSigmaR; // radians
       *   } y;
       *   unsigned char data[64];
       * };
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000001);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.LabViewOut)
    }

    static {
      defaultInstance = new LabViewOut(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.LabViewOut)
  }

  public interface MissionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.Mission)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .nav.Behavior behavior = 1;</code>
     */
    boolean hasBehavior();
    /**
     * <code>required .nav.Behavior behavior = 1;</code>
     */
    nav.Behavior getBehavior();
  }
  /**
   * Protobuf type {@code nav.Mission}
   */
  public static final class Mission extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.Mission)
      MissionOrBuilder {
    // Use Mission.newBuilder() to construct.
    private Mission(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Mission(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Mission defaultInstance;
    public static Mission getDefaultInstance() {
      return defaultInstance;
    }

    public Mission getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Mission(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              nav.Behavior value = nav.Behavior.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                behavior_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_Mission_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_Mission_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.Mission.class, nav.Mission.Builder.class);
    }

    public static com.google.protobuf.Parser<Mission> PARSER =
        new com.google.protobuf.AbstractParser<Mission>() {
      public Mission parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Mission(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Mission> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BEHAVIOR_FIELD_NUMBER = 1;
    private nav.Behavior behavior_;
    /**
     * <code>required .nav.Behavior behavior = 1;</code>
     */
    public boolean hasBehavior() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .nav.Behavior behavior = 1;</code>
     */
    public nav.Behavior getBehavior() {
      return behavior_;
    }

    private void initFields() {
      behavior_ = nav.Behavior.LOITER;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBehavior()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, behavior_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, behavior_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.Mission parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Mission parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Mission parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Mission parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Mission parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Mission parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.Mission parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.Mission parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.Mission parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Mission parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.Mission prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.Mission}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.Mission)
        nav.MissionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_Mission_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_Mission_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.Mission.class, nav.Mission.Builder.class);
      }

      // Construct using nav.Mission.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        behavior_ = nav.Behavior.LOITER;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_Mission_descriptor;
      }

      public nav.Mission getDefaultInstanceForType() {
        return nav.Mission.getDefaultInstance();
      }

      public nav.Mission build() {
        nav.Mission result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.Mission buildPartial() {
        nav.Mission result = new nav.Mission(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.behavior_ = behavior_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.Mission) {
          return mergeFrom((nav.Mission)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.Mission other) {
        if (other == nav.Mission.getDefaultInstance()) return this;
        if (other.hasBehavior()) {
          setBehavior(other.getBehavior());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBehavior()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.Mission parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.Mission) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private nav.Behavior behavior_ = nav.Behavior.LOITER;
      /**
       * <code>required .nav.Behavior behavior = 1;</code>
       */
      public boolean hasBehavior() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .nav.Behavior behavior = 1;</code>
       */
      public nav.Behavior getBehavior() {
        return behavior_;
      }
      /**
       * <code>required .nav.Behavior behavior = 1;</code>
       */
      public Builder setBehavior(nav.Behavior value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        behavior_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .nav.Behavior behavior = 1;</code>
       */
      public Builder clearBehavior() {
        bitField0_ = (bitField0_ & ~0x00000001);
        behavior_ = nav.Behavior.LOITER;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.Mission)
    }

    static {
      defaultInstance = new Mission(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.Mission)
  }

  public interface WaystatesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.Waystates)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double timeS = 1;</code>
     */
    java.util.List<java.lang.Double> getTimeSList();
    /**
     * <code>repeated double timeS = 1;</code>
     */
    int getTimeSCount();
    /**
     * <code>repeated double timeS = 1;</code>
     */
    double getTimeS(int index);

    /**
     * <code>repeated double rollR = 2;</code>
     */
    java.util.List<java.lang.Double> getRollRList();
    /**
     * <code>repeated double rollR = 2;</code>
     */
    int getRollRCount();
    /**
     * <code>repeated double rollR = 2;</code>
     */
    double getRollR(int index);

    /**
     * <code>repeated double pitchR = 3;</code>
     */
    java.util.List<java.lang.Double> getPitchRList();
    /**
     * <code>repeated double pitchR = 3;</code>
     */
    int getPitchRCount();
    /**
     * <code>repeated double pitchR = 3;</code>
     */
    double getPitchR(int index);

    /**
     * <code>repeated double yawR = 4;</code>
     */
    java.util.List<java.lang.Double> getYawRList();
    /**
     * <code>repeated double yawR = 4;</code>
     */
    int getYawRCount();
    /**
     * <code>repeated double yawR = 4;</code>
     */
    double getYawR(int index);

    /**
     * <code>repeated double latR = 5;</code>
     */
    java.util.List<java.lang.Double> getLatRList();
    /**
     * <code>repeated double latR = 5;</code>
     */
    int getLatRCount();
    /**
     * <code>repeated double latR = 5;</code>
     */
    double getLatR(int index);

    /**
     * <code>repeated double lonR = 6;</code>
     */
    java.util.List<java.lang.Double> getLonRList();
    /**
     * <code>repeated double lonR = 6;</code>
     */
    int getLonRCount();
    /**
     * <code>repeated double lonR = 6;</code>
     */
    double getLonR(int index);

    /**
     * <code>repeated double altM = 7;</code>
     */
    java.util.List<java.lang.Double> getAltMList();
    /**
     * <code>repeated double altM = 7;</code>
     */
    int getAltMCount();
    /**
     * <code>repeated double altM = 7;</code>
     */
    double getAltM(int index);

    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    java.util.List<java.lang.Double> getRollRateRPSList();
    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    int getRollRateRPSCount();
    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    double getRollRateRPS(int index);

    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    java.util.List<java.lang.Double> getPitchRateRPSList();
    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    int getPitchRateRPSCount();
    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    double getPitchRateRPS(int index);

    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    java.util.List<java.lang.Double> getYawRateRPSList();
    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    int getYawRateRPSCount();
    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    double getYawRateRPS(int index);

    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    java.util.List<java.lang.Double> getForwardRateMPSList();
    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    int getForwardRateMPSCount();
    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    double getForwardRateMPS(int index);

    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    java.util.List<java.lang.Double> getRightRateMPSList();
    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    int getRightRateMPSCount();
    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    double getRightRateMPS(int index);

    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    java.util.List<java.lang.Double> getDownRateMPSList();
    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    int getDownRateMPSCount();
    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    double getDownRateMPS(int index);
  }
  /**
   * Protobuf type {@code nav.Waystates}
   */
  public static final class Waystates extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.Waystates)
      WaystatesOrBuilder {
    // Use Waystates.newBuilder() to construct.
    private Waystates(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Waystates(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Waystates defaultInstance;
    public static Waystates getDefaultInstance() {
      return defaultInstance;
    }

    public Waystates getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Waystates(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                timeS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              timeS_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                timeS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                timeS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 17: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rollR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              rollR_.add(input.readDouble());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                rollR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                rollR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 25: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                pitchR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              pitchR_.add(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                pitchR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                pitchR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 33: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                yawR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              yawR_.add(input.readDouble());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                yawR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                yawR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 41: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                latR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000010;
              }
              latR_.add(input.readDouble());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                latR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                latR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 49: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                lonR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000020;
              }
              lonR_.add(input.readDouble());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                lonR_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                lonR_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 57: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                altM_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000040;
              }
              altM_.add(input.readDouble());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                altM_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                altM_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 65: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                rollRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000080;
              }
              rollRateRPS_.add(input.readDouble());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                rollRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                rollRateRPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 73: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                pitchRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000100;
              }
              pitchRateRPS_.add(input.readDouble());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                pitchRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                pitchRateRPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 81: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                yawRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000200;
              }
              yawRateRPS_.add(input.readDouble());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                yawRateRPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                yawRateRPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 89: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                forwardRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000400;
              }
              forwardRateMPS_.add(input.readDouble());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                forwardRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                forwardRateMPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 97: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                rightRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000800;
              }
              rightRateMPS_.add(input.readDouble());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                rightRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                rightRateMPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 105: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                downRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00001000;
              }
              downRateMPS_.add(input.readDouble());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                downRateMPS_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                downRateMPS_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          timeS_ = java.util.Collections.unmodifiableList(timeS_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rollR_ = java.util.Collections.unmodifiableList(rollR_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          pitchR_ = java.util.Collections.unmodifiableList(pitchR_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          yawR_ = java.util.Collections.unmodifiableList(yawR_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          latR_ = java.util.Collections.unmodifiableList(latR_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          lonR_ = java.util.Collections.unmodifiableList(lonR_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          altM_ = java.util.Collections.unmodifiableList(altM_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          rollRateRPS_ = java.util.Collections.unmodifiableList(rollRateRPS_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          pitchRateRPS_ = java.util.Collections.unmodifiableList(pitchRateRPS_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          yawRateRPS_ = java.util.Collections.unmodifiableList(yawRateRPS_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          forwardRateMPS_ = java.util.Collections.unmodifiableList(forwardRateMPS_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          rightRateMPS_ = java.util.Collections.unmodifiableList(rightRateMPS_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          downRateMPS_ = java.util.Collections.unmodifiableList(downRateMPS_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_Waystates_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_Waystates_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.Waystates.class, nav.Waystates.Builder.class);
    }

    public static com.google.protobuf.Parser<Waystates> PARSER =
        new com.google.protobuf.AbstractParser<Waystates>() {
      public Waystates parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Waystates(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Waystates> getParserForType() {
      return PARSER;
    }

    public static final int TIMES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> timeS_;
    /**
     * <code>repeated double timeS = 1;</code>
     */
    public java.util.List<java.lang.Double>
        getTimeSList() {
      return timeS_;
    }
    /**
     * <code>repeated double timeS = 1;</code>
     */
    public int getTimeSCount() {
      return timeS_.size();
    }
    /**
     * <code>repeated double timeS = 1;</code>
     */
    public double getTimeS(int index) {
      return timeS_.get(index);
    }

    public static final int ROLLR_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Double> rollR_;
    /**
     * <code>repeated double rollR = 2;</code>
     */
    public java.util.List<java.lang.Double>
        getRollRList() {
      return rollR_;
    }
    /**
     * <code>repeated double rollR = 2;</code>
     */
    public int getRollRCount() {
      return rollR_.size();
    }
    /**
     * <code>repeated double rollR = 2;</code>
     */
    public double getRollR(int index) {
      return rollR_.get(index);
    }

    public static final int PITCHR_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> pitchR_;
    /**
     * <code>repeated double pitchR = 3;</code>
     */
    public java.util.List<java.lang.Double>
        getPitchRList() {
      return pitchR_;
    }
    /**
     * <code>repeated double pitchR = 3;</code>
     */
    public int getPitchRCount() {
      return pitchR_.size();
    }
    /**
     * <code>repeated double pitchR = 3;</code>
     */
    public double getPitchR(int index) {
      return pitchR_.get(index);
    }

    public static final int YAWR_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Double> yawR_;
    /**
     * <code>repeated double yawR = 4;</code>
     */
    public java.util.List<java.lang.Double>
        getYawRList() {
      return yawR_;
    }
    /**
     * <code>repeated double yawR = 4;</code>
     */
    public int getYawRCount() {
      return yawR_.size();
    }
    /**
     * <code>repeated double yawR = 4;</code>
     */
    public double getYawR(int index) {
      return yawR_.get(index);
    }

    public static final int LATR_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Double> latR_;
    /**
     * <code>repeated double latR = 5;</code>
     */
    public java.util.List<java.lang.Double>
        getLatRList() {
      return latR_;
    }
    /**
     * <code>repeated double latR = 5;</code>
     */
    public int getLatRCount() {
      return latR_.size();
    }
    /**
     * <code>repeated double latR = 5;</code>
     */
    public double getLatR(int index) {
      return latR_.get(index);
    }

    public static final int LONR_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Double> lonR_;
    /**
     * <code>repeated double lonR = 6;</code>
     */
    public java.util.List<java.lang.Double>
        getLonRList() {
      return lonR_;
    }
    /**
     * <code>repeated double lonR = 6;</code>
     */
    public int getLonRCount() {
      return lonR_.size();
    }
    /**
     * <code>repeated double lonR = 6;</code>
     */
    public double getLonR(int index) {
      return lonR_.get(index);
    }

    public static final int ALTM_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Double> altM_;
    /**
     * <code>repeated double altM = 7;</code>
     */
    public java.util.List<java.lang.Double>
        getAltMList() {
      return altM_;
    }
    /**
     * <code>repeated double altM = 7;</code>
     */
    public int getAltMCount() {
      return altM_.size();
    }
    /**
     * <code>repeated double altM = 7;</code>
     */
    public double getAltM(int index) {
      return altM_.get(index);
    }

    public static final int ROLLRATERPS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Double> rollRateRPS_;
    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    public java.util.List<java.lang.Double>
        getRollRateRPSList() {
      return rollRateRPS_;
    }
    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    public int getRollRateRPSCount() {
      return rollRateRPS_.size();
    }
    /**
     * <code>repeated double rollRateRPS = 8;</code>
     */
    public double getRollRateRPS(int index) {
      return rollRateRPS_.get(index);
    }

    public static final int PITCHRATERPS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Double> pitchRateRPS_;
    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    public java.util.List<java.lang.Double>
        getPitchRateRPSList() {
      return pitchRateRPS_;
    }
    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    public int getPitchRateRPSCount() {
      return pitchRateRPS_.size();
    }
    /**
     * <code>repeated double pitchRateRPS = 9;</code>
     */
    public double getPitchRateRPS(int index) {
      return pitchRateRPS_.get(index);
    }

    public static final int YAWRATERPS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Double> yawRateRPS_;
    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    public java.util.List<java.lang.Double>
        getYawRateRPSList() {
      return yawRateRPS_;
    }
    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    public int getYawRateRPSCount() {
      return yawRateRPS_.size();
    }
    /**
     * <code>repeated double yawRateRPS = 10;</code>
     */
    public double getYawRateRPS(int index) {
      return yawRateRPS_.get(index);
    }

    public static final int FORWARDRATEMPS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Double> forwardRateMPS_;
    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    public java.util.List<java.lang.Double>
        getForwardRateMPSList() {
      return forwardRateMPS_;
    }
    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    public int getForwardRateMPSCount() {
      return forwardRateMPS_.size();
    }
    /**
     * <code>repeated double forwardRateMPS = 11;</code>
     */
    public double getForwardRateMPS(int index) {
      return forwardRateMPS_.get(index);
    }

    public static final int RIGHTRATEMPS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Double> rightRateMPS_;
    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    public java.util.List<java.lang.Double>
        getRightRateMPSList() {
      return rightRateMPS_;
    }
    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    public int getRightRateMPSCount() {
      return rightRateMPS_.size();
    }
    /**
     * <code>repeated double rightRateMPS = 12;</code>
     */
    public double getRightRateMPS(int index) {
      return rightRateMPS_.get(index);
    }

    public static final int DOWNRATEMPS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Double> downRateMPS_;
    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    public java.util.List<java.lang.Double>
        getDownRateMPSList() {
      return downRateMPS_;
    }
    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    public int getDownRateMPSCount() {
      return downRateMPS_.size();
    }
    /**
     * <code>repeated double downRateMPS = 13;</code>
     */
    public double getDownRateMPS(int index) {
      return downRateMPS_.get(index);
    }

    private void initFields() {
      timeS_ = java.util.Collections.emptyList();
      rollR_ = java.util.Collections.emptyList();
      pitchR_ = java.util.Collections.emptyList();
      yawR_ = java.util.Collections.emptyList();
      latR_ = java.util.Collections.emptyList();
      lonR_ = java.util.Collections.emptyList();
      altM_ = java.util.Collections.emptyList();
      rollRateRPS_ = java.util.Collections.emptyList();
      pitchRateRPS_ = java.util.Collections.emptyList();
      yawRateRPS_ = java.util.Collections.emptyList();
      forwardRateMPS_ = java.util.Collections.emptyList();
      rightRateMPS_ = java.util.Collections.emptyList();
      downRateMPS_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < timeS_.size(); i++) {
        output.writeDouble(1, timeS_.get(i));
      }
      for (int i = 0; i < rollR_.size(); i++) {
        output.writeDouble(2, rollR_.get(i));
      }
      for (int i = 0; i < pitchR_.size(); i++) {
        output.writeDouble(3, pitchR_.get(i));
      }
      for (int i = 0; i < yawR_.size(); i++) {
        output.writeDouble(4, yawR_.get(i));
      }
      for (int i = 0; i < latR_.size(); i++) {
        output.writeDouble(5, latR_.get(i));
      }
      for (int i = 0; i < lonR_.size(); i++) {
        output.writeDouble(6, lonR_.get(i));
      }
      for (int i = 0; i < altM_.size(); i++) {
        output.writeDouble(7, altM_.get(i));
      }
      for (int i = 0; i < rollRateRPS_.size(); i++) {
        output.writeDouble(8, rollRateRPS_.get(i));
      }
      for (int i = 0; i < pitchRateRPS_.size(); i++) {
        output.writeDouble(9, pitchRateRPS_.get(i));
      }
      for (int i = 0; i < yawRateRPS_.size(); i++) {
        output.writeDouble(10, yawRateRPS_.get(i));
      }
      for (int i = 0; i < forwardRateMPS_.size(); i++) {
        output.writeDouble(11, forwardRateMPS_.get(i));
      }
      for (int i = 0; i < rightRateMPS_.size(); i++) {
        output.writeDouble(12, rightRateMPS_.get(i));
      }
      for (int i = 0; i < downRateMPS_.size(); i++) {
        output.writeDouble(13, downRateMPS_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getTimeSList().size();
        size += dataSize;
        size += 1 * getTimeSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRollRList().size();
        size += dataSize;
        size += 1 * getRollRList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPitchRList().size();
        size += dataSize;
        size += 1 * getPitchRList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getYawRList().size();
        size += dataSize;
        size += 1 * getYawRList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getLatRList().size();
        size += dataSize;
        size += 1 * getLatRList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getLonRList().size();
        size += dataSize;
        size += 1 * getLonRList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getAltMList().size();
        size += dataSize;
        size += 1 * getAltMList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRollRateRPSList().size();
        size += dataSize;
        size += 1 * getRollRateRPSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getPitchRateRPSList().size();
        size += dataSize;
        size += 1 * getPitchRateRPSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getYawRateRPSList().size();
        size += dataSize;
        size += 1 * getYawRateRPSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getForwardRateMPSList().size();
        size += dataSize;
        size += 1 * getForwardRateMPSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getRightRateMPSList().size();
        size += dataSize;
        size += 1 * getRightRateMPSList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDownRateMPSList().size();
        size += dataSize;
        size += 1 * getDownRateMPSList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.Waystates parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Waystates parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Waystates parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Waystates parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Waystates parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Waystates parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.Waystates parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.Waystates parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.Waystates parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Waystates parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.Waystates prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.Waystates}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.Waystates)
        nav.WaystatesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_Waystates_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_Waystates_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.Waystates.class, nav.Waystates.Builder.class);
      }

      // Construct using nav.Waystates.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rollR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        pitchR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        yawR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        latR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        lonR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        altM_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        rollRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        pitchRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        yawRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        forwardRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        rightRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        downRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_Waystates_descriptor;
      }

      public nav.Waystates getDefaultInstanceForType() {
        return nav.Waystates.getDefaultInstance();
      }

      public nav.Waystates build() {
        nav.Waystates result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.Waystates buildPartial() {
        nav.Waystates result = new nav.Waystates(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          timeS_ = java.util.Collections.unmodifiableList(timeS_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.timeS_ = timeS_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          rollR_ = java.util.Collections.unmodifiableList(rollR_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.rollR_ = rollR_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          pitchR_ = java.util.Collections.unmodifiableList(pitchR_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.pitchR_ = pitchR_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          yawR_ = java.util.Collections.unmodifiableList(yawR_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.yawR_ = yawR_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          latR_ = java.util.Collections.unmodifiableList(latR_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.latR_ = latR_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          lonR_ = java.util.Collections.unmodifiableList(lonR_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.lonR_ = lonR_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          altM_ = java.util.Collections.unmodifiableList(altM_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.altM_ = altM_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          rollRateRPS_ = java.util.Collections.unmodifiableList(rollRateRPS_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.rollRateRPS_ = rollRateRPS_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          pitchRateRPS_ = java.util.Collections.unmodifiableList(pitchRateRPS_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.pitchRateRPS_ = pitchRateRPS_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          yawRateRPS_ = java.util.Collections.unmodifiableList(yawRateRPS_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.yawRateRPS_ = yawRateRPS_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          forwardRateMPS_ = java.util.Collections.unmodifiableList(forwardRateMPS_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.forwardRateMPS_ = forwardRateMPS_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          rightRateMPS_ = java.util.Collections.unmodifiableList(rightRateMPS_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.rightRateMPS_ = rightRateMPS_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          downRateMPS_ = java.util.Collections.unmodifiableList(downRateMPS_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.downRateMPS_ = downRateMPS_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.Waystates) {
          return mergeFrom((nav.Waystates)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.Waystates other) {
        if (other == nav.Waystates.getDefaultInstance()) return this;
        if (!other.timeS_.isEmpty()) {
          if (timeS_.isEmpty()) {
            timeS_ = other.timeS_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTimeSIsMutable();
            timeS_.addAll(other.timeS_);
          }
          onChanged();
        }
        if (!other.rollR_.isEmpty()) {
          if (rollR_.isEmpty()) {
            rollR_ = other.rollR_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRollRIsMutable();
            rollR_.addAll(other.rollR_);
          }
          onChanged();
        }
        if (!other.pitchR_.isEmpty()) {
          if (pitchR_.isEmpty()) {
            pitchR_ = other.pitchR_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensurePitchRIsMutable();
            pitchR_.addAll(other.pitchR_);
          }
          onChanged();
        }
        if (!other.yawR_.isEmpty()) {
          if (yawR_.isEmpty()) {
            yawR_ = other.yawR_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureYawRIsMutable();
            yawR_.addAll(other.yawR_);
          }
          onChanged();
        }
        if (!other.latR_.isEmpty()) {
          if (latR_.isEmpty()) {
            latR_ = other.latR_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureLatRIsMutable();
            latR_.addAll(other.latR_);
          }
          onChanged();
        }
        if (!other.lonR_.isEmpty()) {
          if (lonR_.isEmpty()) {
            lonR_ = other.lonR_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLonRIsMutable();
            lonR_.addAll(other.lonR_);
          }
          onChanged();
        }
        if (!other.altM_.isEmpty()) {
          if (altM_.isEmpty()) {
            altM_ = other.altM_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureAltMIsMutable();
            altM_.addAll(other.altM_);
          }
          onChanged();
        }
        if (!other.rollRateRPS_.isEmpty()) {
          if (rollRateRPS_.isEmpty()) {
            rollRateRPS_ = other.rollRateRPS_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureRollRateRPSIsMutable();
            rollRateRPS_.addAll(other.rollRateRPS_);
          }
          onChanged();
        }
        if (!other.pitchRateRPS_.isEmpty()) {
          if (pitchRateRPS_.isEmpty()) {
            pitchRateRPS_ = other.pitchRateRPS_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePitchRateRPSIsMutable();
            pitchRateRPS_.addAll(other.pitchRateRPS_);
          }
          onChanged();
        }
        if (!other.yawRateRPS_.isEmpty()) {
          if (yawRateRPS_.isEmpty()) {
            yawRateRPS_ = other.yawRateRPS_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureYawRateRPSIsMutable();
            yawRateRPS_.addAll(other.yawRateRPS_);
          }
          onChanged();
        }
        if (!other.forwardRateMPS_.isEmpty()) {
          if (forwardRateMPS_.isEmpty()) {
            forwardRateMPS_ = other.forwardRateMPS_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureForwardRateMPSIsMutable();
            forwardRateMPS_.addAll(other.forwardRateMPS_);
          }
          onChanged();
        }
        if (!other.rightRateMPS_.isEmpty()) {
          if (rightRateMPS_.isEmpty()) {
            rightRateMPS_ = other.rightRateMPS_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureRightRateMPSIsMutable();
            rightRateMPS_.addAll(other.rightRateMPS_);
          }
          onChanged();
        }
        if (!other.downRateMPS_.isEmpty()) {
          if (downRateMPS_.isEmpty()) {
            downRateMPS_ = other.downRateMPS_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureDownRateMPSIsMutable();
            downRateMPS_.addAll(other.downRateMPS_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.Waystates parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.Waystates) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> timeS_ = java.util.Collections.emptyList();
      private void ensureTimeSIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          timeS_ = new java.util.ArrayList<java.lang.Double>(timeS_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public java.util.List<java.lang.Double>
          getTimeSList() {
        return java.util.Collections.unmodifiableList(timeS_);
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public int getTimeSCount() {
        return timeS_.size();
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public double getTimeS(int index) {
        return timeS_.get(index);
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public Builder setTimeS(
          int index, double value) {
        ensureTimeSIsMutable();
        timeS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public Builder addTimeS(double value) {
        ensureTimeSIsMutable();
        timeS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public Builder addAllTimeS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTimeSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, timeS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        timeS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> rollR_ = java.util.Collections.emptyList();
      private void ensureRollRIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rollR_ = new java.util.ArrayList<java.lang.Double>(rollR_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getRollRList() {
        return java.util.Collections.unmodifiableList(rollR_);
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public int getRollRCount() {
        return rollR_.size();
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public double getRollR(int index) {
        return rollR_.get(index);
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public Builder setRollR(
          int index, double value) {
        ensureRollRIsMutable();
        rollR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public Builder addRollR(double value) {
        ensureRollRIsMutable();
        rollR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public Builder addAllRollR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRollRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rollR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollR = 2;</code>
       */
      public Builder clearRollR() {
        rollR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> pitchR_ = java.util.Collections.emptyList();
      private void ensurePitchRIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          pitchR_ = new java.util.ArrayList<java.lang.Double>(pitchR_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getPitchRList() {
        return java.util.Collections.unmodifiableList(pitchR_);
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public int getPitchRCount() {
        return pitchR_.size();
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public double getPitchR(int index) {
        return pitchR_.get(index);
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public Builder setPitchR(
          int index, double value) {
        ensurePitchRIsMutable();
        pitchR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public Builder addPitchR(double value) {
        ensurePitchRIsMutable();
        pitchR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public Builder addAllPitchR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePitchRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pitchR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchR = 3;</code>
       */
      public Builder clearPitchR() {
        pitchR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> yawR_ = java.util.Collections.emptyList();
      private void ensureYawRIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          yawR_ = new java.util.ArrayList<java.lang.Double>(yawR_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getYawRList() {
        return java.util.Collections.unmodifiableList(yawR_);
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public int getYawRCount() {
        return yawR_.size();
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public double getYawR(int index) {
        return yawR_.get(index);
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public Builder setYawR(
          int index, double value) {
        ensureYawRIsMutable();
        yawR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public Builder addYawR(double value) {
        ensureYawRIsMutable();
        yawR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public Builder addAllYawR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureYawRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, yawR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawR = 4;</code>
       */
      public Builder clearYawR() {
        yawR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> latR_ = java.util.Collections.emptyList();
      private void ensureLatRIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          latR_ = new java.util.ArrayList<java.lang.Double>(latR_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public java.util.List<java.lang.Double>
          getLatRList() {
        return java.util.Collections.unmodifiableList(latR_);
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public int getLatRCount() {
        return latR_.size();
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public double getLatR(int index) {
        return latR_.get(index);
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public Builder setLatR(
          int index, double value) {
        ensureLatRIsMutable();
        latR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public Builder addLatR(double value) {
        ensureLatRIsMutable();
        latR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public Builder addAllLatR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLatRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, latR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double latR = 5;</code>
       */
      public Builder clearLatR() {
        latR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> lonR_ = java.util.Collections.emptyList();
      private void ensureLonRIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          lonR_ = new java.util.ArrayList<java.lang.Double>(lonR_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public java.util.List<java.lang.Double>
          getLonRList() {
        return java.util.Collections.unmodifiableList(lonR_);
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public int getLonRCount() {
        return lonR_.size();
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public double getLonR(int index) {
        return lonR_.get(index);
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public Builder setLonR(
          int index, double value) {
        ensureLonRIsMutable();
        lonR_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public Builder addLonR(double value) {
        ensureLonRIsMutable();
        lonR_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public Builder addAllLonR(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureLonRIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lonR_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double lonR = 6;</code>
       */
      public Builder clearLonR() {
        lonR_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> altM_ = java.util.Collections.emptyList();
      private void ensureAltMIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          altM_ = new java.util.ArrayList<java.lang.Double>(altM_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public java.util.List<java.lang.Double>
          getAltMList() {
        return java.util.Collections.unmodifiableList(altM_);
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public int getAltMCount() {
        return altM_.size();
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public double getAltM(int index) {
        return altM_.get(index);
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public Builder setAltM(
          int index, double value) {
        ensureAltMIsMutable();
        altM_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public Builder addAltM(double value) {
        ensureAltMIsMutable();
        altM_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public Builder addAllAltM(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureAltMIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, altM_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double altM = 7;</code>
       */
      public Builder clearAltM() {
        altM_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> rollRateRPS_ = java.util.Collections.emptyList();
      private void ensureRollRateRPSIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          rollRateRPS_ = new java.util.ArrayList<java.lang.Double>(rollRateRPS_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public java.util.List<java.lang.Double>
          getRollRateRPSList() {
        return java.util.Collections.unmodifiableList(rollRateRPS_);
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public int getRollRateRPSCount() {
        return rollRateRPS_.size();
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public double getRollRateRPS(int index) {
        return rollRateRPS_.get(index);
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public Builder setRollRateRPS(
          int index, double value) {
        ensureRollRateRPSIsMutable();
        rollRateRPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public Builder addRollRateRPS(double value) {
        ensureRollRateRPSIsMutable();
        rollRateRPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public Builder addAllRollRateRPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRollRateRPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rollRateRPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rollRateRPS = 8;</code>
       */
      public Builder clearRollRateRPS() {
        rollRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> pitchRateRPS_ = java.util.Collections.emptyList();
      private void ensurePitchRateRPSIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          pitchRateRPS_ = new java.util.ArrayList<java.lang.Double>(pitchRateRPS_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public java.util.List<java.lang.Double>
          getPitchRateRPSList() {
        return java.util.Collections.unmodifiableList(pitchRateRPS_);
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public int getPitchRateRPSCount() {
        return pitchRateRPS_.size();
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public double getPitchRateRPS(int index) {
        return pitchRateRPS_.get(index);
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public Builder setPitchRateRPS(
          int index, double value) {
        ensurePitchRateRPSIsMutable();
        pitchRateRPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public Builder addPitchRateRPS(double value) {
        ensurePitchRateRPSIsMutable();
        pitchRateRPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public Builder addAllPitchRateRPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensurePitchRateRPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pitchRateRPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double pitchRateRPS = 9;</code>
       */
      public Builder clearPitchRateRPS() {
        pitchRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> yawRateRPS_ = java.util.Collections.emptyList();
      private void ensureYawRateRPSIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          yawRateRPS_ = new java.util.ArrayList<java.lang.Double>(yawRateRPS_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public java.util.List<java.lang.Double>
          getYawRateRPSList() {
        return java.util.Collections.unmodifiableList(yawRateRPS_);
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public int getYawRateRPSCount() {
        return yawRateRPS_.size();
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public double getYawRateRPS(int index) {
        return yawRateRPS_.get(index);
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public Builder setYawRateRPS(
          int index, double value) {
        ensureYawRateRPSIsMutable();
        yawRateRPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public Builder addYawRateRPS(double value) {
        ensureYawRateRPSIsMutable();
        yawRateRPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public Builder addAllYawRateRPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureYawRateRPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, yawRateRPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yawRateRPS = 10;</code>
       */
      public Builder clearYawRateRPS() {
        yawRateRPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> forwardRateMPS_ = java.util.Collections.emptyList();
      private void ensureForwardRateMPSIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          forwardRateMPS_ = new java.util.ArrayList<java.lang.Double>(forwardRateMPS_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public java.util.List<java.lang.Double>
          getForwardRateMPSList() {
        return java.util.Collections.unmodifiableList(forwardRateMPS_);
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public int getForwardRateMPSCount() {
        return forwardRateMPS_.size();
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public double getForwardRateMPS(int index) {
        return forwardRateMPS_.get(index);
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public Builder setForwardRateMPS(
          int index, double value) {
        ensureForwardRateMPSIsMutable();
        forwardRateMPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public Builder addForwardRateMPS(double value) {
        ensureForwardRateMPSIsMutable();
        forwardRateMPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public Builder addAllForwardRateMPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureForwardRateMPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, forwardRateMPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double forwardRateMPS = 11;</code>
       */
      public Builder clearForwardRateMPS() {
        forwardRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> rightRateMPS_ = java.util.Collections.emptyList();
      private void ensureRightRateMPSIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          rightRateMPS_ = new java.util.ArrayList<java.lang.Double>(rightRateMPS_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public java.util.List<java.lang.Double>
          getRightRateMPSList() {
        return java.util.Collections.unmodifiableList(rightRateMPS_);
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public int getRightRateMPSCount() {
        return rightRateMPS_.size();
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public double getRightRateMPS(int index) {
        return rightRateMPS_.get(index);
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public Builder setRightRateMPS(
          int index, double value) {
        ensureRightRateMPSIsMutable();
        rightRateMPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public Builder addRightRateMPS(double value) {
        ensureRightRateMPSIsMutable();
        rightRateMPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public Builder addAllRightRateMPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureRightRateMPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rightRateMPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double rightRateMPS = 12;</code>
       */
      public Builder clearRightRateMPS() {
        rightRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> downRateMPS_ = java.util.Collections.emptyList();
      private void ensureDownRateMPSIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          downRateMPS_ = new java.util.ArrayList<java.lang.Double>(downRateMPS_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public java.util.List<java.lang.Double>
          getDownRateMPSList() {
        return java.util.Collections.unmodifiableList(downRateMPS_);
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public int getDownRateMPSCount() {
        return downRateMPS_.size();
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public double getDownRateMPS(int index) {
        return downRateMPS_.get(index);
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public Builder setDownRateMPS(
          int index, double value) {
        ensureDownRateMPSIsMutable();
        downRateMPS_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public Builder addDownRateMPS(double value) {
        ensureDownRateMPSIsMutable();
        downRateMPS_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public Builder addAllDownRateMPS(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureDownRateMPSIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, downRateMPS_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double downRateMPS = 13;</code>
       */
      public Builder clearDownRateMPS() {
        downRateMPS_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.Waystates)
    }

    static {
      defaultInstance = new Waystates(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.Waystates)
  }

  public interface CtrlOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.Ctrl)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    java.util.List<java.lang.Double> getURealList();
    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    int getURealCount();
    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    double getUReal(int index);

    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    java.util.List<java.lang.Integer> getUIntList();
    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    int getUIntCount();
    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    int getUInt(int index);
  }
  /**
   * Protobuf type {@code nav.Ctrl}
   */
  public static final class Ctrl extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.Ctrl)
      CtrlOrBuilder {
    // Use Ctrl.newBuilder() to construct.
    private Ctrl(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Ctrl(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Ctrl defaultInstance;
    public static Ctrl getDefaultInstance() {
      return defaultInstance;
    }

    public Ctrl getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Ctrl(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                uReal_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              uReal_.add(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                uReal_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                uReal_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                uInt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              uInt_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                uInt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                uInt_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          uReal_ = java.util.Collections.unmodifiableList(uReal_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          uInt_ = java.util.Collections.unmodifiableList(uInt_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_Ctrl_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_Ctrl_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.Ctrl.class, nav.Ctrl.Builder.class);
    }

    public static com.google.protobuf.Parser<Ctrl> PARSER =
        new com.google.protobuf.AbstractParser<Ctrl>() {
      public Ctrl parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Ctrl(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Ctrl> getParserForType() {
      return PARSER;
    }

    public static final int UREAL_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> uReal_;
    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    public java.util.List<java.lang.Double>
        getURealList() {
      return uReal_;
    }
    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    public int getURealCount() {
      return uReal_.size();
    }
    /**
     * <code>repeated double uReal = 1;</code>
     *
     * <pre>
     * real control signals
     * </pre>
     */
    public double getUReal(int index) {
      return uReal_.get(index);
    }

    public static final int UINT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> uInt_;
    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getUIntList() {
      return uInt_;
    }
    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    public int getUIntCount() {
      return uInt_.size();
    }
    /**
     * <code>repeated int32 uInt = 2;</code>
     *
     * <pre>
     * integer control signals
     * </pre>
     */
    public int getUInt(int index) {
      return uInt_.get(index);
    }

    private void initFields() {
      uReal_ = java.util.Collections.emptyList();
      uInt_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < uReal_.size(); i++) {
        output.writeDouble(1, uReal_.get(i));
      }
      for (int i = 0; i < uInt_.size(); i++) {
        output.writeInt32(2, uInt_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getURealList().size();
        size += dataSize;
        size += 1 * getURealList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < uInt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(uInt_.get(i));
        }
        size += dataSize;
        size += 1 * getUIntList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.Ctrl parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Ctrl parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Ctrl parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Ctrl parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Ctrl parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Ctrl parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.Ctrl parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.Ctrl parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.Ctrl parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Ctrl parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.Ctrl prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.Ctrl}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.Ctrl)
        nav.CtrlOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_Ctrl_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_Ctrl_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.Ctrl.class, nav.Ctrl.Builder.class);
      }

      // Construct using nav.Ctrl.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        uReal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        uInt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_Ctrl_descriptor;
      }

      public nav.Ctrl getDefaultInstanceForType() {
        return nav.Ctrl.getDefaultInstance();
      }

      public nav.Ctrl build() {
        nav.Ctrl result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.Ctrl buildPartial() {
        nav.Ctrl result = new nav.Ctrl(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          uReal_ = java.util.Collections.unmodifiableList(uReal_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.uReal_ = uReal_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          uInt_ = java.util.Collections.unmodifiableList(uInt_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.uInt_ = uInt_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.Ctrl) {
          return mergeFrom((nav.Ctrl)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.Ctrl other) {
        if (other == nav.Ctrl.getDefaultInstance()) return this;
        if (!other.uReal_.isEmpty()) {
          if (uReal_.isEmpty()) {
            uReal_ = other.uReal_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureURealIsMutable();
            uReal_.addAll(other.uReal_);
          }
          onChanged();
        }
        if (!other.uInt_.isEmpty()) {
          if (uInt_.isEmpty()) {
            uInt_ = other.uInt_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUIntIsMutable();
            uInt_.addAll(other.uInt_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.Ctrl parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.Ctrl) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Double> uReal_ = java.util.Collections.emptyList();
      private void ensureURealIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          uReal_ = new java.util.ArrayList<java.lang.Double>(uReal_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getURealList() {
        return java.util.Collections.unmodifiableList(uReal_);
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public int getURealCount() {
        return uReal_.size();
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public double getUReal(int index) {
        return uReal_.get(index);
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public Builder setUReal(
          int index, double value) {
        ensureURealIsMutable();
        uReal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public Builder addUReal(double value) {
        ensureURealIsMutable();
        uReal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public Builder addAllUReal(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureURealIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uReal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double uReal = 1;</code>
       *
       * <pre>
       * real control signals
       * </pre>
       */
      public Builder clearUReal() {
        uReal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> uInt_ = java.util.Collections.emptyList();
      private void ensureUIntIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          uInt_ = new java.util.ArrayList<java.lang.Integer>(uInt_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getUIntList() {
        return java.util.Collections.unmodifiableList(uInt_);
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public int getUIntCount() {
        return uInt_.size();
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public int getUInt(int index) {
        return uInt_.get(index);
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public Builder setUInt(
          int index, int value) {
        ensureUIntIsMutable();
        uInt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public Builder addUInt(int value) {
        ensureUIntIsMutable();
        uInt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public Builder addAllUInt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureUIntIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uInt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 uInt = 2;</code>
       *
       * <pre>
       * integer control signals
       * </pre>
       */
      public Builder clearUInt() {
        uInt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.Ctrl)
    }

    static {
      defaultInstance = new Ctrl(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.Ctrl)
  }

  public interface ImgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.Img)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     *
     * <pre>
     * image time stamp
     * </pre>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     *
     * <pre>
     * image time stamp
     * </pre>
     */
    double getTimeS();

    /**
     * <code>required double fovR = 2;</code>
     *
     * <pre>
     * camera field of view
     * </pre>
     */
    boolean hasFovR();
    /**
     * <code>required double fovR = 2;</code>
     *
     * <pre>
     * camera field of view
     * </pre>
     */
    double getFovR();

    /**
     * <code>required uint32 steps = 3;</code>
     *
     * <pre>
     * number of pixels in contiguous dimension
     * </pre>
     */
    boolean hasSteps();
    /**
     * <code>required uint32 steps = 3;</code>
     *
     * <pre>
     * number of pixels in contiguous dimension
     * </pre>
     */
    int getSteps();

    /**
     * <code>required uint32 strides = 4;</code>
     *
     * <pre>
     * number of pixels in non-contiguous dimension
     * </pre>
     */
    boolean hasStrides();
    /**
     * <code>required uint32 strides = 4;</code>
     *
     * <pre>
     * number of pixels in non-contiguous dimension
     * </pre>
     */
    int getStrides();

    /**
     * <code>required uint32 layers = 5;</code>
     *
     * <pre>
     * number of color channels
     * </pre>
     */
    boolean hasLayers();
    /**
     * <code>required uint32 layers = 5;</code>
     *
     * <pre>
     * number of color channels
     * </pre>
     */
    int getLayers();

    /**
     * <code>required bytes data = 6;</code>
     *
     * <pre>
     * image data in array form
     * </pre>
     */
    boolean hasData();
    /**
     * <code>required bytes data = 6;</code>
     *
     * <pre>
     * image data in array form
     * </pre>
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code nav.Img}
   */
  public static final class Img extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.Img)
      ImgOrBuilder {
    // Use Img.newBuilder() to construct.
    private Img(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Img(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Img defaultInstance;
    public static Img getDefaultInstance() {
      return defaultInstance;
    }

    public Img getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Img(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              fovR_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              steps_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              strides_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              layers_ = input.readUInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              data_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_Img_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_Img_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.Img.class, nav.Img.Builder.class);
    }

    public static com.google.protobuf.Parser<Img> PARSER =
        new com.google.protobuf.AbstractParser<Img>() {
      public Img parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Img(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Img> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     *
     * <pre>
     * image time stamp
     * </pre>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     *
     * <pre>
     * image time stamp
     * </pre>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int FOVR_FIELD_NUMBER = 2;
    private double fovR_;
    /**
     * <code>required double fovR = 2;</code>
     *
     * <pre>
     * camera field of view
     * </pre>
     */
    public boolean hasFovR() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double fovR = 2;</code>
     *
     * <pre>
     * camera field of view
     * </pre>
     */
    public double getFovR() {
      return fovR_;
    }

    public static final int STEPS_FIELD_NUMBER = 3;
    private int steps_;
    /**
     * <code>required uint32 steps = 3;</code>
     *
     * <pre>
     * number of pixels in contiguous dimension
     * </pre>
     */
    public boolean hasSteps() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 steps = 3;</code>
     *
     * <pre>
     * number of pixels in contiguous dimension
     * </pre>
     */
    public int getSteps() {
      return steps_;
    }

    public static final int STRIDES_FIELD_NUMBER = 4;
    private int strides_;
    /**
     * <code>required uint32 strides = 4;</code>
     *
     * <pre>
     * number of pixels in non-contiguous dimension
     * </pre>
     */
    public boolean hasStrides() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 strides = 4;</code>
     *
     * <pre>
     * number of pixels in non-contiguous dimension
     * </pre>
     */
    public int getStrides() {
      return strides_;
    }

    public static final int LAYERS_FIELD_NUMBER = 5;
    private int layers_;
    /**
     * <code>required uint32 layers = 5;</code>
     *
     * <pre>
     * number of color channels
     * </pre>
     */
    public boolean hasLayers() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 layers = 5;</code>
     *
     * <pre>
     * number of color channels
     * </pre>
     */
    public int getLayers() {
      return layers_;
    }

    public static final int DATA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>required bytes data = 6;</code>
     *
     * <pre>
     * image data in array form
     * </pre>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required bytes data = 6;</code>
     *
     * <pre>
     * image data in array form
     * </pre>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private void initFields() {
      timeS_ = 0D;
      fovR_ = 0D;
      steps_ = 0;
      strides_ = 0;
      layers_ = 0;
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFovR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSteps()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStrides()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLayers()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasData()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, fovR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, steps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, strides_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, layers_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, fovR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, steps_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, strides_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, layers_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.Img parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Img parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Img parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Img parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Img parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Img parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.Img parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.Img parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.Img parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Img parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.Img prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.Img}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.Img)
        nav.ImgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_Img_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_Img_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.Img.class, nav.Img.Builder.class);
      }

      // Construct using nav.Img.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        fovR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        steps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        strides_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        layers_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        data_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_Img_descriptor;
      }

      public nav.Img getDefaultInstanceForType() {
        return nav.Img.getDefaultInstance();
      }

      public nav.Img build() {
        nav.Img result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.Img buildPartial() {
        nav.Img result = new nav.Img(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fovR_ = fovR_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.steps_ = steps_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.strides_ = strides_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.layers_ = layers_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.Img) {
          return mergeFrom((nav.Img)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.Img other) {
        if (other == nav.Img.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasFovR()) {
          setFovR(other.getFovR());
        }
        if (other.hasSteps()) {
          setSteps(other.getSteps());
        }
        if (other.hasStrides()) {
          setStrides(other.getStrides());
        }
        if (other.hasLayers()) {
          setLayers(other.getLayers());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasFovR()) {
          
          return false;
        }
        if (!hasSteps()) {
          
          return false;
        }
        if (!hasStrides()) {
          
          return false;
        }
        if (!hasLayers()) {
          
          return false;
        }
        if (!hasData()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.Img parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.Img) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       *
       * <pre>
       * image time stamp
       * </pre>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       *
       * <pre>
       * image time stamp
       * </pre>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       *
       * <pre>
       * image time stamp
       * </pre>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       *
       * <pre>
       * image time stamp
       * </pre>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double fovR_ ;
      /**
       * <code>required double fovR = 2;</code>
       *
       * <pre>
       * camera field of view
       * </pre>
       */
      public boolean hasFovR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double fovR = 2;</code>
       *
       * <pre>
       * camera field of view
       * </pre>
       */
      public double getFovR() {
        return fovR_;
      }
      /**
       * <code>required double fovR = 2;</code>
       *
       * <pre>
       * camera field of view
       * </pre>
       */
      public Builder setFovR(double value) {
        bitField0_ |= 0x00000002;
        fovR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double fovR = 2;</code>
       *
       * <pre>
       * camera field of view
       * </pre>
       */
      public Builder clearFovR() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fovR_ = 0D;
        onChanged();
        return this;
      }

      private int steps_ ;
      /**
       * <code>required uint32 steps = 3;</code>
       *
       * <pre>
       * number of pixels in contiguous dimension
       * </pre>
       */
      public boolean hasSteps() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 steps = 3;</code>
       *
       * <pre>
       * number of pixels in contiguous dimension
       * </pre>
       */
      public int getSteps() {
        return steps_;
      }
      /**
       * <code>required uint32 steps = 3;</code>
       *
       * <pre>
       * number of pixels in contiguous dimension
       * </pre>
       */
      public Builder setSteps(int value) {
        bitField0_ |= 0x00000004;
        steps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 steps = 3;</code>
       *
       * <pre>
       * number of pixels in contiguous dimension
       * </pre>
       */
      public Builder clearSteps() {
        bitField0_ = (bitField0_ & ~0x00000004);
        steps_ = 0;
        onChanged();
        return this;
      }

      private int strides_ ;
      /**
       * <code>required uint32 strides = 4;</code>
       *
       * <pre>
       * number of pixels in non-contiguous dimension
       * </pre>
       */
      public boolean hasStrides() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 strides = 4;</code>
       *
       * <pre>
       * number of pixels in non-contiguous dimension
       * </pre>
       */
      public int getStrides() {
        return strides_;
      }
      /**
       * <code>required uint32 strides = 4;</code>
       *
       * <pre>
       * number of pixels in non-contiguous dimension
       * </pre>
       */
      public Builder setStrides(int value) {
        bitField0_ |= 0x00000008;
        strides_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 strides = 4;</code>
       *
       * <pre>
       * number of pixels in non-contiguous dimension
       * </pre>
       */
      public Builder clearStrides() {
        bitField0_ = (bitField0_ & ~0x00000008);
        strides_ = 0;
        onChanged();
        return this;
      }

      private int layers_ ;
      /**
       * <code>required uint32 layers = 5;</code>
       *
       * <pre>
       * number of color channels
       * </pre>
       */
      public boolean hasLayers() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 layers = 5;</code>
       *
       * <pre>
       * number of color channels
       * </pre>
       */
      public int getLayers() {
        return layers_;
      }
      /**
       * <code>required uint32 layers = 5;</code>
       *
       * <pre>
       * number of color channels
       * </pre>
       */
      public Builder setLayers(int value) {
        bitField0_ |= 0x00000010;
        layers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 layers = 5;</code>
       *
       * <pre>
       * number of color channels
       * </pre>
       */
      public Builder clearLayers() {
        bitField0_ = (bitField0_ & ~0x00000010);
        layers_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       * image data in array form
       * </pre>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       * image data in array form
       * </pre>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       * image data in array form
       * </pre>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes data = 6;</code>
       *
       * <pre>
       * image data in array form
       * </pre>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000020);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.Img)
    }

    static {
      defaultInstance = new Img(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.Img)
  }

  public interface RPYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.RPY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double rollR = 2;</code>
     */
    boolean hasRollR();
    /**
     * <code>required double rollR = 2;</code>
     */
    double getRollR();

    /**
     * <code>required double pitchR = 3;</code>
     */
    boolean hasPitchR();
    /**
     * <code>required double pitchR = 3;</code>
     */
    double getPitchR();

    /**
     * <code>required double yawR = 4;</code>
     */
    boolean hasYawR();
    /**
     * <code>required double yawR = 4;</code>
     */
    double getYawR();

    /**
     * <code>optional double rollSigmaR = 5 [default = 0];</code>
     */
    boolean hasRollSigmaR();
    /**
     * <code>optional double rollSigmaR = 5 [default = 0];</code>
     */
    double getRollSigmaR();

    /**
     * <code>optional double pitchSigmaR = 6 [default = 0];</code>
     */
    boolean hasPitchSigmaR();
    /**
     * <code>optional double pitchSigmaR = 6 [default = 0];</code>
     */
    double getPitchSigmaR();

    /**
     * <code>optional double yawSigmaR = 7 [default = 0];</code>
     */
    boolean hasYawSigmaR();
    /**
     * <code>optional double yawSigmaR = 7 [default = 0];</code>
     */
    double getYawSigmaR();
  }
  /**
   * Protobuf type {@code nav.RPY}
   */
  public static final class RPY extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.RPY)
      RPYOrBuilder {
    // Use RPY.newBuilder() to construct.
    private RPY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RPY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RPY defaultInstance;
    public static RPY getDefaultInstance() {
      return defaultInstance;
    }

    public RPY getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RPY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              rollR_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              pitchR_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              yawR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              rollSigmaR_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              pitchSigmaR_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              yawSigmaR_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_RPY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_RPY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.RPY.class, nav.RPY.Builder.class);
    }

    public static com.google.protobuf.Parser<RPY> PARSER =
        new com.google.protobuf.AbstractParser<RPY>() {
      public RPY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RPY(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RPY> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int ROLLR_FIELD_NUMBER = 2;
    private double rollR_;
    /**
     * <code>required double rollR = 2;</code>
     */
    public boolean hasRollR() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double rollR = 2;</code>
     */
    public double getRollR() {
      return rollR_;
    }

    public static final int PITCHR_FIELD_NUMBER = 3;
    private double pitchR_;
    /**
     * <code>required double pitchR = 3;</code>
     */
    public boolean hasPitchR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double pitchR = 3;</code>
     */
    public double getPitchR() {
      return pitchR_;
    }

    public static final int YAWR_FIELD_NUMBER = 4;
    private double yawR_;
    /**
     * <code>required double yawR = 4;</code>
     */
    public boolean hasYawR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double yawR = 4;</code>
     */
    public double getYawR() {
      return yawR_;
    }

    public static final int ROLLSIGMAR_FIELD_NUMBER = 5;
    private double rollSigmaR_;
    /**
     * <code>optional double rollSigmaR = 5 [default = 0];</code>
     */
    public boolean hasRollSigmaR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double rollSigmaR = 5 [default = 0];</code>
     */
    public double getRollSigmaR() {
      return rollSigmaR_;
    }

    public static final int PITCHSIGMAR_FIELD_NUMBER = 6;
    private double pitchSigmaR_;
    /**
     * <code>optional double pitchSigmaR = 6 [default = 0];</code>
     */
    public boolean hasPitchSigmaR() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double pitchSigmaR = 6 [default = 0];</code>
     */
    public double getPitchSigmaR() {
      return pitchSigmaR_;
    }

    public static final int YAWSIGMAR_FIELD_NUMBER = 7;
    private double yawSigmaR_;
    /**
     * <code>optional double yawSigmaR = 7 [default = 0];</code>
     */
    public boolean hasYawSigmaR() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double yawSigmaR = 7 [default = 0];</code>
     */
    public double getYawSigmaR() {
      return yawSigmaR_;
    }

    private void initFields() {
      timeS_ = 0D;
      rollR_ = 0D;
      pitchR_ = 0D;
      yawR_ = 0D;
      rollSigmaR_ = 0D;
      pitchSigmaR_ = 0D;
      yawSigmaR_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, rollR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, pitchR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, yawR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, rollSigmaR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, yawSigmaR_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, rollR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, pitchR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, yawR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, rollSigmaR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, yawSigmaR_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.RPY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RPY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RPY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RPY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RPY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RPY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.RPY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.RPY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.RPY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RPY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.RPY prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.RPY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.RPY)
        nav.RPYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_RPY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_RPY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.RPY.class, nav.RPY.Builder.class);
      }

      // Construct using nav.RPY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        rollR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        pitchR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        yawR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        rollSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        pitchSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        yawSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_RPY_descriptor;
      }

      public nav.RPY getDefaultInstanceForType() {
        return nav.RPY.getDefaultInstance();
      }

      public nav.RPY build() {
        nav.RPY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.RPY buildPartial() {
        nav.RPY result = new nav.RPY(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rollR_ = rollR_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pitchR_ = pitchR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.yawR_ = yawR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rollSigmaR_ = rollSigmaR_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pitchSigmaR_ = pitchSigmaR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.yawSigmaR_ = yawSigmaR_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.RPY) {
          return mergeFrom((nav.RPY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.RPY other) {
        if (other == nav.RPY.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasRollR()) {
          setRollR(other.getRollR());
        }
        if (other.hasPitchR()) {
          setPitchR(other.getPitchR());
        }
        if (other.hasYawR()) {
          setYawR(other.getYawR());
        }
        if (other.hasRollSigmaR()) {
          setRollSigmaR(other.getRollSigmaR());
        }
        if (other.hasPitchSigmaR()) {
          setPitchSigmaR(other.getPitchSigmaR());
        }
        if (other.hasYawSigmaR()) {
          setYawSigmaR(other.getYawSigmaR());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasRollR()) {
          
          return false;
        }
        if (!hasPitchR()) {
          
          return false;
        }
        if (!hasYawR()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.RPY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.RPY) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double rollR_ ;
      /**
       * <code>required double rollR = 2;</code>
       */
      public boolean hasRollR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double rollR = 2;</code>
       */
      public double getRollR() {
        return rollR_;
      }
      /**
       * <code>required double rollR = 2;</code>
       */
      public Builder setRollR(double value) {
        bitField0_ |= 0x00000002;
        rollR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollR = 2;</code>
       */
      public Builder clearRollR() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rollR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchR_ ;
      /**
       * <code>required double pitchR = 3;</code>
       */
      public boolean hasPitchR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double pitchR = 3;</code>
       */
      public double getPitchR() {
        return pitchR_;
      }
      /**
       * <code>required double pitchR = 3;</code>
       */
      public Builder setPitchR(double value) {
        bitField0_ |= 0x00000004;
        pitchR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchR = 3;</code>
       */
      public Builder clearPitchR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pitchR_ = 0D;
        onChanged();
        return this;
      }

      private double yawR_ ;
      /**
       * <code>required double yawR = 4;</code>
       */
      public boolean hasYawR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double yawR = 4;</code>
       */
      public double getYawR() {
        return yawR_;
      }
      /**
       * <code>required double yawR = 4;</code>
       */
      public Builder setYawR(double value) {
        bitField0_ |= 0x00000008;
        yawR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawR = 4;</code>
       */
      public Builder clearYawR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yawR_ = 0D;
        onChanged();
        return this;
      }

      private double rollSigmaR_ ;
      /**
       * <code>optional double rollSigmaR = 5 [default = 0];</code>
       */
      public boolean hasRollSigmaR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double rollSigmaR = 5 [default = 0];</code>
       */
      public double getRollSigmaR() {
        return rollSigmaR_;
      }
      /**
       * <code>optional double rollSigmaR = 5 [default = 0];</code>
       */
      public Builder setRollSigmaR(double value) {
        bitField0_ |= 0x00000010;
        rollSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollSigmaR = 5 [default = 0];</code>
       */
      public Builder clearRollSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rollSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchSigmaR_ ;
      /**
       * <code>optional double pitchSigmaR = 6 [default = 0];</code>
       */
      public boolean hasPitchSigmaR() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double pitchSigmaR = 6 [default = 0];</code>
       */
      public double getPitchSigmaR() {
        return pitchSigmaR_;
      }
      /**
       * <code>optional double pitchSigmaR = 6 [default = 0];</code>
       */
      public Builder setPitchSigmaR(double value) {
        bitField0_ |= 0x00000020;
        pitchSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchSigmaR = 6 [default = 0];</code>
       */
      public Builder clearPitchSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pitchSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawSigmaR_ ;
      /**
       * <code>optional double yawSigmaR = 7 [default = 0];</code>
       */
      public boolean hasYawSigmaR() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double yawSigmaR = 7 [default = 0];</code>
       */
      public double getYawSigmaR() {
        return yawSigmaR_;
      }
      /**
       * <code>optional double yawSigmaR = 7 [default = 0];</code>
       */
      public Builder setYawSigmaR(double value) {
        bitField0_ |= 0x00000040;
        yawSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawSigmaR = 7 [default = 0];</code>
       */
      public Builder clearYawSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000040);
        yawSigmaR_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.RPY)
    }

    static {
      defaultInstance = new RPY(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.RPY)
  }

  public interface LatLonOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.LatLon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double latR = 2;</code>
     */
    boolean hasLatR();
    /**
     * <code>required double latR = 2;</code>
     */
    double getLatR();

    /**
     * <code>required double lonR = 3;</code>
     */
    boolean hasLonR();
    /**
     * <code>required double lonR = 3;</code>
     */
    double getLonR();

    /**
     * <code>optional double latSigmaR = 4 [default = 0];</code>
     */
    boolean hasLatSigmaR();
    /**
     * <code>optional double latSigmaR = 4 [default = 0];</code>
     */
    double getLatSigmaR();

    /**
     * <code>optional double lonSigmaR = 5 [default = 0];</code>
     */
    boolean hasLonSigmaR();
    /**
     * <code>optional double lonSigmaR = 5 [default = 0];</code>
     */
    double getLonSigmaR();
  }
  /**
   * Protobuf type {@code nav.LatLon}
   */
  public static final class LatLon extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.LatLon)
      LatLonOrBuilder {
    // Use LatLon.newBuilder() to construct.
    private LatLon(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LatLon(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LatLon defaultInstance;
    public static LatLon getDefaultInstance() {
      return defaultInstance;
    }

    public LatLon getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LatLon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              latR_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              lonR_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              latSigmaR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              lonSigmaR_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_LatLon_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_LatLon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.LatLon.class, nav.LatLon.Builder.class);
    }

    public static com.google.protobuf.Parser<LatLon> PARSER =
        new com.google.protobuf.AbstractParser<LatLon>() {
      public LatLon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LatLon(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<LatLon> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int LATR_FIELD_NUMBER = 2;
    private double latR_;
    /**
     * <code>required double latR = 2;</code>
     */
    public boolean hasLatR() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double latR = 2;</code>
     */
    public double getLatR() {
      return latR_;
    }

    public static final int LONR_FIELD_NUMBER = 3;
    private double lonR_;
    /**
     * <code>required double lonR = 3;</code>
     */
    public boolean hasLonR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double lonR = 3;</code>
     */
    public double getLonR() {
      return lonR_;
    }

    public static final int LATSIGMAR_FIELD_NUMBER = 4;
    private double latSigmaR_;
    /**
     * <code>optional double latSigmaR = 4 [default = 0];</code>
     */
    public boolean hasLatSigmaR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double latSigmaR = 4 [default = 0];</code>
     */
    public double getLatSigmaR() {
      return latSigmaR_;
    }

    public static final int LONSIGMAR_FIELD_NUMBER = 5;
    private double lonSigmaR_;
    /**
     * <code>optional double lonSigmaR = 5 [default = 0];</code>
     */
    public boolean hasLonSigmaR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double lonSigmaR = 5 [default = 0];</code>
     */
    public double getLonSigmaR() {
      return lonSigmaR_;
    }

    private void initFields() {
      timeS_ = 0D;
      latR_ = 0D;
      lonR_ = 0D;
      latSigmaR_ = 0D;
      lonSigmaR_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLonR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, latR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, lonR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, latSigmaR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, lonSigmaR_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, latR_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lonR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, latSigmaR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lonSigmaR_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.LatLon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LatLon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LatLon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.LatLon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.LatLon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LatLon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.LatLon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.LatLon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.LatLon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.LatLon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.LatLon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.LatLon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.LatLon)
        nav.LatLonOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_LatLon_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_LatLon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.LatLon.class, nav.LatLon.Builder.class);
      }

      // Construct using nav.LatLon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        latR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        lonR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        latSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        lonSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_LatLon_descriptor;
      }

      public nav.LatLon getDefaultInstanceForType() {
        return nav.LatLon.getDefaultInstance();
      }

      public nav.LatLon build() {
        nav.LatLon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.LatLon buildPartial() {
        nav.LatLon result = new nav.LatLon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.latR_ = latR_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lonR_ = lonR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.latSigmaR_ = latSigmaR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.lonSigmaR_ = lonSigmaR_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.LatLon) {
          return mergeFrom((nav.LatLon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.LatLon other) {
        if (other == nav.LatLon.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasLatR()) {
          setLatR(other.getLatR());
        }
        if (other.hasLonR()) {
          setLonR(other.getLonR());
        }
        if (other.hasLatSigmaR()) {
          setLatSigmaR(other.getLatSigmaR());
        }
        if (other.hasLonSigmaR()) {
          setLonSigmaR(other.getLonSigmaR());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasLatR()) {
          
          return false;
        }
        if (!hasLonR()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.LatLon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.LatLon) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double latR_ ;
      /**
       * <code>required double latR = 2;</code>
       */
      public boolean hasLatR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double latR = 2;</code>
       */
      public double getLatR() {
        return latR_;
      }
      /**
       * <code>required double latR = 2;</code>
       */
      public Builder setLatR(double value) {
        bitField0_ |= 0x00000002;
        latR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double latR = 2;</code>
       */
      public Builder clearLatR() {
        bitField0_ = (bitField0_ & ~0x00000002);
        latR_ = 0D;
        onChanged();
        return this;
      }

      private double lonR_ ;
      /**
       * <code>required double lonR = 3;</code>
       */
      public boolean hasLonR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double lonR = 3;</code>
       */
      public double getLonR() {
        return lonR_;
      }
      /**
       * <code>required double lonR = 3;</code>
       */
      public Builder setLonR(double value) {
        bitField0_ |= 0x00000004;
        lonR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double lonR = 3;</code>
       */
      public Builder clearLonR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lonR_ = 0D;
        onChanged();
        return this;
      }

      private double latSigmaR_ ;
      /**
       * <code>optional double latSigmaR = 4 [default = 0];</code>
       */
      public boolean hasLatSigmaR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double latSigmaR = 4 [default = 0];</code>
       */
      public double getLatSigmaR() {
        return latSigmaR_;
      }
      /**
       * <code>optional double latSigmaR = 4 [default = 0];</code>
       */
      public Builder setLatSigmaR(double value) {
        bitField0_ |= 0x00000008;
        latSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latSigmaR = 4 [default = 0];</code>
       */
      public Builder clearLatSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        latSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double lonSigmaR_ ;
      /**
       * <code>optional double lonSigmaR = 5 [default = 0];</code>
       */
      public boolean hasLonSigmaR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double lonSigmaR = 5 [default = 0];</code>
       */
      public double getLonSigmaR() {
        return lonSigmaR_;
      }
      /**
       * <code>optional double lonSigmaR = 5 [default = 0];</code>
       */
      public Builder setLonSigmaR(double value) {
        bitField0_ |= 0x00000010;
        lonSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lonSigmaR = 5 [default = 0];</code>
       */
      public Builder clearLonSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lonSigmaR_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.LatLon)
    }

    static {
      defaultInstance = new LatLon(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.LatLon)
  }

  public interface AltOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.Alt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double altM = 2;</code>
     */
    boolean hasAltM();
    /**
     * <code>required double altM = 2;</code>
     */
    double getAltM();

    /**
     * <code>optional double altSigmaM = 3 [default = 0];</code>
     */
    boolean hasAltSigmaM();
    /**
     * <code>optional double altSigmaM = 3 [default = 0];</code>
     */
    double getAltSigmaM();
  }
  /**
   * Protobuf type {@code nav.Alt}
   */
  public static final class Alt extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.Alt)
      AltOrBuilder {
    // Use Alt.newBuilder() to construct.
    private Alt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Alt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Alt defaultInstance;
    public static Alt getDefaultInstance() {
      return defaultInstance;
    }

    public Alt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Alt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              altM_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              altSigmaM_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_Alt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_Alt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.Alt.class, nav.Alt.Builder.class);
    }

    public static com.google.protobuf.Parser<Alt> PARSER =
        new com.google.protobuf.AbstractParser<Alt>() {
      public Alt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Alt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Alt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int ALTM_FIELD_NUMBER = 2;
    private double altM_;
    /**
     * <code>required double altM = 2;</code>
     */
    public boolean hasAltM() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double altM = 2;</code>
     */
    public double getAltM() {
      return altM_;
    }

    public static final int ALTSIGMAM_FIELD_NUMBER = 3;
    private double altSigmaM_;
    /**
     * <code>optional double altSigmaM = 3 [default = 0];</code>
     */
    public boolean hasAltSigmaM() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double altSigmaM = 3 [default = 0];</code>
     */
    public double getAltSigmaM() {
      return altSigmaM_;
    }

    private void initFields() {
      timeS_ = 0D;
      altM_ = 0D;
      altSigmaM_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAltM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, altM_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, altSigmaM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, altM_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, altSigmaM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.Alt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Alt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Alt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.Alt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.Alt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Alt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.Alt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.Alt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.Alt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.Alt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.Alt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.Alt}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.Alt)
        nav.AltOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_Alt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_Alt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.Alt.class, nav.Alt.Builder.class);
      }

      // Construct using nav.Alt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        altM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        altSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_Alt_descriptor;
      }

      public nav.Alt getDefaultInstanceForType() {
        return nav.Alt.getDefaultInstance();
      }

      public nav.Alt build() {
        nav.Alt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.Alt buildPartial() {
        nav.Alt result = new nav.Alt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.altM_ = altM_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.altSigmaM_ = altSigmaM_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.Alt) {
          return mergeFrom((nav.Alt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.Alt other) {
        if (other == nav.Alt.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasAltM()) {
          setAltM(other.getAltM());
        }
        if (other.hasAltSigmaM()) {
          setAltSigmaM(other.getAltSigmaM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasAltM()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.Alt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.Alt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double altM_ ;
      /**
       * <code>required double altM = 2;</code>
       */
      public boolean hasAltM() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double altM = 2;</code>
       */
      public double getAltM() {
        return altM_;
      }
      /**
       * <code>required double altM = 2;</code>
       */
      public Builder setAltM(double value) {
        bitField0_ |= 0x00000002;
        altM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double altM = 2;</code>
       */
      public Builder clearAltM() {
        bitField0_ = (bitField0_ & ~0x00000002);
        altM_ = 0D;
        onChanged();
        return this;
      }

      private double altSigmaM_ ;
      /**
       * <code>optional double altSigmaM = 3 [default = 0];</code>
       */
      public boolean hasAltSigmaM() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double altSigmaM = 3 [default = 0];</code>
       */
      public double getAltSigmaM() {
        return altSigmaM_;
      }
      /**
       * <code>optional double altSigmaM = 3 [default = 0];</code>
       */
      public Builder setAltSigmaM(double value) {
        bitField0_ |= 0x00000004;
        altSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double altSigmaM = 3 [default = 0];</code>
       */
      public Builder clearAltSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000004);
        altSigmaM_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.Alt)
    }

    static {
      defaultInstance = new Alt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.Alt)
  }

  public interface BodyRPYDeltaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.BodyRPYDelta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    boolean hasTimeDeltaS();
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    double getTimeDeltaS();

    /**
     * <code>required double rollDeltaR = 3;</code>
     */
    boolean hasRollDeltaR();
    /**
     * <code>required double rollDeltaR = 3;</code>
     */
    double getRollDeltaR();

    /**
     * <code>required double pitchDeltaR = 4;</code>
     */
    boolean hasPitchDeltaR();
    /**
     * <code>required double pitchDeltaR = 4;</code>
     */
    double getPitchDeltaR();

    /**
     * <code>required double yawDeltaR = 5;</code>
     */
    boolean hasYawDeltaR();
    /**
     * <code>required double yawDeltaR = 5;</code>
     */
    double getYawDeltaR();

    /**
     * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
     */
    boolean hasRollDeltaSigmaRPS();
    /**
     * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
     */
    double getRollDeltaSigmaRPS();

    /**
     * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
     */
    boolean hasPitchDeltaSigmaRPS();
    /**
     * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
     */
    double getPitchDeltaSigmaRPS();

    /**
     * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
     */
    boolean hasYawDeltaSigmaRPS();
    /**
     * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
     */
    double getYawDeltaSigmaRPS();
  }
  /**
   * Protobuf type {@code nav.BodyRPYDelta}
   */
  public static final class BodyRPYDelta extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.BodyRPYDelta)
      BodyRPYDeltaOrBuilder {
    // Use BodyRPYDelta.newBuilder() to construct.
    private BodyRPYDelta(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BodyRPYDelta(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BodyRPYDelta defaultInstance;
    public static BodyRPYDelta getDefaultInstance() {
      return defaultInstance;
    }

    public BodyRPYDelta getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BodyRPYDelta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeDeltaS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              rollDeltaR_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              pitchDeltaR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              yawDeltaR_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              rollDeltaSigmaRPS_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              pitchDeltaSigmaRPS_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              yawDeltaSigmaRPS_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_BodyRPYDelta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_BodyRPYDelta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.BodyRPYDelta.class, nav.BodyRPYDelta.Builder.class);
    }

    public static com.google.protobuf.Parser<BodyRPYDelta> PARSER =
        new com.google.protobuf.AbstractParser<BodyRPYDelta>() {
      public BodyRPYDelta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BodyRPYDelta(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BodyRPYDelta> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int TIMEDELTAS_FIELD_NUMBER = 2;
    private double timeDeltaS_;
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public boolean hasTimeDeltaS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public double getTimeDeltaS() {
      return timeDeltaS_;
    }

    public static final int ROLLDELTAR_FIELD_NUMBER = 3;
    private double rollDeltaR_;
    /**
     * <code>required double rollDeltaR = 3;</code>
     */
    public boolean hasRollDeltaR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double rollDeltaR = 3;</code>
     */
    public double getRollDeltaR() {
      return rollDeltaR_;
    }

    public static final int PITCHDELTAR_FIELD_NUMBER = 4;
    private double pitchDeltaR_;
    /**
     * <code>required double pitchDeltaR = 4;</code>
     */
    public boolean hasPitchDeltaR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double pitchDeltaR = 4;</code>
     */
    public double getPitchDeltaR() {
      return pitchDeltaR_;
    }

    public static final int YAWDELTAR_FIELD_NUMBER = 5;
    private double yawDeltaR_;
    /**
     * <code>required double yawDeltaR = 5;</code>
     */
    public boolean hasYawDeltaR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double yawDeltaR = 5;</code>
     */
    public double getYawDeltaR() {
      return yawDeltaR_;
    }

    public static final int ROLLDELTASIGMARPS_FIELD_NUMBER = 6;
    private double rollDeltaSigmaRPS_;
    /**
     * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
     */
    public boolean hasRollDeltaSigmaRPS() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
     */
    public double getRollDeltaSigmaRPS() {
      return rollDeltaSigmaRPS_;
    }

    public static final int PITCHDELTASIGMARPS_FIELD_NUMBER = 7;
    private double pitchDeltaSigmaRPS_;
    /**
     * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
     */
    public boolean hasPitchDeltaSigmaRPS() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
     */
    public double getPitchDeltaSigmaRPS() {
      return pitchDeltaSigmaRPS_;
    }

    public static final int YAWDELTASIGMARPS_FIELD_NUMBER = 8;
    private double yawDeltaSigmaRPS_;
    /**
     * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
     */
    public boolean hasYawDeltaSigmaRPS() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
     */
    public double getYawDeltaSigmaRPS() {
      return yawDeltaSigmaRPS_;
    }

    private void initFields() {
      timeS_ = 0D;
      timeDeltaS_ = 0D;
      rollDeltaR_ = 0D;
      pitchDeltaR_ = 0D;
      yawDeltaR_ = 0D;
      rollDeltaSigmaRPS_ = 0D;
      pitchDeltaSigmaRPS_ = 0D;
      yawDeltaSigmaRPS_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeDeltaS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, rollDeltaR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, pitchDeltaR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, yawDeltaR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, rollDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, pitchDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, yawDeltaSigmaRPS_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rollDeltaR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, pitchDeltaR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, yawDeltaR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rollDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pitchDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, yawDeltaSigmaRPS_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.BodyRPYDelta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyRPYDelta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyRPYDelta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyRPYDelta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyRPYDelta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyRPYDelta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.BodyRPYDelta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.BodyRPYDelta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.BodyRPYDelta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyRPYDelta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.BodyRPYDelta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.BodyRPYDelta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.BodyRPYDelta)
        nav.BodyRPYDeltaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_BodyRPYDelta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_BodyRPYDelta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.BodyRPYDelta.class, nav.BodyRPYDelta.Builder.class);
      }

      // Construct using nav.BodyRPYDelta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeDeltaS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        rollDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        pitchDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        yawDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        rollDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        pitchDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        yawDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_BodyRPYDelta_descriptor;
      }

      public nav.BodyRPYDelta getDefaultInstanceForType() {
        return nav.BodyRPYDelta.getDefaultInstance();
      }

      public nav.BodyRPYDelta build() {
        nav.BodyRPYDelta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.BodyRPYDelta buildPartial() {
        nav.BodyRPYDelta result = new nav.BodyRPYDelta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeDeltaS_ = timeDeltaS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rollDeltaR_ = rollDeltaR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pitchDeltaR_ = pitchDeltaR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.yawDeltaR_ = yawDeltaR_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rollDeltaSigmaRPS_ = rollDeltaSigmaRPS_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pitchDeltaSigmaRPS_ = pitchDeltaSigmaRPS_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.yawDeltaSigmaRPS_ = yawDeltaSigmaRPS_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.BodyRPYDelta) {
          return mergeFrom((nav.BodyRPYDelta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.BodyRPYDelta other) {
        if (other == nav.BodyRPYDelta.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasTimeDeltaS()) {
          setTimeDeltaS(other.getTimeDeltaS());
        }
        if (other.hasRollDeltaR()) {
          setRollDeltaR(other.getRollDeltaR());
        }
        if (other.hasPitchDeltaR()) {
          setPitchDeltaR(other.getPitchDeltaR());
        }
        if (other.hasYawDeltaR()) {
          setYawDeltaR(other.getYawDeltaR());
        }
        if (other.hasRollDeltaSigmaRPS()) {
          setRollDeltaSigmaRPS(other.getRollDeltaSigmaRPS());
        }
        if (other.hasPitchDeltaSigmaRPS()) {
          setPitchDeltaSigmaRPS(other.getPitchDeltaSigmaRPS());
        }
        if (other.hasYawDeltaSigmaRPS()) {
          setYawDeltaSigmaRPS(other.getYawDeltaSigmaRPS());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasTimeDeltaS()) {
          
          return false;
        }
        if (!hasRollDeltaR()) {
          
          return false;
        }
        if (!hasPitchDeltaR()) {
          
          return false;
        }
        if (!hasYawDeltaR()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.BodyRPYDelta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.BodyRPYDelta) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double timeDeltaS_ ;
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public boolean hasTimeDeltaS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public double getTimeDeltaS() {
        return timeDeltaS_;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder setTimeDeltaS(double value) {
        bitField0_ |= 0x00000002;
        timeDeltaS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder clearTimeDeltaS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeDeltaS_ = 0D;
        onChanged();
        return this;
      }

      private double rollDeltaR_ ;
      /**
       * <code>required double rollDeltaR = 3;</code>
       */
      public boolean hasRollDeltaR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double rollDeltaR = 3;</code>
       */
      public double getRollDeltaR() {
        return rollDeltaR_;
      }
      /**
       * <code>required double rollDeltaR = 3;</code>
       */
      public Builder setRollDeltaR(double value) {
        bitField0_ |= 0x00000004;
        rollDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollDeltaR = 3;</code>
       */
      public Builder clearRollDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rollDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchDeltaR_ ;
      /**
       * <code>required double pitchDeltaR = 4;</code>
       */
      public boolean hasPitchDeltaR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double pitchDeltaR = 4;</code>
       */
      public double getPitchDeltaR() {
        return pitchDeltaR_;
      }
      /**
       * <code>required double pitchDeltaR = 4;</code>
       */
      public Builder setPitchDeltaR(double value) {
        bitField0_ |= 0x00000008;
        pitchDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchDeltaR = 4;</code>
       */
      public Builder clearPitchDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pitchDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawDeltaR_ ;
      /**
       * <code>required double yawDeltaR = 5;</code>
       */
      public boolean hasYawDeltaR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double yawDeltaR = 5;</code>
       */
      public double getYawDeltaR() {
        return yawDeltaR_;
      }
      /**
       * <code>required double yawDeltaR = 5;</code>
       */
      public Builder setYawDeltaR(double value) {
        bitField0_ |= 0x00000010;
        yawDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawDeltaR = 5;</code>
       */
      public Builder clearYawDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        yawDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double rollDeltaSigmaRPS_ ;
      /**
       * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
       */
      public boolean hasRollDeltaSigmaRPS() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
       */
      public double getRollDeltaSigmaRPS() {
        return rollDeltaSigmaRPS_;
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
       */
      public Builder setRollDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00000020;
        rollDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 6 [default = 0];</code>
       */
      public Builder clearRollDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rollDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      private double pitchDeltaSigmaRPS_ ;
      /**
       * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
       */
      public boolean hasPitchDeltaSigmaRPS() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
       */
      public double getPitchDeltaSigmaRPS() {
        return pitchDeltaSigmaRPS_;
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
       */
      public Builder setPitchDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00000040;
        pitchDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 7 [default = 0];</code>
       */
      public Builder clearPitchDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pitchDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      private double yawDeltaSigmaRPS_ ;
      /**
       * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
       */
      public boolean hasYawDeltaSigmaRPS() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
       */
      public double getYawDeltaSigmaRPS() {
        return yawDeltaSigmaRPS_;
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
       */
      public Builder setYawDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00000080;
        yawDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 8 [default = 0];</code>
       */
      public Builder clearYawDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00000080);
        yawDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.BodyRPYDelta)
    }

    static {
      defaultInstance = new BodyRPYDelta(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.BodyRPYDelta)
  }

  public interface BodyFRDDeltaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.BodyFRDDelta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    boolean hasTimeDeltaS();
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    double getTimeDeltaS();

    /**
     * <code>required double forwardDeltaM = 3;</code>
     */
    boolean hasForwardDeltaM();
    /**
     * <code>required double forwardDeltaM = 3;</code>
     */
    double getForwardDeltaM();

    /**
     * <code>required double rightDeltaM = 4;</code>
     */
    boolean hasRightDeltaM();
    /**
     * <code>required double rightDeltaM = 4;</code>
     */
    double getRightDeltaM();

    /**
     * <code>required double downDeltaM = 5;</code>
     */
    boolean hasDownDeltaM();
    /**
     * <code>required double downDeltaM = 5;</code>
     */
    double getDownDeltaM();

    /**
     * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
     */
    boolean hasForwardDeltaSigmaM();
    /**
     * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
     */
    double getForwardDeltaSigmaM();

    /**
     * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
     */
    boolean hasRightDeltaSigmaM();
    /**
     * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
     */
    double getRightDeltaSigmaM();

    /**
     * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
     */
    boolean hasDownDeltaSigmaM();
    /**
     * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
     */
    double getDownDeltaSigmaM();
  }
  /**
   * Protobuf type {@code nav.BodyFRDDelta}
   */
  public static final class BodyFRDDelta extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.BodyFRDDelta)
      BodyFRDDeltaOrBuilder {
    // Use BodyFRDDelta.newBuilder() to construct.
    private BodyFRDDelta(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BodyFRDDelta(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BodyFRDDelta defaultInstance;
    public static BodyFRDDelta getDefaultInstance() {
      return defaultInstance;
    }

    public BodyFRDDelta getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BodyFRDDelta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeDeltaS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              forwardDeltaM_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rightDeltaM_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              downDeltaM_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              forwardDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              rightDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              downDeltaSigmaM_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_BodyFRDDelta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_BodyFRDDelta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.BodyFRDDelta.class, nav.BodyFRDDelta.Builder.class);
    }

    public static com.google.protobuf.Parser<BodyFRDDelta> PARSER =
        new com.google.protobuf.AbstractParser<BodyFRDDelta>() {
      public BodyFRDDelta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BodyFRDDelta(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BodyFRDDelta> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int TIMEDELTAS_FIELD_NUMBER = 2;
    private double timeDeltaS_;
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public boolean hasTimeDeltaS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public double getTimeDeltaS() {
      return timeDeltaS_;
    }

    public static final int FORWARDDELTAM_FIELD_NUMBER = 3;
    private double forwardDeltaM_;
    /**
     * <code>required double forwardDeltaM = 3;</code>
     */
    public boolean hasForwardDeltaM() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double forwardDeltaM = 3;</code>
     */
    public double getForwardDeltaM() {
      return forwardDeltaM_;
    }

    public static final int RIGHTDELTAM_FIELD_NUMBER = 4;
    private double rightDeltaM_;
    /**
     * <code>required double rightDeltaM = 4;</code>
     */
    public boolean hasRightDeltaM() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double rightDeltaM = 4;</code>
     */
    public double getRightDeltaM() {
      return rightDeltaM_;
    }

    public static final int DOWNDELTAM_FIELD_NUMBER = 5;
    private double downDeltaM_;
    /**
     * <code>required double downDeltaM = 5;</code>
     */
    public boolean hasDownDeltaM() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double downDeltaM = 5;</code>
     */
    public double getDownDeltaM() {
      return downDeltaM_;
    }

    public static final int FORWARDDELTASIGMAM_FIELD_NUMBER = 6;
    private double forwardDeltaSigmaM_;
    /**
     * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
     */
    public boolean hasForwardDeltaSigmaM() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
     */
    public double getForwardDeltaSigmaM() {
      return forwardDeltaSigmaM_;
    }

    public static final int RIGHTDELTASIGMAM_FIELD_NUMBER = 7;
    private double rightDeltaSigmaM_;
    /**
     * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
     */
    public boolean hasRightDeltaSigmaM() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
     */
    public double getRightDeltaSigmaM() {
      return rightDeltaSigmaM_;
    }

    public static final int DOWNDELTASIGMAM_FIELD_NUMBER = 8;
    private double downDeltaSigmaM_;
    /**
     * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
     */
    public boolean hasDownDeltaSigmaM() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
     */
    public double getDownDeltaSigmaM() {
      return downDeltaSigmaM_;
    }

    private void initFields() {
      timeS_ = 0D;
      timeDeltaS_ = 0D;
      forwardDeltaM_ = 0D;
      rightDeltaM_ = 0D;
      downDeltaM_ = 0D;
      forwardDeltaSigmaM_ = 0D;
      rightDeltaSigmaM_ = 0D;
      downDeltaSigmaM_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeDeltaS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rightDeltaM_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, downDeltaM_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, downDeltaSigmaM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rightDeltaM_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, downDeltaM_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, downDeltaSigmaM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.BodyFRDDelta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyFRDDelta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyFRDDelta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyFRDDelta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyFRDDelta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyFRDDelta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.BodyFRDDelta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.BodyFRDDelta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.BodyFRDDelta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyFRDDelta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.BodyFRDDelta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.BodyFRDDelta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.BodyFRDDelta)
        nav.BodyFRDDeltaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_BodyFRDDelta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_BodyFRDDelta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.BodyFRDDelta.class, nav.BodyFRDDelta.Builder.class);
      }

      // Construct using nav.BodyFRDDelta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeDeltaS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        forwardDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        rightDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        downDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        forwardDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        rightDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        downDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_BodyFRDDelta_descriptor;
      }

      public nav.BodyFRDDelta getDefaultInstanceForType() {
        return nav.BodyFRDDelta.getDefaultInstance();
      }

      public nav.BodyFRDDelta build() {
        nav.BodyFRDDelta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.BodyFRDDelta buildPartial() {
        nav.BodyFRDDelta result = new nav.BodyFRDDelta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeDeltaS_ = timeDeltaS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forwardDeltaM_ = forwardDeltaM_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rightDeltaM_ = rightDeltaM_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.downDeltaM_ = downDeltaM_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forwardDeltaSigmaM_ = forwardDeltaSigmaM_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rightDeltaSigmaM_ = rightDeltaSigmaM_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.downDeltaSigmaM_ = downDeltaSigmaM_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.BodyFRDDelta) {
          return mergeFrom((nav.BodyFRDDelta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.BodyFRDDelta other) {
        if (other == nav.BodyFRDDelta.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasTimeDeltaS()) {
          setTimeDeltaS(other.getTimeDeltaS());
        }
        if (other.hasForwardDeltaM()) {
          setForwardDeltaM(other.getForwardDeltaM());
        }
        if (other.hasRightDeltaM()) {
          setRightDeltaM(other.getRightDeltaM());
        }
        if (other.hasDownDeltaM()) {
          setDownDeltaM(other.getDownDeltaM());
        }
        if (other.hasForwardDeltaSigmaM()) {
          setForwardDeltaSigmaM(other.getForwardDeltaSigmaM());
        }
        if (other.hasRightDeltaSigmaM()) {
          setRightDeltaSigmaM(other.getRightDeltaSigmaM());
        }
        if (other.hasDownDeltaSigmaM()) {
          setDownDeltaSigmaM(other.getDownDeltaSigmaM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasTimeDeltaS()) {
          
          return false;
        }
        if (!hasForwardDeltaM()) {
          
          return false;
        }
        if (!hasRightDeltaM()) {
          
          return false;
        }
        if (!hasDownDeltaM()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.BodyFRDDelta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.BodyFRDDelta) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double timeDeltaS_ ;
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public boolean hasTimeDeltaS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public double getTimeDeltaS() {
        return timeDeltaS_;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder setTimeDeltaS(double value) {
        bitField0_ |= 0x00000002;
        timeDeltaS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder clearTimeDeltaS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeDeltaS_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaM_ ;
      /**
       * <code>required double forwardDeltaM = 3;</code>
       */
      public boolean hasForwardDeltaM() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double forwardDeltaM = 3;</code>
       */
      public double getForwardDeltaM() {
        return forwardDeltaM_;
      }
      /**
       * <code>required double forwardDeltaM = 3;</code>
       */
      public Builder setForwardDeltaM(double value) {
        bitField0_ |= 0x00000004;
        forwardDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardDeltaM = 3;</code>
       */
      public Builder clearForwardDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forwardDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaM_ ;
      /**
       * <code>required double rightDeltaM = 4;</code>
       */
      public boolean hasRightDeltaM() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double rightDeltaM = 4;</code>
       */
      public double getRightDeltaM() {
        return rightDeltaM_;
      }
      /**
       * <code>required double rightDeltaM = 4;</code>
       */
      public Builder setRightDeltaM(double value) {
        bitField0_ |= 0x00000008;
        rightDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightDeltaM = 4;</code>
       */
      public Builder clearRightDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rightDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaM_ ;
      /**
       * <code>required double downDeltaM = 5;</code>
       */
      public boolean hasDownDeltaM() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double downDeltaM = 5;</code>
       */
      public double getDownDeltaM() {
        return downDeltaM_;
      }
      /**
       * <code>required double downDeltaM = 5;</code>
       */
      public Builder setDownDeltaM(double value) {
        bitField0_ |= 0x00000010;
        downDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downDeltaM = 5;</code>
       */
      public Builder clearDownDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000010);
        downDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaSigmaM_ ;
      /**
       * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
       */
      public boolean hasForwardDeltaSigmaM() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
       */
      public double getForwardDeltaSigmaM() {
        return forwardDeltaSigmaM_;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
       */
      public Builder setForwardDeltaSigmaM(double value) {
        bitField0_ |= 0x00000020;
        forwardDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 6 [default = 0];</code>
       */
      public Builder clearForwardDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forwardDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaSigmaM_ ;
      /**
       * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
       */
      public boolean hasRightDeltaSigmaM() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
       */
      public double getRightDeltaSigmaM() {
        return rightDeltaSigmaM_;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
       */
      public Builder setRightDeltaSigmaM(double value) {
        bitField0_ |= 0x00000040;
        rightDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 7 [default = 0];</code>
       */
      public Builder clearRightDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rightDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaSigmaM_ ;
      /**
       * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
       */
      public boolean hasDownDeltaSigmaM() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
       */
      public double getDownDeltaSigmaM() {
        return downDeltaSigmaM_;
      }
      /**
       * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
       */
      public Builder setDownDeltaSigmaM(double value) {
        bitField0_ |= 0x00000080;
        downDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downDeltaSigmaM = 8 [default = 0];</code>
       */
      public Builder clearDownDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000080);
        downDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.BodyFRDDelta)
    }

    static {
      defaultInstance = new BodyFRDDelta(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.BodyFRDDelta)
  }

  public interface BodyFRDRateDeltaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.BodyFRDRateDelta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    boolean hasTimeDeltaS();
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    double getTimeDeltaS();

    /**
     * <code>required double forwardRateDeltaMPS = 3;</code>
     */
    boolean hasForwardRateDeltaMPS();
    /**
     * <code>required double forwardRateDeltaMPS = 3;</code>
     */
    double getForwardRateDeltaMPS();

    /**
     * <code>required double rightRateDeltaMPS = 4;</code>
     */
    boolean hasRightRateDeltaMPS();
    /**
     * <code>required double rightRateDeltaMPS = 4;</code>
     */
    double getRightRateDeltaMPS();

    /**
     * <code>required double downRateDeltaMPS = 5;</code>
     */
    boolean hasDownRateDeltaMPS();
    /**
     * <code>required double downRateDeltaMPS = 5;</code>
     */
    double getDownRateDeltaMPS();

    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
     */
    boolean hasForwardRateDeltaSigmaMPS();
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
     */
    double getForwardRateDeltaSigmaMPS();

    /**
     * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
     */
    boolean hasRightRateDeltaSigmaMPS();
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
     */
    double getRightRateDeltaSigmaMPS();

    /**
     * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
     */
    boolean hasDownRateDeltaSigmaMPS();
    /**
     * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
     */
    double getDownRateDeltaSigmaMPS();
  }
  /**
   * Protobuf type {@code nav.BodyFRDRateDelta}
   */
  public static final class BodyFRDRateDelta extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.BodyFRDRateDelta)
      BodyFRDRateDeltaOrBuilder {
    // Use BodyFRDRateDelta.newBuilder() to construct.
    private BodyFRDRateDelta(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BodyFRDRateDelta(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BodyFRDRateDelta defaultInstance;
    public static BodyFRDRateDelta getDefaultInstance() {
      return defaultInstance;
    }

    public BodyFRDRateDelta getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BodyFRDRateDelta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeDeltaS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              forwardRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rightRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              downRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              forwardRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              rightRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              downRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_BodyFRDRateDelta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_BodyFRDRateDelta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.BodyFRDRateDelta.class, nav.BodyFRDRateDelta.Builder.class);
    }

    public static com.google.protobuf.Parser<BodyFRDRateDelta> PARSER =
        new com.google.protobuf.AbstractParser<BodyFRDRateDelta>() {
      public BodyFRDRateDelta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BodyFRDRateDelta(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BodyFRDRateDelta> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int TIMEDELTAS_FIELD_NUMBER = 2;
    private double timeDeltaS_;
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public boolean hasTimeDeltaS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public double getTimeDeltaS() {
      return timeDeltaS_;
    }

    public static final int FORWARDRATEDELTAMPS_FIELD_NUMBER = 3;
    private double forwardRateDeltaMPS_;
    /**
     * <code>required double forwardRateDeltaMPS = 3;</code>
     */
    public boolean hasForwardRateDeltaMPS() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double forwardRateDeltaMPS = 3;</code>
     */
    public double getForwardRateDeltaMPS() {
      return forwardRateDeltaMPS_;
    }

    public static final int RIGHTRATEDELTAMPS_FIELD_NUMBER = 4;
    private double rightRateDeltaMPS_;
    /**
     * <code>required double rightRateDeltaMPS = 4;</code>
     */
    public boolean hasRightRateDeltaMPS() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double rightRateDeltaMPS = 4;</code>
     */
    public double getRightRateDeltaMPS() {
      return rightRateDeltaMPS_;
    }

    public static final int DOWNRATEDELTAMPS_FIELD_NUMBER = 5;
    private double downRateDeltaMPS_;
    /**
     * <code>required double downRateDeltaMPS = 5;</code>
     */
    public boolean hasDownRateDeltaMPS() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double downRateDeltaMPS = 5;</code>
     */
    public double getDownRateDeltaMPS() {
      return downRateDeltaMPS_;
    }

    public static final int FORWARDRATEDELTASIGMAMPS_FIELD_NUMBER = 6;
    private double forwardRateDeltaSigmaMPS_;
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
     */
    public boolean hasForwardRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
     */
    public double getForwardRateDeltaSigmaMPS() {
      return forwardRateDeltaSigmaMPS_;
    }

    public static final int RIGHTRATEDELTASIGMAMPS_FIELD_NUMBER = 7;
    private double rightRateDeltaSigmaMPS_;
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
     */
    public boolean hasRightRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
     */
    public double getRightRateDeltaSigmaMPS() {
      return rightRateDeltaSigmaMPS_;
    }

    public static final int DOWNRATEDELTASIGMAMPS_FIELD_NUMBER = 8;
    private double downRateDeltaSigmaMPS_;
    /**
     * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
     */
    public boolean hasDownRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
     */
    public double getDownRateDeltaSigmaMPS() {
      return downRateDeltaSigmaMPS_;
    }

    private void initFields() {
      timeS_ = 0D;
      timeDeltaS_ = 0D;
      forwardRateDeltaMPS_ = 0D;
      rightRateDeltaMPS_ = 0D;
      downRateDeltaMPS_ = 0D;
      forwardRateDeltaSigmaMPS_ = 0D;
      rightRateDeltaSigmaMPS_ = 0D;
      downRateDeltaSigmaMPS_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeDeltaS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, forwardRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rightRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, downRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, forwardRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, rightRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, downRateDeltaSigmaMPS_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, forwardRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rightRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, downRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, forwardRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, rightRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, downRateDeltaSigmaMPS_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.BodyFRDRateDelta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyFRDRateDelta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyFRDRateDelta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.BodyFRDRateDelta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.BodyFRDRateDelta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyFRDRateDelta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.BodyFRDRateDelta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.BodyFRDRateDelta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.BodyFRDRateDelta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.BodyFRDRateDelta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.BodyFRDRateDelta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.BodyFRDRateDelta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.BodyFRDRateDelta)
        nav.BodyFRDRateDeltaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_BodyFRDRateDelta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_BodyFRDRateDelta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.BodyFRDRateDelta.class, nav.BodyFRDRateDelta.Builder.class);
      }

      // Construct using nav.BodyFRDRateDelta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeDeltaS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        forwardRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        rightRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        downRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        forwardRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        rightRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        downRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_BodyFRDRateDelta_descriptor;
      }

      public nav.BodyFRDRateDelta getDefaultInstanceForType() {
        return nav.BodyFRDRateDelta.getDefaultInstance();
      }

      public nav.BodyFRDRateDelta build() {
        nav.BodyFRDRateDelta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.BodyFRDRateDelta buildPartial() {
        nav.BodyFRDRateDelta result = new nav.BodyFRDRateDelta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeDeltaS_ = timeDeltaS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forwardRateDeltaMPS_ = forwardRateDeltaMPS_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rightRateDeltaMPS_ = rightRateDeltaMPS_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.downRateDeltaMPS_ = downRateDeltaMPS_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forwardRateDeltaSigmaMPS_ = forwardRateDeltaSigmaMPS_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rightRateDeltaSigmaMPS_ = rightRateDeltaSigmaMPS_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.downRateDeltaSigmaMPS_ = downRateDeltaSigmaMPS_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.BodyFRDRateDelta) {
          return mergeFrom((nav.BodyFRDRateDelta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.BodyFRDRateDelta other) {
        if (other == nav.BodyFRDRateDelta.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasTimeDeltaS()) {
          setTimeDeltaS(other.getTimeDeltaS());
        }
        if (other.hasForwardRateDeltaMPS()) {
          setForwardRateDeltaMPS(other.getForwardRateDeltaMPS());
        }
        if (other.hasRightRateDeltaMPS()) {
          setRightRateDeltaMPS(other.getRightRateDeltaMPS());
        }
        if (other.hasDownRateDeltaMPS()) {
          setDownRateDeltaMPS(other.getDownRateDeltaMPS());
        }
        if (other.hasForwardRateDeltaSigmaMPS()) {
          setForwardRateDeltaSigmaMPS(other.getForwardRateDeltaSigmaMPS());
        }
        if (other.hasRightRateDeltaSigmaMPS()) {
          setRightRateDeltaSigmaMPS(other.getRightRateDeltaSigmaMPS());
        }
        if (other.hasDownRateDeltaSigmaMPS()) {
          setDownRateDeltaSigmaMPS(other.getDownRateDeltaSigmaMPS());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasTimeDeltaS()) {
          
          return false;
        }
        if (!hasForwardRateDeltaMPS()) {
          
          return false;
        }
        if (!hasRightRateDeltaMPS()) {
          
          return false;
        }
        if (!hasDownRateDeltaMPS()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.BodyFRDRateDelta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.BodyFRDRateDelta) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double timeDeltaS_ ;
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public boolean hasTimeDeltaS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public double getTimeDeltaS() {
        return timeDeltaS_;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder setTimeDeltaS(double value) {
        bitField0_ |= 0x00000002;
        timeDeltaS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder clearTimeDeltaS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeDeltaS_ = 0D;
        onChanged();
        return this;
      }

      private double forwardRateDeltaMPS_ ;
      /**
       * <code>required double forwardRateDeltaMPS = 3;</code>
       */
      public boolean hasForwardRateDeltaMPS() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double forwardRateDeltaMPS = 3;</code>
       */
      public double getForwardRateDeltaMPS() {
        return forwardRateDeltaMPS_;
      }
      /**
       * <code>required double forwardRateDeltaMPS = 3;</code>
       */
      public Builder setForwardRateDeltaMPS(double value) {
        bitField0_ |= 0x00000004;
        forwardRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardRateDeltaMPS = 3;</code>
       */
      public Builder clearForwardRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forwardRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double rightRateDeltaMPS_ ;
      /**
       * <code>required double rightRateDeltaMPS = 4;</code>
       */
      public boolean hasRightRateDeltaMPS() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double rightRateDeltaMPS = 4;</code>
       */
      public double getRightRateDeltaMPS() {
        return rightRateDeltaMPS_;
      }
      /**
       * <code>required double rightRateDeltaMPS = 4;</code>
       */
      public Builder setRightRateDeltaMPS(double value) {
        bitField0_ |= 0x00000008;
        rightRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightRateDeltaMPS = 4;</code>
       */
      public Builder clearRightRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rightRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double downRateDeltaMPS_ ;
      /**
       * <code>required double downRateDeltaMPS = 5;</code>
       */
      public boolean hasDownRateDeltaMPS() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double downRateDeltaMPS = 5;</code>
       */
      public double getDownRateDeltaMPS() {
        return downRateDeltaMPS_;
      }
      /**
       * <code>required double downRateDeltaMPS = 5;</code>
       */
      public Builder setDownRateDeltaMPS(double value) {
        bitField0_ |= 0x00000010;
        downRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downRateDeltaMPS = 5;</code>
       */
      public Builder clearDownRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00000010);
        downRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double forwardRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
       */
      public boolean hasForwardRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
       */
      public double getForwardRateDeltaSigmaMPS() {
        return forwardRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
       */
      public Builder setForwardRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x00000020;
        forwardRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 6 [default = 0];</code>
       */
      public Builder clearForwardRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forwardRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double rightRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
       */
      public boolean hasRightRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
       */
      public double getRightRateDeltaSigmaMPS() {
        return rightRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
       */
      public Builder setRightRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x00000040;
        rightRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 7 [default = 0];</code>
       */
      public Builder clearRightRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rightRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double downRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
       */
      public boolean hasDownRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
       */
      public double getDownRateDeltaSigmaMPS() {
        return downRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
       */
      public Builder setDownRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x00000080;
        downRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 8 [default = 0];</code>
       */
      public Builder clearDownRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x00000080);
        downRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.BodyFRDRateDelta)
    }

    static {
      defaultInstance = new BodyFRDRateDelta(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.BodyFRDRateDelta)
  }

  public interface RelRPYOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.RelRPY)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string targetID = 1;</code>
     */
    boolean hasTargetID();
    /**
     * <code>required string targetID = 1;</code>
     */
    java.lang.String getTargetID();
    /**
     * <code>required string targetID = 1;</code>
     */
    com.google.protobuf.ByteString
        getTargetIDBytes();

    /**
     * <code>required double timeS = 2;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 2;</code>
     */
    double getTimeS();

    /**
     * <code>required double rollR = 3;</code>
     */
    boolean hasRollR();
    /**
     * <code>required double rollR = 3;</code>
     */
    double getRollR();

    /**
     * <code>required double pitchR = 4;</code>
     */
    boolean hasPitchR();
    /**
     * <code>required double pitchR = 4;</code>
     */
    double getPitchR();

    /**
     * <code>required double yawR = 5;</code>
     */
    boolean hasYawR();
    /**
     * <code>required double yawR = 5;</code>
     */
    double getYawR();

    /**
     * <code>optional double rollSigmaR = 6 [default = 0];</code>
     */
    boolean hasRollSigmaR();
    /**
     * <code>optional double rollSigmaR = 6 [default = 0];</code>
     */
    double getRollSigmaR();

    /**
     * <code>optional double pitchSigmaR = 7 [default = 0];</code>
     */
    boolean hasPitchSigmaR();
    /**
     * <code>optional double pitchSigmaR = 7 [default = 0];</code>
     */
    double getPitchSigmaR();

    /**
     * <code>optional double yawSigmaR = 8 [default = 0];</code>
     */
    boolean hasYawSigmaR();
    /**
     * <code>optional double yawSigmaR = 8 [default = 0];</code>
     */
    double getYawSigmaR();
  }
  /**
   * Protobuf type {@code nav.RelRPY}
   */
  public static final class RelRPY extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.RelRPY)
      RelRPYOrBuilder {
    // Use RelRPY.newBuilder() to construct.
    private RelRPY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RelRPY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RelRPY defaultInstance;
    public static RelRPY getDefaultInstance() {
      return defaultInstance;
    }

    public RelRPY getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RelRPY(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              targetID_ = bs;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              rollR_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              pitchR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              yawR_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              rollSigmaR_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              pitchSigmaR_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              yawSigmaR_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_RelRPY_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_RelRPY_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.RelRPY.class, nav.RelRPY.Builder.class);
    }

    public static com.google.protobuf.Parser<RelRPY> PARSER =
        new com.google.protobuf.AbstractParser<RelRPY>() {
      public RelRPY parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelRPY(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RelRPY> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TARGETID_FIELD_NUMBER = 1;
    private java.lang.Object targetID_;
    /**
     * <code>required string targetID = 1;</code>
     */
    public boolean hasTargetID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string targetID = 1;</code>
     */
    public java.lang.String getTargetID() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string targetID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTargetIDBytes() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMES_FIELD_NUMBER = 2;
    private double timeS_;
    /**
     * <code>required double timeS = 2;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeS = 2;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int ROLLR_FIELD_NUMBER = 3;
    private double rollR_;
    /**
     * <code>required double rollR = 3;</code>
     */
    public boolean hasRollR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double rollR = 3;</code>
     */
    public double getRollR() {
      return rollR_;
    }

    public static final int PITCHR_FIELD_NUMBER = 4;
    private double pitchR_;
    /**
     * <code>required double pitchR = 4;</code>
     */
    public boolean hasPitchR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double pitchR = 4;</code>
     */
    public double getPitchR() {
      return pitchR_;
    }

    public static final int YAWR_FIELD_NUMBER = 5;
    private double yawR_;
    /**
     * <code>required double yawR = 5;</code>
     */
    public boolean hasYawR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double yawR = 5;</code>
     */
    public double getYawR() {
      return yawR_;
    }

    public static final int ROLLSIGMAR_FIELD_NUMBER = 6;
    private double rollSigmaR_;
    /**
     * <code>optional double rollSigmaR = 6 [default = 0];</code>
     */
    public boolean hasRollSigmaR() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double rollSigmaR = 6 [default = 0];</code>
     */
    public double getRollSigmaR() {
      return rollSigmaR_;
    }

    public static final int PITCHSIGMAR_FIELD_NUMBER = 7;
    private double pitchSigmaR_;
    /**
     * <code>optional double pitchSigmaR = 7 [default = 0];</code>
     */
    public boolean hasPitchSigmaR() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double pitchSigmaR = 7 [default = 0];</code>
     */
    public double getPitchSigmaR() {
      return pitchSigmaR_;
    }

    public static final int YAWSIGMAR_FIELD_NUMBER = 8;
    private double yawSigmaR_;
    /**
     * <code>optional double yawSigmaR = 8 [default = 0];</code>
     */
    public boolean hasYawSigmaR() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double yawSigmaR = 8 [default = 0];</code>
     */
    public double getYawSigmaR() {
      return yawSigmaR_;
    }

    private void initFields() {
      targetID_ = "";
      timeS_ = 0D;
      rollR_ = 0D;
      pitchR_ = 0D;
      yawR_ = 0D;
      rollSigmaR_ = 0D;
      pitchSigmaR_ = 0D;
      yawSigmaR_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTargetID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, rollR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, pitchR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, yawR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, rollSigmaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, yawSigmaR_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rollR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, pitchR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, yawR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rollSigmaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, yawSigmaR_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.RelRPY parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelRPY parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelRPY parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelRPY parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelRPY parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelRPY parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.RelRPY parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.RelRPY parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.RelRPY parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelRPY parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.RelRPY prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.RelRPY}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.RelRPY)
        nav.RelRPYOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_RelRPY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_RelRPY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.RelRPY.class, nav.RelRPY.Builder.class);
      }

      // Construct using nav.RelRPY.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        targetID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        rollR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        pitchR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        yawR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        rollSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        pitchSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        yawSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_RelRPY_descriptor;
      }

      public nav.RelRPY getDefaultInstanceForType() {
        return nav.RelRPY.getDefaultInstance();
      }

      public nav.RelRPY build() {
        nav.RelRPY result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.RelRPY buildPartial() {
        nav.RelRPY result = new nav.RelRPY(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.targetID_ = targetID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rollR_ = rollR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pitchR_ = pitchR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.yawR_ = yawR_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rollSigmaR_ = rollSigmaR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pitchSigmaR_ = pitchSigmaR_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.yawSigmaR_ = yawSigmaR_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.RelRPY) {
          return mergeFrom((nav.RelRPY)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.RelRPY other) {
        if (other == nav.RelRPY.getDefaultInstance()) return this;
        if (other.hasTargetID()) {
          bitField0_ |= 0x00000001;
          targetID_ = other.targetID_;
          onChanged();
        }
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasRollR()) {
          setRollR(other.getRollR());
        }
        if (other.hasPitchR()) {
          setPitchR(other.getPitchR());
        }
        if (other.hasYawR()) {
          setYawR(other.getYawR());
        }
        if (other.hasRollSigmaR()) {
          setRollSigmaR(other.getRollSigmaR());
        }
        if (other.hasPitchSigmaR()) {
          setPitchSigmaR(other.getPitchSigmaR());
        }
        if (other.hasYawSigmaR()) {
          setYawSigmaR(other.getYawSigmaR());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTargetID()) {
          
          return false;
        }
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasRollR()) {
          
          return false;
        }
        if (!hasPitchR()) {
          
          return false;
        }
        if (!hasYawR()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.RelRPY parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.RelRPY) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object targetID_ = "";
      /**
       * <code>required string targetID = 1;</code>
       */
      public boolean hasTargetID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public java.lang.String getTargetID() {
        java.lang.Object ref = targetID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            targetID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTargetIDBytes() {
        java.lang.Object ref = targetID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder setTargetID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder clearTargetID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetID_ = getDefaultInstance().getTargetID();
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder setTargetIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetID_ = value;
        onChanged();
        return this;
      }

      private double timeS_ ;
      /**
       * <code>required double timeS = 2;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000002;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double rollR_ ;
      /**
       * <code>required double rollR = 3;</code>
       */
      public boolean hasRollR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public double getRollR() {
        return rollR_;
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public Builder setRollR(double value) {
        bitField0_ |= 0x00000004;
        rollR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public Builder clearRollR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rollR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchR_ ;
      /**
       * <code>required double pitchR = 4;</code>
       */
      public boolean hasPitchR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public double getPitchR() {
        return pitchR_;
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public Builder setPitchR(double value) {
        bitField0_ |= 0x00000008;
        pitchR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public Builder clearPitchR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pitchR_ = 0D;
        onChanged();
        return this;
      }

      private double yawR_ ;
      /**
       * <code>required double yawR = 5;</code>
       */
      public boolean hasYawR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public double getYawR() {
        return yawR_;
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public Builder setYawR(double value) {
        bitField0_ |= 0x00000010;
        yawR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public Builder clearYawR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        yawR_ = 0D;
        onChanged();
        return this;
      }

      private double rollSigmaR_ ;
      /**
       * <code>optional double rollSigmaR = 6 [default = 0];</code>
       */
      public boolean hasRollSigmaR() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double rollSigmaR = 6 [default = 0];</code>
       */
      public double getRollSigmaR() {
        return rollSigmaR_;
      }
      /**
       * <code>optional double rollSigmaR = 6 [default = 0];</code>
       */
      public Builder setRollSigmaR(double value) {
        bitField0_ |= 0x00000020;
        rollSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollSigmaR = 6 [default = 0];</code>
       */
      public Builder clearRollSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rollSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchSigmaR_ ;
      /**
       * <code>optional double pitchSigmaR = 7 [default = 0];</code>
       */
      public boolean hasPitchSigmaR() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double pitchSigmaR = 7 [default = 0];</code>
       */
      public double getPitchSigmaR() {
        return pitchSigmaR_;
      }
      /**
       * <code>optional double pitchSigmaR = 7 [default = 0];</code>
       */
      public Builder setPitchSigmaR(double value) {
        bitField0_ |= 0x00000040;
        pitchSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchSigmaR = 7 [default = 0];</code>
       */
      public Builder clearPitchSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pitchSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawSigmaR_ ;
      /**
       * <code>optional double yawSigmaR = 8 [default = 0];</code>
       */
      public boolean hasYawSigmaR() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double yawSigmaR = 8 [default = 0];</code>
       */
      public double getYawSigmaR() {
        return yawSigmaR_;
      }
      /**
       * <code>optional double yawSigmaR = 8 [default = 0];</code>
       */
      public Builder setYawSigmaR(double value) {
        bitField0_ |= 0x00000080;
        yawSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawSigmaR = 8 [default = 0];</code>
       */
      public Builder clearYawSigmaR() {
        bitField0_ = (bitField0_ & ~0x00000080);
        yawSigmaR_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.RelRPY)
    }

    static {
      defaultInstance = new RelRPY(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.RelRPY)
  }

  public interface RelFRDOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.RelFRD)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string targetID = 1;</code>
     */
    boolean hasTargetID();
    /**
     * <code>required string targetID = 1;</code>
     */
    java.lang.String getTargetID();
    /**
     * <code>required string targetID = 1;</code>
     */
    com.google.protobuf.ByteString
        getTargetIDBytes();

    /**
     * <code>required double timeS = 2;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 2;</code>
     */
    double getTimeS();

    /**
     * <code>required double forwardM = 3;</code>
     */
    boolean hasForwardM();
    /**
     * <code>required double forwardM = 3;</code>
     */
    double getForwardM();

    /**
     * <code>required double rightM = 4;</code>
     */
    boolean hasRightM();
    /**
     * <code>required double rightM = 4;</code>
     */
    double getRightM();

    /**
     * <code>required double downM = 5;</code>
     */
    boolean hasDownM();
    /**
     * <code>required double downM = 5;</code>
     */
    double getDownM();

    /**
     * <code>optional double forwardSigmaM = 6 [default = 0];</code>
     */
    boolean hasForwardSigmaM();
    /**
     * <code>optional double forwardSigmaM = 6 [default = 0];</code>
     */
    double getForwardSigmaM();

    /**
     * <code>optional double rightSigmaM = 7 [default = 0];</code>
     */
    boolean hasRightSigmaM();
    /**
     * <code>optional double rightSigmaM = 7 [default = 0];</code>
     */
    double getRightSigmaM();

    /**
     * <code>optional double downSigmaM = 8 [default = 0];</code>
     */
    boolean hasDownSigmaM();
    /**
     * <code>optional double downSigmaM = 8 [default = 0];</code>
     */
    double getDownSigmaM();
  }
  /**
   * Protobuf type {@code nav.RelFRD}
   */
  public static final class RelFRD extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.RelFRD)
      RelFRDOrBuilder {
    // Use RelFRD.newBuilder() to construct.
    private RelFRD(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RelFRD(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RelFRD defaultInstance;
    public static RelFRD getDefaultInstance() {
      return defaultInstance;
    }

    public RelFRD getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RelFRD(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              targetID_ = bs;
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              forwardM_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rightM_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              downM_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              forwardSigmaM_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              rightSigmaM_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              downSigmaM_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_RelFRD_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_RelFRD_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.RelFRD.class, nav.RelFRD.Builder.class);
    }

    public static com.google.protobuf.Parser<RelFRD> PARSER =
        new com.google.protobuf.AbstractParser<RelFRD>() {
      public RelFRD parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelFRD(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RelFRD> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TARGETID_FIELD_NUMBER = 1;
    private java.lang.Object targetID_;
    /**
     * <code>required string targetID = 1;</code>
     */
    public boolean hasTargetID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string targetID = 1;</code>
     */
    public java.lang.String getTargetID() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string targetID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTargetIDBytes() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMES_FIELD_NUMBER = 2;
    private double timeS_;
    /**
     * <code>required double timeS = 2;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeS = 2;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int FORWARDM_FIELD_NUMBER = 3;
    private double forwardM_;
    /**
     * <code>required double forwardM = 3;</code>
     */
    public boolean hasForwardM() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double forwardM = 3;</code>
     */
    public double getForwardM() {
      return forwardM_;
    }

    public static final int RIGHTM_FIELD_NUMBER = 4;
    private double rightM_;
    /**
     * <code>required double rightM = 4;</code>
     */
    public boolean hasRightM() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double rightM = 4;</code>
     */
    public double getRightM() {
      return rightM_;
    }

    public static final int DOWNM_FIELD_NUMBER = 5;
    private double downM_;
    /**
     * <code>required double downM = 5;</code>
     */
    public boolean hasDownM() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double downM = 5;</code>
     */
    public double getDownM() {
      return downM_;
    }

    public static final int FORWARDSIGMAM_FIELD_NUMBER = 6;
    private double forwardSigmaM_;
    /**
     * <code>optional double forwardSigmaM = 6 [default = 0];</code>
     */
    public boolean hasForwardSigmaM() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double forwardSigmaM = 6 [default = 0];</code>
     */
    public double getForwardSigmaM() {
      return forwardSigmaM_;
    }

    public static final int RIGHTSIGMAM_FIELD_NUMBER = 7;
    private double rightSigmaM_;
    /**
     * <code>optional double rightSigmaM = 7 [default = 0];</code>
     */
    public boolean hasRightSigmaM() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double rightSigmaM = 7 [default = 0];</code>
     */
    public double getRightSigmaM() {
      return rightSigmaM_;
    }

    public static final int DOWNSIGMAM_FIELD_NUMBER = 8;
    private double downSigmaM_;
    /**
     * <code>optional double downSigmaM = 8 [default = 0];</code>
     */
    public boolean hasDownSigmaM() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional double downSigmaM = 8 [default = 0];</code>
     */
    public double getDownSigmaM() {
      return downSigmaM_;
    }

    private void initFields() {
      targetID_ = "";
      timeS_ = 0D;
      forwardM_ = 0D;
      rightM_ = 0D;
      downM_ = 0D;
      forwardSigmaM_ = 0D;
      rightSigmaM_ = 0D;
      downSigmaM_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTargetID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, forwardM_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rightM_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, downM_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, forwardSigmaM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, rightSigmaM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, downSigmaM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, forwardM_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rightM_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, downM_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, forwardSigmaM_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, rightSigmaM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, downSigmaM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.RelFRD parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelFRD parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelFRD parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelFRD parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelFRD parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelFRD parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.RelFRD parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.RelFRD parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.RelFRD parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelFRD parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.RelFRD prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.RelFRD}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.RelFRD)
        nav.RelFRDOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_RelFRD_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_RelFRD_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.RelFRD.class, nav.RelFRD.Builder.class);
      }

      // Construct using nav.RelFRD.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        targetID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        forwardM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        rightM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        downM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        forwardSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        rightSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        downSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_RelFRD_descriptor;
      }

      public nav.RelFRD getDefaultInstanceForType() {
        return nav.RelFRD.getDefaultInstance();
      }

      public nav.RelFRD build() {
        nav.RelFRD result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.RelFRD buildPartial() {
        nav.RelFRD result = new nav.RelFRD(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.targetID_ = targetID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.forwardM_ = forwardM_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rightM_ = rightM_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.downM_ = downM_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.forwardSigmaM_ = forwardSigmaM_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.rightSigmaM_ = rightSigmaM_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.downSigmaM_ = downSigmaM_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.RelFRD) {
          return mergeFrom((nav.RelFRD)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.RelFRD other) {
        if (other == nav.RelFRD.getDefaultInstance()) return this;
        if (other.hasTargetID()) {
          bitField0_ |= 0x00000001;
          targetID_ = other.targetID_;
          onChanged();
        }
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasForwardM()) {
          setForwardM(other.getForwardM());
        }
        if (other.hasRightM()) {
          setRightM(other.getRightM());
        }
        if (other.hasDownM()) {
          setDownM(other.getDownM());
        }
        if (other.hasForwardSigmaM()) {
          setForwardSigmaM(other.getForwardSigmaM());
        }
        if (other.hasRightSigmaM()) {
          setRightSigmaM(other.getRightSigmaM());
        }
        if (other.hasDownSigmaM()) {
          setDownSigmaM(other.getDownSigmaM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTargetID()) {
          
          return false;
        }
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasForwardM()) {
          
          return false;
        }
        if (!hasRightM()) {
          
          return false;
        }
        if (!hasDownM()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.RelFRD parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.RelFRD) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object targetID_ = "";
      /**
       * <code>required string targetID = 1;</code>
       */
      public boolean hasTargetID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public java.lang.String getTargetID() {
        java.lang.Object ref = targetID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            targetID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTargetIDBytes() {
        java.lang.Object ref = targetID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder setTargetID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder clearTargetID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        targetID_ = getDefaultInstance().getTargetID();
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 1;</code>
       */
      public Builder setTargetIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        targetID_ = value;
        onChanged();
        return this;
      }

      private double timeS_ ;
      /**
       * <code>required double timeS = 2;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000002;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 2;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double forwardM_ ;
      /**
       * <code>required double forwardM = 3;</code>
       */
      public boolean hasForwardM() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double forwardM = 3;</code>
       */
      public double getForwardM() {
        return forwardM_;
      }
      /**
       * <code>required double forwardM = 3;</code>
       */
      public Builder setForwardM(double value) {
        bitField0_ |= 0x00000004;
        forwardM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardM = 3;</code>
       */
      public Builder clearForwardM() {
        bitField0_ = (bitField0_ & ~0x00000004);
        forwardM_ = 0D;
        onChanged();
        return this;
      }

      private double rightM_ ;
      /**
       * <code>required double rightM = 4;</code>
       */
      public boolean hasRightM() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double rightM = 4;</code>
       */
      public double getRightM() {
        return rightM_;
      }
      /**
       * <code>required double rightM = 4;</code>
       */
      public Builder setRightM(double value) {
        bitField0_ |= 0x00000008;
        rightM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightM = 4;</code>
       */
      public Builder clearRightM() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rightM_ = 0D;
        onChanged();
        return this;
      }

      private double downM_ ;
      /**
       * <code>required double downM = 5;</code>
       */
      public boolean hasDownM() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double downM = 5;</code>
       */
      public double getDownM() {
        return downM_;
      }
      /**
       * <code>required double downM = 5;</code>
       */
      public Builder setDownM(double value) {
        bitField0_ |= 0x00000010;
        downM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downM = 5;</code>
       */
      public Builder clearDownM() {
        bitField0_ = (bitField0_ & ~0x00000010);
        downM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardSigmaM_ ;
      /**
       * <code>optional double forwardSigmaM = 6 [default = 0];</code>
       */
      public boolean hasForwardSigmaM() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double forwardSigmaM = 6 [default = 0];</code>
       */
      public double getForwardSigmaM() {
        return forwardSigmaM_;
      }
      /**
       * <code>optional double forwardSigmaM = 6 [default = 0];</code>
       */
      public Builder setForwardSigmaM(double value) {
        bitField0_ |= 0x00000020;
        forwardSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardSigmaM = 6 [default = 0];</code>
       */
      public Builder clearForwardSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000020);
        forwardSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightSigmaM_ ;
      /**
       * <code>optional double rightSigmaM = 7 [default = 0];</code>
       */
      public boolean hasRightSigmaM() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double rightSigmaM = 7 [default = 0];</code>
       */
      public double getRightSigmaM() {
        return rightSigmaM_;
      }
      /**
       * <code>optional double rightSigmaM = 7 [default = 0];</code>
       */
      public Builder setRightSigmaM(double value) {
        bitField0_ |= 0x00000040;
        rightSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightSigmaM = 7 [default = 0];</code>
       */
      public Builder clearRightSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000040);
        rightSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double downSigmaM_ ;
      /**
       * <code>optional double downSigmaM = 8 [default = 0];</code>
       */
      public boolean hasDownSigmaM() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double downSigmaM = 8 [default = 0];</code>
       */
      public double getDownSigmaM() {
        return downSigmaM_;
      }
      /**
       * <code>optional double downSigmaM = 8 [default = 0];</code>
       */
      public Builder setDownSigmaM(double value) {
        bitField0_ |= 0x00000080;
        downSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downSigmaM = 8 [default = 0];</code>
       */
      public Builder clearDownSigmaM() {
        bitField0_ = (bitField0_ & ~0x00000080);
        downSigmaM_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.RelFRD)
    }

    static {
      defaultInstance = new RelFRD(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.RelFRD)
  }

  public interface FusedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.FusedState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double timeS = 1;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 1;</code>
     */
    double getTimeS();

    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    boolean hasTimeDeltaS();
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    double getTimeDeltaS();

    /**
     * <code>required double rollR = 3;</code>
     */
    boolean hasRollR();
    /**
     * <code>required double rollR = 3;</code>
     */
    double getRollR();

    /**
     * <code>required double pitchR = 4;</code>
     */
    boolean hasPitchR();
    /**
     * <code>required double pitchR = 4;</code>
     */
    double getPitchR();

    /**
     * <code>required double yawR = 5;</code>
     */
    boolean hasYawR();
    /**
     * <code>required double yawR = 5;</code>
     */
    double getYawR();

    /**
     * <code>required double rollDeltaR = 6;</code>
     */
    boolean hasRollDeltaR();
    /**
     * <code>required double rollDeltaR = 6;</code>
     */
    double getRollDeltaR();

    /**
     * <code>required double pitchDeltaR = 7;</code>
     */
    boolean hasPitchDeltaR();
    /**
     * <code>required double pitchDeltaR = 7;</code>
     */
    double getPitchDeltaR();

    /**
     * <code>required double yawDeltaR = 8;</code>
     */
    boolean hasYawDeltaR();
    /**
     * <code>required double yawDeltaR = 8;</code>
     */
    double getYawDeltaR();

    /**
     * <code>required double latR = 9;</code>
     */
    boolean hasLatR();
    /**
     * <code>required double latR = 9;</code>
     */
    double getLatR();

    /**
     * <code>required double lonR = 10;</code>
     */
    boolean hasLonR();
    /**
     * <code>required double lonR = 10;</code>
     */
    double getLonR();

    /**
     * <code>required double altM = 11;</code>
     */
    boolean hasAltM();
    /**
     * <code>required double altM = 11;</code>
     */
    double getAltM();

    /**
     * <code>required double forwardDeltaM = 12;</code>
     */
    boolean hasForwardDeltaM();
    /**
     * <code>required double forwardDeltaM = 12;</code>
     */
    double getForwardDeltaM();

    /**
     * <code>required double rightDeltaM = 13;</code>
     */
    boolean hasRightDeltaM();
    /**
     * <code>required double rightDeltaM = 13;</code>
     */
    double getRightDeltaM();

    /**
     * <code>required double downDeltaM = 14;</code>
     */
    boolean hasDownDeltaM();
    /**
     * <code>required double downDeltaM = 14;</code>
     */
    double getDownDeltaM();

    /**
     * <code>required double forwardRateDeltaMPS = 15;</code>
     */
    boolean hasForwardRateDeltaMPS();
    /**
     * <code>required double forwardRateDeltaMPS = 15;</code>
     */
    double getForwardRateDeltaMPS();

    /**
     * <code>required double rightRateDeltaMPS = 16;</code>
     */
    boolean hasRightRateDeltaMPS();
    /**
     * <code>required double rightRateDeltaMPS = 16;</code>
     */
    double getRightRateDeltaMPS();

    /**
     * <code>required double downRateDeltaMPS = 17;</code>
     */
    boolean hasDownRateDeltaMPS();
    /**
     * <code>required double downRateDeltaMPS = 17;</code>
     */
    double getDownRateDeltaMPS();

    /**
     * <code>optional double rollSigmaR = 18 [default = 0];</code>
     */
    boolean hasRollSigmaR();
    /**
     * <code>optional double rollSigmaR = 18 [default = 0];</code>
     */
    double getRollSigmaR();

    /**
     * <code>optional double pitchSigmaR = 19 [default = 0];</code>
     */
    boolean hasPitchSigmaR();
    /**
     * <code>optional double pitchSigmaR = 19 [default = 0];</code>
     */
    double getPitchSigmaR();

    /**
     * <code>optional double yawSigmaR = 20 [default = 0];</code>
     */
    boolean hasYawSigmaR();
    /**
     * <code>optional double yawSigmaR = 20 [default = 0];</code>
     */
    double getYawSigmaR();

    /**
     * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
     */
    boolean hasRollDeltaSigmaRPS();
    /**
     * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
     */
    double getRollDeltaSigmaRPS();

    /**
     * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
     */
    boolean hasPitchDeltaSigmaRPS();
    /**
     * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
     */
    double getPitchDeltaSigmaRPS();

    /**
     * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
     */
    boolean hasYawDeltaSigmaRPS();
    /**
     * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
     */
    double getYawDeltaSigmaRPS();

    /**
     * <code>optional double latSigmaR = 24 [default = 0];</code>
     */
    boolean hasLatSigmaR();
    /**
     * <code>optional double latSigmaR = 24 [default = 0];</code>
     */
    double getLatSigmaR();

    /**
     * <code>optional double lonSigmaR = 25 [default = 0];</code>
     */
    boolean hasLonSigmaR();
    /**
     * <code>optional double lonSigmaR = 25 [default = 0];</code>
     */
    double getLonSigmaR();

    /**
     * <code>optional double altSigmaM = 26 [default = 0];</code>
     */
    boolean hasAltSigmaM();
    /**
     * <code>optional double altSigmaM = 26 [default = 0];</code>
     */
    double getAltSigmaM();

    /**
     * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
     */
    boolean hasForwardDeltaSigmaM();
    /**
     * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
     */
    double getForwardDeltaSigmaM();

    /**
     * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
     */
    boolean hasRightDeltaSigmaM();
    /**
     * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
     */
    double getRightDeltaSigmaM();

    /**
     * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
     */
    boolean hasDownDeltaSigmaM();
    /**
     * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
     */
    double getDownDeltaSigmaM();

    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
     */
    boolean hasForwardRateDeltaSigmaMPS();
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
     */
    double getForwardRateDeltaSigmaMPS();

    /**
     * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
     */
    boolean hasRightRateDeltaSigmaMPS();
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
     */
    double getRightRateDeltaSigmaMPS();

    /**
     * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
     */
    boolean hasDownRateDeltaSigmaMPS();
    /**
     * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
     */
    double getDownRateDeltaSigmaMPS();
  }
  /**
   * Protobuf type {@code nav.FusedState}
   */
  public static final class FusedState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.FusedState)
      FusedStateOrBuilder {
    // Use FusedState.newBuilder() to construct.
    private FusedState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FusedState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FusedState defaultInstance;
    public static FusedState getDefaultInstance() {
      return defaultInstance;
    }

    public FusedState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FusedState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              timeS_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              timeDeltaS_ = input.readDouble();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              rollR_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              pitchR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              yawR_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              rollDeltaR_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              pitchDeltaR_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              yawDeltaR_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              latR_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              lonR_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              altM_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              forwardDeltaM_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              rightDeltaM_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              downDeltaM_ = input.readDouble();
              break;
            }
            case 121: {
              bitField0_ |= 0x00004000;
              forwardRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 129: {
              bitField0_ |= 0x00008000;
              rightRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              downRateDeltaMPS_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00020000;
              rollSigmaR_ = input.readDouble();
              break;
            }
            case 153: {
              bitField0_ |= 0x00040000;
              pitchSigmaR_ = input.readDouble();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              yawSigmaR_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              rollDeltaSigmaRPS_ = input.readDouble();
              break;
            }
            case 177: {
              bitField0_ |= 0x00200000;
              pitchDeltaSigmaRPS_ = input.readDouble();
              break;
            }
            case 185: {
              bitField0_ |= 0x00400000;
              yawDeltaSigmaRPS_ = input.readDouble();
              break;
            }
            case 193: {
              bitField0_ |= 0x00800000;
              latSigmaR_ = input.readDouble();
              break;
            }
            case 201: {
              bitField0_ |= 0x01000000;
              lonSigmaR_ = input.readDouble();
              break;
            }
            case 209: {
              bitField0_ |= 0x02000000;
              altSigmaM_ = input.readDouble();
              break;
            }
            case 217: {
              bitField0_ |= 0x04000000;
              forwardDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 225: {
              bitField0_ |= 0x08000000;
              rightDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 233: {
              bitField0_ |= 0x10000000;
              downDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 241: {
              bitField0_ |= 0x20000000;
              forwardRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
            case 249: {
              bitField0_ |= 0x40000000;
              rightRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
            case 257: {
              bitField0_ |= 0x80000000;
              downRateDeltaSigmaMPS_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_FusedState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_FusedState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.FusedState.class, nav.FusedState.Builder.class);
    }

    public static com.google.protobuf.Parser<FusedState> PARSER =
        new com.google.protobuf.AbstractParser<FusedState>() {
      public FusedState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FusedState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FusedState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TIMES_FIELD_NUMBER = 1;
    private double timeS_;
    /**
     * <code>required double timeS = 1;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double timeS = 1;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int TIMEDELTAS_FIELD_NUMBER = 2;
    private double timeDeltaS_;
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public boolean hasTimeDeltaS() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required double timeDeltaS = 2;</code>
     */
    public double getTimeDeltaS() {
      return timeDeltaS_;
    }

    public static final int ROLLR_FIELD_NUMBER = 3;
    private double rollR_;
    /**
     * <code>required double rollR = 3;</code>
     */
    public boolean hasRollR() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double rollR = 3;</code>
     */
    public double getRollR() {
      return rollR_;
    }

    public static final int PITCHR_FIELD_NUMBER = 4;
    private double pitchR_;
    /**
     * <code>required double pitchR = 4;</code>
     */
    public boolean hasPitchR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double pitchR = 4;</code>
     */
    public double getPitchR() {
      return pitchR_;
    }

    public static final int YAWR_FIELD_NUMBER = 5;
    private double yawR_;
    /**
     * <code>required double yawR = 5;</code>
     */
    public boolean hasYawR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double yawR = 5;</code>
     */
    public double getYawR() {
      return yawR_;
    }

    public static final int ROLLDELTAR_FIELD_NUMBER = 6;
    private double rollDeltaR_;
    /**
     * <code>required double rollDeltaR = 6;</code>
     */
    public boolean hasRollDeltaR() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double rollDeltaR = 6;</code>
     */
    public double getRollDeltaR() {
      return rollDeltaR_;
    }

    public static final int PITCHDELTAR_FIELD_NUMBER = 7;
    private double pitchDeltaR_;
    /**
     * <code>required double pitchDeltaR = 7;</code>
     */
    public boolean hasPitchDeltaR() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required double pitchDeltaR = 7;</code>
     */
    public double getPitchDeltaR() {
      return pitchDeltaR_;
    }

    public static final int YAWDELTAR_FIELD_NUMBER = 8;
    private double yawDeltaR_;
    /**
     * <code>required double yawDeltaR = 8;</code>
     */
    public boolean hasYawDeltaR() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required double yawDeltaR = 8;</code>
     */
    public double getYawDeltaR() {
      return yawDeltaR_;
    }

    public static final int LATR_FIELD_NUMBER = 9;
    private double latR_;
    /**
     * <code>required double latR = 9;</code>
     */
    public boolean hasLatR() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required double latR = 9;</code>
     */
    public double getLatR() {
      return latR_;
    }

    public static final int LONR_FIELD_NUMBER = 10;
    private double lonR_;
    /**
     * <code>required double lonR = 10;</code>
     */
    public boolean hasLonR() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required double lonR = 10;</code>
     */
    public double getLonR() {
      return lonR_;
    }

    public static final int ALTM_FIELD_NUMBER = 11;
    private double altM_;
    /**
     * <code>required double altM = 11;</code>
     */
    public boolean hasAltM() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required double altM = 11;</code>
     */
    public double getAltM() {
      return altM_;
    }

    public static final int FORWARDDELTAM_FIELD_NUMBER = 12;
    private double forwardDeltaM_;
    /**
     * <code>required double forwardDeltaM = 12;</code>
     */
    public boolean hasForwardDeltaM() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required double forwardDeltaM = 12;</code>
     */
    public double getForwardDeltaM() {
      return forwardDeltaM_;
    }

    public static final int RIGHTDELTAM_FIELD_NUMBER = 13;
    private double rightDeltaM_;
    /**
     * <code>required double rightDeltaM = 13;</code>
     */
    public boolean hasRightDeltaM() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>required double rightDeltaM = 13;</code>
     */
    public double getRightDeltaM() {
      return rightDeltaM_;
    }

    public static final int DOWNDELTAM_FIELD_NUMBER = 14;
    private double downDeltaM_;
    /**
     * <code>required double downDeltaM = 14;</code>
     */
    public boolean hasDownDeltaM() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>required double downDeltaM = 14;</code>
     */
    public double getDownDeltaM() {
      return downDeltaM_;
    }

    public static final int FORWARDRATEDELTAMPS_FIELD_NUMBER = 15;
    private double forwardRateDeltaMPS_;
    /**
     * <code>required double forwardRateDeltaMPS = 15;</code>
     */
    public boolean hasForwardRateDeltaMPS() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>required double forwardRateDeltaMPS = 15;</code>
     */
    public double getForwardRateDeltaMPS() {
      return forwardRateDeltaMPS_;
    }

    public static final int RIGHTRATEDELTAMPS_FIELD_NUMBER = 16;
    private double rightRateDeltaMPS_;
    /**
     * <code>required double rightRateDeltaMPS = 16;</code>
     */
    public boolean hasRightRateDeltaMPS() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>required double rightRateDeltaMPS = 16;</code>
     */
    public double getRightRateDeltaMPS() {
      return rightRateDeltaMPS_;
    }

    public static final int DOWNRATEDELTAMPS_FIELD_NUMBER = 17;
    private double downRateDeltaMPS_;
    /**
     * <code>required double downRateDeltaMPS = 17;</code>
     */
    public boolean hasDownRateDeltaMPS() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>required double downRateDeltaMPS = 17;</code>
     */
    public double getDownRateDeltaMPS() {
      return downRateDeltaMPS_;
    }

    public static final int ROLLSIGMAR_FIELD_NUMBER = 18;
    private double rollSigmaR_;
    /**
     * <code>optional double rollSigmaR = 18 [default = 0];</code>
     */
    public boolean hasRollSigmaR() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional double rollSigmaR = 18 [default = 0];</code>
     */
    public double getRollSigmaR() {
      return rollSigmaR_;
    }

    public static final int PITCHSIGMAR_FIELD_NUMBER = 19;
    private double pitchSigmaR_;
    /**
     * <code>optional double pitchSigmaR = 19 [default = 0];</code>
     */
    public boolean hasPitchSigmaR() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional double pitchSigmaR = 19 [default = 0];</code>
     */
    public double getPitchSigmaR() {
      return pitchSigmaR_;
    }

    public static final int YAWSIGMAR_FIELD_NUMBER = 20;
    private double yawSigmaR_;
    /**
     * <code>optional double yawSigmaR = 20 [default = 0];</code>
     */
    public boolean hasYawSigmaR() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double yawSigmaR = 20 [default = 0];</code>
     */
    public double getYawSigmaR() {
      return yawSigmaR_;
    }

    public static final int ROLLDELTASIGMARPS_FIELD_NUMBER = 21;
    private double rollDeltaSigmaRPS_;
    /**
     * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
     */
    public boolean hasRollDeltaSigmaRPS() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
     */
    public double getRollDeltaSigmaRPS() {
      return rollDeltaSigmaRPS_;
    }

    public static final int PITCHDELTASIGMARPS_FIELD_NUMBER = 22;
    private double pitchDeltaSigmaRPS_;
    /**
     * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
     */
    public boolean hasPitchDeltaSigmaRPS() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
     */
    public double getPitchDeltaSigmaRPS() {
      return pitchDeltaSigmaRPS_;
    }

    public static final int YAWDELTASIGMARPS_FIELD_NUMBER = 23;
    private double yawDeltaSigmaRPS_;
    /**
     * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
     */
    public boolean hasYawDeltaSigmaRPS() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
     */
    public double getYawDeltaSigmaRPS() {
      return yawDeltaSigmaRPS_;
    }

    public static final int LATSIGMAR_FIELD_NUMBER = 24;
    private double latSigmaR_;
    /**
     * <code>optional double latSigmaR = 24 [default = 0];</code>
     */
    public boolean hasLatSigmaR() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional double latSigmaR = 24 [default = 0];</code>
     */
    public double getLatSigmaR() {
      return latSigmaR_;
    }

    public static final int LONSIGMAR_FIELD_NUMBER = 25;
    private double lonSigmaR_;
    /**
     * <code>optional double lonSigmaR = 25 [default = 0];</code>
     */
    public boolean hasLonSigmaR() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional double lonSigmaR = 25 [default = 0];</code>
     */
    public double getLonSigmaR() {
      return lonSigmaR_;
    }

    public static final int ALTSIGMAM_FIELD_NUMBER = 26;
    private double altSigmaM_;
    /**
     * <code>optional double altSigmaM = 26 [default = 0];</code>
     */
    public boolean hasAltSigmaM() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional double altSigmaM = 26 [default = 0];</code>
     */
    public double getAltSigmaM() {
      return altSigmaM_;
    }

    public static final int FORWARDDELTASIGMAM_FIELD_NUMBER = 27;
    private double forwardDeltaSigmaM_;
    /**
     * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
     */
    public boolean hasForwardDeltaSigmaM() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
     */
    public double getForwardDeltaSigmaM() {
      return forwardDeltaSigmaM_;
    }

    public static final int RIGHTDELTASIGMAM_FIELD_NUMBER = 28;
    private double rightDeltaSigmaM_;
    /**
     * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
     */
    public boolean hasRightDeltaSigmaM() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
     */
    public double getRightDeltaSigmaM() {
      return rightDeltaSigmaM_;
    }

    public static final int DOWNDELTASIGMAM_FIELD_NUMBER = 29;
    private double downDeltaSigmaM_;
    /**
     * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
     */
    public boolean hasDownDeltaSigmaM() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
     */
    public double getDownDeltaSigmaM() {
      return downDeltaSigmaM_;
    }

    public static final int FORWARDRATEDELTASIGMAMPS_FIELD_NUMBER = 30;
    private double forwardRateDeltaSigmaMPS_;
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
     */
    public boolean hasForwardRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
     */
    public double getForwardRateDeltaSigmaMPS() {
      return forwardRateDeltaSigmaMPS_;
    }

    public static final int RIGHTRATEDELTASIGMAMPS_FIELD_NUMBER = 31;
    private double rightRateDeltaSigmaMPS_;
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
     */
    public boolean hasRightRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
     */
    public double getRightRateDeltaSigmaMPS() {
      return rightRateDeltaSigmaMPS_;
    }

    public static final int DOWNRATEDELTASIGMAMPS_FIELD_NUMBER = 32;
    private double downRateDeltaSigmaMPS_;
    /**
     * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
     */
    public boolean hasDownRateDeltaSigmaMPS() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
     */
    public double getDownRateDeltaSigmaMPS() {
      return downRateDeltaSigmaMPS_;
    }

    private void initFields() {
      timeS_ = 0D;
      timeDeltaS_ = 0D;
      rollR_ = 0D;
      pitchR_ = 0D;
      yawR_ = 0D;
      rollDeltaR_ = 0D;
      pitchDeltaR_ = 0D;
      yawDeltaR_ = 0D;
      latR_ = 0D;
      lonR_ = 0D;
      altM_ = 0D;
      forwardDeltaM_ = 0D;
      rightDeltaM_ = 0D;
      downDeltaM_ = 0D;
      forwardRateDeltaMPS_ = 0D;
      rightRateDeltaMPS_ = 0D;
      downRateDeltaMPS_ = 0D;
      rollSigmaR_ = 0D;
      pitchSigmaR_ = 0D;
      yawSigmaR_ = 0D;
      rollDeltaSigmaRPS_ = 0D;
      pitchDeltaSigmaRPS_ = 0D;
      yawDeltaSigmaRPS_ = 0D;
      latSigmaR_ = 0D;
      lonSigmaR_ = 0D;
      altSigmaM_ = 0D;
      forwardDeltaSigmaM_ = 0D;
      rightDeltaSigmaM_ = 0D;
      downDeltaSigmaM_ = 0D;
      forwardRateDeltaSigmaMPS_ = 0D;
      rightRateDeltaSigmaMPS_ = 0D;
      downRateDeltaSigmaMPS_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeDeltaS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawDeltaR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLatR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLonR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAltM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownRateDeltaMPS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, rollR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, pitchR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, yawR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, rollDeltaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, pitchDeltaR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, yawDeltaR_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, latR_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, lonR_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, altM_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, rightDeltaM_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, downDeltaM_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(15, forwardRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(16, rightRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(17, downRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(18, rollSigmaR_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeDouble(19, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, yawSigmaR_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeDouble(21, rollDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeDouble(22, pitchDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeDouble(23, yawDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeDouble(24, latSigmaR_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeDouble(25, lonSigmaR_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeDouble(26, altSigmaM_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeDouble(27, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeDouble(28, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeDouble(29, downDeltaSigmaM_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeDouble(30, forwardRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeDouble(31, rightRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeDouble(32, downRateDeltaSigmaMPS_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, timeS_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, timeDeltaS_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rollR_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, pitchR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, yawR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, rollDeltaR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, pitchDeltaR_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, yawDeltaR_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, latR_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, lonR_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, altM_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, rightDeltaM_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, downDeltaM_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, forwardRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, rightRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, downRateDeltaMPS_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, rollSigmaR_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, yawSigmaR_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, rollDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(22, pitchDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(23, yawDeltaSigmaRPS_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(24, latSigmaR_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(25, lonSigmaR_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(26, altSigmaM_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(27, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(28, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(29, downDeltaSigmaM_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(30, forwardRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(31, rightRateDeltaSigmaMPS_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(32, downRateDeltaSigmaMPS_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.FusedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.FusedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.FusedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.FusedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.FusedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.FusedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.FusedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.FusedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.FusedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.FusedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.FusedState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.FusedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.FusedState)
        nav.FusedStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_FusedState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_FusedState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.FusedState.class, nav.FusedState.Builder.class);
      }

      // Construct using nav.FusedState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        timeDeltaS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        rollR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        pitchR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        yawR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        rollDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        pitchDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        yawDeltaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        latR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        lonR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        altM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        forwardDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        rightDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        downDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        forwardRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        rightRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        downRateDeltaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        rollSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        pitchSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00040000);
        yawSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        rollDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        pitchDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00200000);
        yawDeltaSigmaRPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00400000);
        latSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00800000);
        lonSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x01000000);
        altSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x02000000);
        forwardDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x04000000);
        rightDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x08000000);
        downDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x10000000);
        forwardRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x20000000);
        rightRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x40000000);
        downRateDeltaSigmaMPS_ = 0D;
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_FusedState_descriptor;
      }

      public nav.FusedState getDefaultInstanceForType() {
        return nav.FusedState.getDefaultInstance();
      }

      public nav.FusedState build() {
        nav.FusedState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.FusedState buildPartial() {
        nav.FusedState result = new nav.FusedState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timeDeltaS_ = timeDeltaS_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rollR_ = rollR_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pitchR_ = pitchR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.yawR_ = yawR_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.rollDeltaR_ = rollDeltaR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pitchDeltaR_ = pitchDeltaR_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.yawDeltaR_ = yawDeltaR_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.latR_ = latR_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lonR_ = lonR_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.altM_ = altM_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.forwardDeltaM_ = forwardDeltaM_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.rightDeltaM_ = rightDeltaM_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.downDeltaM_ = downDeltaM_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.forwardRateDeltaMPS_ = forwardRateDeltaMPS_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.rightRateDeltaMPS_ = rightRateDeltaMPS_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.downRateDeltaMPS_ = downRateDeltaMPS_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.rollSigmaR_ = rollSigmaR_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.pitchSigmaR_ = pitchSigmaR_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.yawSigmaR_ = yawSigmaR_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.rollDeltaSigmaRPS_ = rollDeltaSigmaRPS_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.pitchDeltaSigmaRPS_ = pitchDeltaSigmaRPS_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.yawDeltaSigmaRPS_ = yawDeltaSigmaRPS_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.latSigmaR_ = latSigmaR_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.lonSigmaR_ = lonSigmaR_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.altSigmaM_ = altSigmaM_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.forwardDeltaSigmaM_ = forwardDeltaSigmaM_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.rightDeltaSigmaM_ = rightDeltaSigmaM_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.downDeltaSigmaM_ = downDeltaSigmaM_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.forwardRateDeltaSigmaMPS_ = forwardRateDeltaSigmaMPS_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.rightRateDeltaSigmaMPS_ = rightRateDeltaSigmaMPS_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.downRateDeltaSigmaMPS_ = downRateDeltaSigmaMPS_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.FusedState) {
          return mergeFrom((nav.FusedState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.FusedState other) {
        if (other == nav.FusedState.getDefaultInstance()) return this;
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasTimeDeltaS()) {
          setTimeDeltaS(other.getTimeDeltaS());
        }
        if (other.hasRollR()) {
          setRollR(other.getRollR());
        }
        if (other.hasPitchR()) {
          setPitchR(other.getPitchR());
        }
        if (other.hasYawR()) {
          setYawR(other.getYawR());
        }
        if (other.hasRollDeltaR()) {
          setRollDeltaR(other.getRollDeltaR());
        }
        if (other.hasPitchDeltaR()) {
          setPitchDeltaR(other.getPitchDeltaR());
        }
        if (other.hasYawDeltaR()) {
          setYawDeltaR(other.getYawDeltaR());
        }
        if (other.hasLatR()) {
          setLatR(other.getLatR());
        }
        if (other.hasLonR()) {
          setLonR(other.getLonR());
        }
        if (other.hasAltM()) {
          setAltM(other.getAltM());
        }
        if (other.hasForwardDeltaM()) {
          setForwardDeltaM(other.getForwardDeltaM());
        }
        if (other.hasRightDeltaM()) {
          setRightDeltaM(other.getRightDeltaM());
        }
        if (other.hasDownDeltaM()) {
          setDownDeltaM(other.getDownDeltaM());
        }
        if (other.hasForwardRateDeltaMPS()) {
          setForwardRateDeltaMPS(other.getForwardRateDeltaMPS());
        }
        if (other.hasRightRateDeltaMPS()) {
          setRightRateDeltaMPS(other.getRightRateDeltaMPS());
        }
        if (other.hasDownRateDeltaMPS()) {
          setDownRateDeltaMPS(other.getDownRateDeltaMPS());
        }
        if (other.hasRollSigmaR()) {
          setRollSigmaR(other.getRollSigmaR());
        }
        if (other.hasPitchSigmaR()) {
          setPitchSigmaR(other.getPitchSigmaR());
        }
        if (other.hasYawSigmaR()) {
          setYawSigmaR(other.getYawSigmaR());
        }
        if (other.hasRollDeltaSigmaRPS()) {
          setRollDeltaSigmaRPS(other.getRollDeltaSigmaRPS());
        }
        if (other.hasPitchDeltaSigmaRPS()) {
          setPitchDeltaSigmaRPS(other.getPitchDeltaSigmaRPS());
        }
        if (other.hasYawDeltaSigmaRPS()) {
          setYawDeltaSigmaRPS(other.getYawDeltaSigmaRPS());
        }
        if (other.hasLatSigmaR()) {
          setLatSigmaR(other.getLatSigmaR());
        }
        if (other.hasLonSigmaR()) {
          setLonSigmaR(other.getLonSigmaR());
        }
        if (other.hasAltSigmaM()) {
          setAltSigmaM(other.getAltSigmaM());
        }
        if (other.hasForwardDeltaSigmaM()) {
          setForwardDeltaSigmaM(other.getForwardDeltaSigmaM());
        }
        if (other.hasRightDeltaSigmaM()) {
          setRightDeltaSigmaM(other.getRightDeltaSigmaM());
        }
        if (other.hasDownDeltaSigmaM()) {
          setDownDeltaSigmaM(other.getDownDeltaSigmaM());
        }
        if (other.hasForwardRateDeltaSigmaMPS()) {
          setForwardRateDeltaSigmaMPS(other.getForwardRateDeltaSigmaMPS());
        }
        if (other.hasRightRateDeltaSigmaMPS()) {
          setRightRateDeltaSigmaMPS(other.getRightRateDeltaSigmaMPS());
        }
        if (other.hasDownRateDeltaSigmaMPS()) {
          setDownRateDeltaSigmaMPS(other.getDownRateDeltaSigmaMPS());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasTimeDeltaS()) {
          
          return false;
        }
        if (!hasRollR()) {
          
          return false;
        }
        if (!hasPitchR()) {
          
          return false;
        }
        if (!hasYawR()) {
          
          return false;
        }
        if (!hasRollDeltaR()) {
          
          return false;
        }
        if (!hasPitchDeltaR()) {
          
          return false;
        }
        if (!hasYawDeltaR()) {
          
          return false;
        }
        if (!hasLatR()) {
          
          return false;
        }
        if (!hasLonR()) {
          
          return false;
        }
        if (!hasAltM()) {
          
          return false;
        }
        if (!hasForwardDeltaM()) {
          
          return false;
        }
        if (!hasRightDeltaM()) {
          
          return false;
        }
        if (!hasDownDeltaM()) {
          
          return false;
        }
        if (!hasForwardRateDeltaMPS()) {
          
          return false;
        }
        if (!hasRightRateDeltaMPS()) {
          
          return false;
        }
        if (!hasDownRateDeltaMPS()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.FusedState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.FusedState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double timeS_ ;
      /**
       * <code>required double timeS = 1;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000001;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 1;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double timeDeltaS_ ;
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public boolean hasTimeDeltaS() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public double getTimeDeltaS() {
        return timeDeltaS_;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder setTimeDeltaS(double value) {
        bitField0_ |= 0x00000002;
        timeDeltaS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeDeltaS = 2;</code>
       */
      public Builder clearTimeDeltaS() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timeDeltaS_ = 0D;
        onChanged();
        return this;
      }

      private double rollR_ ;
      /**
       * <code>required double rollR = 3;</code>
       */
      public boolean hasRollR() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public double getRollR() {
        return rollR_;
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public Builder setRollR(double value) {
        bitField0_ |= 0x00000004;
        rollR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollR = 3;</code>
       */
      public Builder clearRollR() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rollR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchR_ ;
      /**
       * <code>required double pitchR = 4;</code>
       */
      public boolean hasPitchR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public double getPitchR() {
        return pitchR_;
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public Builder setPitchR(double value) {
        bitField0_ |= 0x00000008;
        pitchR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchR = 4;</code>
       */
      public Builder clearPitchR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pitchR_ = 0D;
        onChanged();
        return this;
      }

      private double yawR_ ;
      /**
       * <code>required double yawR = 5;</code>
       */
      public boolean hasYawR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public double getYawR() {
        return yawR_;
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public Builder setYawR(double value) {
        bitField0_ |= 0x00000010;
        yawR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawR = 5;</code>
       */
      public Builder clearYawR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        yawR_ = 0D;
        onChanged();
        return this;
      }

      private double rollDeltaR_ ;
      /**
       * <code>required double rollDeltaR = 6;</code>
       */
      public boolean hasRollDeltaR() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double rollDeltaR = 6;</code>
       */
      public double getRollDeltaR() {
        return rollDeltaR_;
      }
      /**
       * <code>required double rollDeltaR = 6;</code>
       */
      public Builder setRollDeltaR(double value) {
        bitField0_ |= 0x00000020;
        rollDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollDeltaR = 6;</code>
       */
      public Builder clearRollDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000020);
        rollDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchDeltaR_ ;
      /**
       * <code>required double pitchDeltaR = 7;</code>
       */
      public boolean hasPitchDeltaR() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double pitchDeltaR = 7;</code>
       */
      public double getPitchDeltaR() {
        return pitchDeltaR_;
      }
      /**
       * <code>required double pitchDeltaR = 7;</code>
       */
      public Builder setPitchDeltaR(double value) {
        bitField0_ |= 0x00000040;
        pitchDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchDeltaR = 7;</code>
       */
      public Builder clearPitchDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pitchDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawDeltaR_ ;
      /**
       * <code>required double yawDeltaR = 8;</code>
       */
      public boolean hasYawDeltaR() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required double yawDeltaR = 8;</code>
       */
      public double getYawDeltaR() {
        return yawDeltaR_;
      }
      /**
       * <code>required double yawDeltaR = 8;</code>
       */
      public Builder setYawDeltaR(double value) {
        bitField0_ |= 0x00000080;
        yawDeltaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawDeltaR = 8;</code>
       */
      public Builder clearYawDeltaR() {
        bitField0_ = (bitField0_ & ~0x00000080);
        yawDeltaR_ = 0D;
        onChanged();
        return this;
      }

      private double latR_ ;
      /**
       * <code>required double latR = 9;</code>
       */
      public boolean hasLatR() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required double latR = 9;</code>
       */
      public double getLatR() {
        return latR_;
      }
      /**
       * <code>required double latR = 9;</code>
       */
      public Builder setLatR(double value) {
        bitField0_ |= 0x00000100;
        latR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double latR = 9;</code>
       */
      public Builder clearLatR() {
        bitField0_ = (bitField0_ & ~0x00000100);
        latR_ = 0D;
        onChanged();
        return this;
      }

      private double lonR_ ;
      /**
       * <code>required double lonR = 10;</code>
       */
      public boolean hasLonR() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required double lonR = 10;</code>
       */
      public double getLonR() {
        return lonR_;
      }
      /**
       * <code>required double lonR = 10;</code>
       */
      public Builder setLonR(double value) {
        bitField0_ |= 0x00000200;
        lonR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double lonR = 10;</code>
       */
      public Builder clearLonR() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lonR_ = 0D;
        onChanged();
        return this;
      }

      private double altM_ ;
      /**
       * <code>required double altM = 11;</code>
       */
      public boolean hasAltM() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required double altM = 11;</code>
       */
      public double getAltM() {
        return altM_;
      }
      /**
       * <code>required double altM = 11;</code>
       */
      public Builder setAltM(double value) {
        bitField0_ |= 0x00000400;
        altM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double altM = 11;</code>
       */
      public Builder clearAltM() {
        bitField0_ = (bitField0_ & ~0x00000400);
        altM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaM_ ;
      /**
       * <code>required double forwardDeltaM = 12;</code>
       */
      public boolean hasForwardDeltaM() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required double forwardDeltaM = 12;</code>
       */
      public double getForwardDeltaM() {
        return forwardDeltaM_;
      }
      /**
       * <code>required double forwardDeltaM = 12;</code>
       */
      public Builder setForwardDeltaM(double value) {
        bitField0_ |= 0x00000800;
        forwardDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardDeltaM = 12;</code>
       */
      public Builder clearForwardDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000800);
        forwardDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaM_ ;
      /**
       * <code>required double rightDeltaM = 13;</code>
       */
      public boolean hasRightDeltaM() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>required double rightDeltaM = 13;</code>
       */
      public double getRightDeltaM() {
        return rightDeltaM_;
      }
      /**
       * <code>required double rightDeltaM = 13;</code>
       */
      public Builder setRightDeltaM(double value) {
        bitField0_ |= 0x00001000;
        rightDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightDeltaM = 13;</code>
       */
      public Builder clearRightDeltaM() {
        bitField0_ = (bitField0_ & ~0x00001000);
        rightDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaM_ ;
      /**
       * <code>required double downDeltaM = 14;</code>
       */
      public boolean hasDownDeltaM() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>required double downDeltaM = 14;</code>
       */
      public double getDownDeltaM() {
        return downDeltaM_;
      }
      /**
       * <code>required double downDeltaM = 14;</code>
       */
      public Builder setDownDeltaM(double value) {
        bitField0_ |= 0x00002000;
        downDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downDeltaM = 14;</code>
       */
      public Builder clearDownDeltaM() {
        bitField0_ = (bitField0_ & ~0x00002000);
        downDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardRateDeltaMPS_ ;
      /**
       * <code>required double forwardRateDeltaMPS = 15;</code>
       */
      public boolean hasForwardRateDeltaMPS() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>required double forwardRateDeltaMPS = 15;</code>
       */
      public double getForwardRateDeltaMPS() {
        return forwardRateDeltaMPS_;
      }
      /**
       * <code>required double forwardRateDeltaMPS = 15;</code>
       */
      public Builder setForwardRateDeltaMPS(double value) {
        bitField0_ |= 0x00004000;
        forwardRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardRateDeltaMPS = 15;</code>
       */
      public Builder clearForwardRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00004000);
        forwardRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double rightRateDeltaMPS_ ;
      /**
       * <code>required double rightRateDeltaMPS = 16;</code>
       */
      public boolean hasRightRateDeltaMPS() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>required double rightRateDeltaMPS = 16;</code>
       */
      public double getRightRateDeltaMPS() {
        return rightRateDeltaMPS_;
      }
      /**
       * <code>required double rightRateDeltaMPS = 16;</code>
       */
      public Builder setRightRateDeltaMPS(double value) {
        bitField0_ |= 0x00008000;
        rightRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightRateDeltaMPS = 16;</code>
       */
      public Builder clearRightRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00008000);
        rightRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double downRateDeltaMPS_ ;
      /**
       * <code>required double downRateDeltaMPS = 17;</code>
       */
      public boolean hasDownRateDeltaMPS() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>required double downRateDeltaMPS = 17;</code>
       */
      public double getDownRateDeltaMPS() {
        return downRateDeltaMPS_;
      }
      /**
       * <code>required double downRateDeltaMPS = 17;</code>
       */
      public Builder setDownRateDeltaMPS(double value) {
        bitField0_ |= 0x00010000;
        downRateDeltaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downRateDeltaMPS = 17;</code>
       */
      public Builder clearDownRateDeltaMPS() {
        bitField0_ = (bitField0_ & ~0x00010000);
        downRateDeltaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double rollSigmaR_ ;
      /**
       * <code>optional double rollSigmaR = 18 [default = 0];</code>
       */
      public boolean hasRollSigmaR() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional double rollSigmaR = 18 [default = 0];</code>
       */
      public double getRollSigmaR() {
        return rollSigmaR_;
      }
      /**
       * <code>optional double rollSigmaR = 18 [default = 0];</code>
       */
      public Builder setRollSigmaR(double value) {
        bitField0_ |= 0x00020000;
        rollSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollSigmaR = 18 [default = 0];</code>
       */
      public Builder clearRollSigmaR() {
        bitField0_ = (bitField0_ & ~0x00020000);
        rollSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchSigmaR_ ;
      /**
       * <code>optional double pitchSigmaR = 19 [default = 0];</code>
       */
      public boolean hasPitchSigmaR() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional double pitchSigmaR = 19 [default = 0];</code>
       */
      public double getPitchSigmaR() {
        return pitchSigmaR_;
      }
      /**
       * <code>optional double pitchSigmaR = 19 [default = 0];</code>
       */
      public Builder setPitchSigmaR(double value) {
        bitField0_ |= 0x00040000;
        pitchSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchSigmaR = 19 [default = 0];</code>
       */
      public Builder clearPitchSigmaR() {
        bitField0_ = (bitField0_ & ~0x00040000);
        pitchSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawSigmaR_ ;
      /**
       * <code>optional double yawSigmaR = 20 [default = 0];</code>
       */
      public boolean hasYawSigmaR() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double yawSigmaR = 20 [default = 0];</code>
       */
      public double getYawSigmaR() {
        return yawSigmaR_;
      }
      /**
       * <code>optional double yawSigmaR = 20 [default = 0];</code>
       */
      public Builder setYawSigmaR(double value) {
        bitField0_ |= 0x00080000;
        yawSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawSigmaR = 20 [default = 0];</code>
       */
      public Builder clearYawSigmaR() {
        bitField0_ = (bitField0_ & ~0x00080000);
        yawSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double rollDeltaSigmaRPS_ ;
      /**
       * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
       */
      public boolean hasRollDeltaSigmaRPS() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
       */
      public double getRollDeltaSigmaRPS() {
        return rollDeltaSigmaRPS_;
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
       */
      public Builder setRollDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00100000;
        rollDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollDeltaSigmaRPS = 21 [default = 0];</code>
       */
      public Builder clearRollDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00100000);
        rollDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      private double pitchDeltaSigmaRPS_ ;
      /**
       * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
       */
      public boolean hasPitchDeltaSigmaRPS() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
       */
      public double getPitchDeltaSigmaRPS() {
        return pitchDeltaSigmaRPS_;
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
       */
      public Builder setPitchDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00200000;
        pitchDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchDeltaSigmaRPS = 22 [default = 0];</code>
       */
      public Builder clearPitchDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00200000);
        pitchDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      private double yawDeltaSigmaRPS_ ;
      /**
       * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
       */
      public boolean hasYawDeltaSigmaRPS() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
       */
      public double getYawDeltaSigmaRPS() {
        return yawDeltaSigmaRPS_;
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
       */
      public Builder setYawDeltaSigmaRPS(double value) {
        bitField0_ |= 0x00400000;
        yawDeltaSigmaRPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawDeltaSigmaRPS = 23 [default = 0];</code>
       */
      public Builder clearYawDeltaSigmaRPS() {
        bitField0_ = (bitField0_ & ~0x00400000);
        yawDeltaSigmaRPS_ = 0D;
        onChanged();
        return this;
      }

      private double latSigmaR_ ;
      /**
       * <code>optional double latSigmaR = 24 [default = 0];</code>
       */
      public boolean hasLatSigmaR() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional double latSigmaR = 24 [default = 0];</code>
       */
      public double getLatSigmaR() {
        return latSigmaR_;
      }
      /**
       * <code>optional double latSigmaR = 24 [default = 0];</code>
       */
      public Builder setLatSigmaR(double value) {
        bitField0_ |= 0x00800000;
        latSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double latSigmaR = 24 [default = 0];</code>
       */
      public Builder clearLatSigmaR() {
        bitField0_ = (bitField0_ & ~0x00800000);
        latSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double lonSigmaR_ ;
      /**
       * <code>optional double lonSigmaR = 25 [default = 0];</code>
       */
      public boolean hasLonSigmaR() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional double lonSigmaR = 25 [default = 0];</code>
       */
      public double getLonSigmaR() {
        return lonSigmaR_;
      }
      /**
       * <code>optional double lonSigmaR = 25 [default = 0];</code>
       */
      public Builder setLonSigmaR(double value) {
        bitField0_ |= 0x01000000;
        lonSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double lonSigmaR = 25 [default = 0];</code>
       */
      public Builder clearLonSigmaR() {
        bitField0_ = (bitField0_ & ~0x01000000);
        lonSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double altSigmaM_ ;
      /**
       * <code>optional double altSigmaM = 26 [default = 0];</code>
       */
      public boolean hasAltSigmaM() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional double altSigmaM = 26 [default = 0];</code>
       */
      public double getAltSigmaM() {
        return altSigmaM_;
      }
      /**
       * <code>optional double altSigmaM = 26 [default = 0];</code>
       */
      public Builder setAltSigmaM(double value) {
        bitField0_ |= 0x02000000;
        altSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double altSigmaM = 26 [default = 0];</code>
       */
      public Builder clearAltSigmaM() {
        bitField0_ = (bitField0_ & ~0x02000000);
        altSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaSigmaM_ ;
      /**
       * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
       */
      public boolean hasForwardDeltaSigmaM() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
       */
      public double getForwardDeltaSigmaM() {
        return forwardDeltaSigmaM_;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
       */
      public Builder setForwardDeltaSigmaM(double value) {
        bitField0_ |= 0x04000000;
        forwardDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 27 [default = 0];</code>
       */
      public Builder clearForwardDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x04000000);
        forwardDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaSigmaM_ ;
      /**
       * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
       */
      public boolean hasRightDeltaSigmaM() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
       */
      public double getRightDeltaSigmaM() {
        return rightDeltaSigmaM_;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
       */
      public Builder setRightDeltaSigmaM(double value) {
        bitField0_ |= 0x08000000;
        rightDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 28 [default = 0];</code>
       */
      public Builder clearRightDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x08000000);
        rightDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaSigmaM_ ;
      /**
       * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
       */
      public boolean hasDownDeltaSigmaM() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
       */
      public double getDownDeltaSigmaM() {
        return downDeltaSigmaM_;
      }
      /**
       * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
       */
      public Builder setDownDeltaSigmaM(double value) {
        bitField0_ |= 0x10000000;
        downDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downDeltaSigmaM = 29 [default = 0];</code>
       */
      public Builder clearDownDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x10000000);
        downDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
       */
      public boolean hasForwardRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
       */
      public double getForwardRateDeltaSigmaMPS() {
        return forwardRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
       */
      public Builder setForwardRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x20000000;
        forwardRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardRateDeltaSigmaMPS = 30 [default = 0];</code>
       */
      public Builder clearForwardRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x20000000);
        forwardRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double rightRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
       */
      public boolean hasRightRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
       */
      public double getRightRateDeltaSigmaMPS() {
        return rightRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
       */
      public Builder setRightRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x40000000;
        rightRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightRateDeltaSigmaMPS = 31 [default = 0];</code>
       */
      public Builder clearRightRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x40000000);
        rightRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      private double downRateDeltaSigmaMPS_ ;
      /**
       * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
       */
      public boolean hasDownRateDeltaSigmaMPS() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
       */
      public double getDownRateDeltaSigmaMPS() {
        return downRateDeltaSigmaMPS_;
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
       */
      public Builder setDownRateDeltaSigmaMPS(double value) {
        bitField0_ |= 0x80000000;
        downRateDeltaSigmaMPS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downRateDeltaSigmaMPS = 32 [default = 0];</code>
       */
      public Builder clearDownRateDeltaSigmaMPS() {
        bitField0_ = (bitField0_ & ~0x80000000);
        downRateDeltaSigmaMPS_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.FusedState)
    }

    static {
      defaultInstance = new FusedState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.FusedState)
  }

  public interface RelFusedStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nav.RelFusedState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string ownID = 1;</code>
     */
    boolean hasOwnID();
    /**
     * <code>required string ownID = 1;</code>
     */
    java.lang.String getOwnID();
    /**
     * <code>required string ownID = 1;</code>
     */
    com.google.protobuf.ByteString
        getOwnIDBytes();

    /**
     * <code>required string targetID = 2;</code>
     */
    boolean hasTargetID();
    /**
     * <code>required string targetID = 2;</code>
     */
    java.lang.String getTargetID();
    /**
     * <code>required string targetID = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetIDBytes();

    /**
     * <code>required double timeS = 3;</code>
     */
    boolean hasTimeS();
    /**
     * <code>required double timeS = 3;</code>
     */
    double getTimeS();

    /**
     * <code>required double rollR = 4;</code>
     */
    boolean hasRollR();
    /**
     * <code>required double rollR = 4;</code>
     */
    double getRollR();

    /**
     * <code>required double pitchR = 5;</code>
     */
    boolean hasPitchR();
    /**
     * <code>required double pitchR = 5;</code>
     */
    double getPitchR();

    /**
     * <code>required double yawR = 6;</code>
     */
    boolean hasYawR();
    /**
     * <code>required double yawR = 6;</code>
     */
    double getYawR();

    /**
     * <code>required double forwardM = 7;</code>
     */
    boolean hasForwardM();
    /**
     * <code>required double forwardM = 7;</code>
     */
    double getForwardM();

    /**
     * <code>required double rightM = 8;</code>
     */
    boolean hasRightM();
    /**
     * <code>required double rightM = 8;</code>
     */
    double getRightM();

    /**
     * <code>required double downM = 9;</code>
     */
    boolean hasDownM();
    /**
     * <code>required double downM = 9;</code>
     */
    double getDownM();

    /**
     * <code>required double forwardDeltaM = 10;</code>
     */
    boolean hasForwardDeltaM();
    /**
     * <code>required double forwardDeltaM = 10;</code>
     */
    double getForwardDeltaM();

    /**
     * <code>required double rightDeltaM = 11;</code>
     */
    boolean hasRightDeltaM();
    /**
     * <code>required double rightDeltaM = 11;</code>
     */
    double getRightDeltaM();

    /**
     * <code>required double downDeltaM = 12;</code>
     */
    boolean hasDownDeltaM();
    /**
     * <code>required double downDeltaM = 12;</code>
     */
    double getDownDeltaM();

    /**
     * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
     */
    boolean hasForwardDeltaSigmaM();
    /**
     * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
     */
    double getForwardDeltaSigmaM();

    /**
     * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
     */
    boolean hasRightDeltaSigmaM();
    /**
     * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
     */
    double getRightDeltaSigmaM();

    /**
     * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
     */
    boolean hasDownDeltaSigmaM();
    /**
     * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
     */
    double getDownDeltaSigmaM();

    /**
     * <code>optional double rollSigmaR = 16 [default = 0];</code>
     */
    boolean hasRollSigmaR();
    /**
     * <code>optional double rollSigmaR = 16 [default = 0];</code>
     */
    double getRollSigmaR();

    /**
     * <code>optional double pitchSigmaR = 17 [default = 0];</code>
     */
    boolean hasPitchSigmaR();
    /**
     * <code>optional double pitchSigmaR = 17 [default = 0];</code>
     */
    double getPitchSigmaR();

    /**
     * <code>optional double yawSigmaR = 18 [default = 0];</code>
     */
    boolean hasYawSigmaR();
    /**
     * <code>optional double yawSigmaR = 18 [default = 0];</code>
     */
    double getYawSigmaR();

    /**
     * <code>optional double forwardSigmaM = 19 [default = 0];</code>
     */
    boolean hasForwardSigmaM();
    /**
     * <code>optional double forwardSigmaM = 19 [default = 0];</code>
     */
    double getForwardSigmaM();

    /**
     * <code>optional double rightSigmaM = 20 [default = 0];</code>
     */
    boolean hasRightSigmaM();
    /**
     * <code>optional double rightSigmaM = 20 [default = 0];</code>
     */
    double getRightSigmaM();

    /**
     * <code>optional double downSigmaM = 21 [default = 0];</code>
     */
    boolean hasDownSigmaM();
    /**
     * <code>optional double downSigmaM = 21 [default = 0];</code>
     */
    double getDownSigmaM();
  }
  /**
   * Protobuf type {@code nav.RelFusedState}
   */
  public static final class RelFusedState extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:nav.RelFusedState)
      RelFusedStateOrBuilder {
    // Use RelFusedState.newBuilder() to construct.
    private RelFusedState(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RelFusedState(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RelFusedState defaultInstance;
    public static RelFusedState getDefaultInstance() {
      return defaultInstance;
    }

    public RelFusedState getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RelFusedState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              ownID_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              targetID_ = bs;
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              timeS_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rollR_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              pitchR_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              yawR_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              forwardM_ = input.readDouble();
              break;
            }
            case 65: {
              bitField0_ |= 0x00000080;
              rightM_ = input.readDouble();
              break;
            }
            case 73: {
              bitField0_ |= 0x00000100;
              downM_ = input.readDouble();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              forwardDeltaM_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              rightDeltaM_ = input.readDouble();
              break;
            }
            case 97: {
              bitField0_ |= 0x00000800;
              downDeltaM_ = input.readDouble();
              break;
            }
            case 105: {
              bitField0_ |= 0x00001000;
              forwardDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              rightDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 121: {
              bitField0_ |= 0x00004000;
              downDeltaSigmaM_ = input.readDouble();
              break;
            }
            case 129: {
              bitField0_ |= 0x00008000;
              rollSigmaR_ = input.readDouble();
              break;
            }
            case 137: {
              bitField0_ |= 0x00010000;
              pitchSigmaR_ = input.readDouble();
              break;
            }
            case 145: {
              bitField0_ |= 0x00020000;
              yawSigmaR_ = input.readDouble();
              break;
            }
            case 153: {
              bitField0_ |= 0x00040000;
              forwardSigmaM_ = input.readDouble();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              rightSigmaM_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              downSigmaM_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nav.internal_static_nav_RelFusedState_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nav.internal_static_nav_RelFusedState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nav.RelFusedState.class, nav.RelFusedState.Builder.class);
    }

    public static com.google.protobuf.Parser<RelFusedState> PARSER =
        new com.google.protobuf.AbstractParser<RelFusedState>() {
      public RelFusedState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelFusedState(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RelFusedState> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OWNID_FIELD_NUMBER = 1;
    private java.lang.Object ownID_;
    /**
     * <code>required string ownID = 1;</code>
     */
    public boolean hasOwnID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string ownID = 1;</code>
     */
    public java.lang.String getOwnID() {
      java.lang.Object ref = ownID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ownID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ownID = 1;</code>
     */
    public com.google.protobuf.ByteString
        getOwnIDBytes() {
      java.lang.Object ref = ownID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ownID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETID_FIELD_NUMBER = 2;
    private java.lang.Object targetID_;
    /**
     * <code>required string targetID = 2;</code>
     */
    public boolean hasTargetID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string targetID = 2;</code>
     */
    public java.lang.String getTargetID() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          targetID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string targetID = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetIDBytes() {
      java.lang.Object ref = targetID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        targetID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMES_FIELD_NUMBER = 3;
    private double timeS_;
    /**
     * <code>required double timeS = 3;</code>
     */
    public boolean hasTimeS() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required double timeS = 3;</code>
     */
    public double getTimeS() {
      return timeS_;
    }

    public static final int ROLLR_FIELD_NUMBER = 4;
    private double rollR_;
    /**
     * <code>required double rollR = 4;</code>
     */
    public boolean hasRollR() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required double rollR = 4;</code>
     */
    public double getRollR() {
      return rollR_;
    }

    public static final int PITCHR_FIELD_NUMBER = 5;
    private double pitchR_;
    /**
     * <code>required double pitchR = 5;</code>
     */
    public boolean hasPitchR() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required double pitchR = 5;</code>
     */
    public double getPitchR() {
      return pitchR_;
    }

    public static final int YAWR_FIELD_NUMBER = 6;
    private double yawR_;
    /**
     * <code>required double yawR = 6;</code>
     */
    public boolean hasYawR() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required double yawR = 6;</code>
     */
    public double getYawR() {
      return yawR_;
    }

    public static final int FORWARDM_FIELD_NUMBER = 7;
    private double forwardM_;
    /**
     * <code>required double forwardM = 7;</code>
     */
    public boolean hasForwardM() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required double forwardM = 7;</code>
     */
    public double getForwardM() {
      return forwardM_;
    }

    public static final int RIGHTM_FIELD_NUMBER = 8;
    private double rightM_;
    /**
     * <code>required double rightM = 8;</code>
     */
    public boolean hasRightM() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required double rightM = 8;</code>
     */
    public double getRightM() {
      return rightM_;
    }

    public static final int DOWNM_FIELD_NUMBER = 9;
    private double downM_;
    /**
     * <code>required double downM = 9;</code>
     */
    public boolean hasDownM() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required double downM = 9;</code>
     */
    public double getDownM() {
      return downM_;
    }

    public static final int FORWARDDELTAM_FIELD_NUMBER = 10;
    private double forwardDeltaM_;
    /**
     * <code>required double forwardDeltaM = 10;</code>
     */
    public boolean hasForwardDeltaM() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>required double forwardDeltaM = 10;</code>
     */
    public double getForwardDeltaM() {
      return forwardDeltaM_;
    }

    public static final int RIGHTDELTAM_FIELD_NUMBER = 11;
    private double rightDeltaM_;
    /**
     * <code>required double rightDeltaM = 11;</code>
     */
    public boolean hasRightDeltaM() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required double rightDeltaM = 11;</code>
     */
    public double getRightDeltaM() {
      return rightDeltaM_;
    }

    public static final int DOWNDELTAM_FIELD_NUMBER = 12;
    private double downDeltaM_;
    /**
     * <code>required double downDeltaM = 12;</code>
     */
    public boolean hasDownDeltaM() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>required double downDeltaM = 12;</code>
     */
    public double getDownDeltaM() {
      return downDeltaM_;
    }

    public static final int FORWARDDELTASIGMAM_FIELD_NUMBER = 13;
    private double forwardDeltaSigmaM_;
    /**
     * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
     */
    public boolean hasForwardDeltaSigmaM() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
     */
    public double getForwardDeltaSigmaM() {
      return forwardDeltaSigmaM_;
    }

    public static final int RIGHTDELTASIGMAM_FIELD_NUMBER = 14;
    private double rightDeltaSigmaM_;
    /**
     * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
     */
    public boolean hasRightDeltaSigmaM() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
     */
    public double getRightDeltaSigmaM() {
      return rightDeltaSigmaM_;
    }

    public static final int DOWNDELTASIGMAM_FIELD_NUMBER = 15;
    private double downDeltaSigmaM_;
    /**
     * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
     */
    public boolean hasDownDeltaSigmaM() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
     */
    public double getDownDeltaSigmaM() {
      return downDeltaSigmaM_;
    }

    public static final int ROLLSIGMAR_FIELD_NUMBER = 16;
    private double rollSigmaR_;
    /**
     * <code>optional double rollSigmaR = 16 [default = 0];</code>
     */
    public boolean hasRollSigmaR() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional double rollSigmaR = 16 [default = 0];</code>
     */
    public double getRollSigmaR() {
      return rollSigmaR_;
    }

    public static final int PITCHSIGMAR_FIELD_NUMBER = 17;
    private double pitchSigmaR_;
    /**
     * <code>optional double pitchSigmaR = 17 [default = 0];</code>
     */
    public boolean hasPitchSigmaR() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional double pitchSigmaR = 17 [default = 0];</code>
     */
    public double getPitchSigmaR() {
      return pitchSigmaR_;
    }

    public static final int YAWSIGMAR_FIELD_NUMBER = 18;
    private double yawSigmaR_;
    /**
     * <code>optional double yawSigmaR = 18 [default = 0];</code>
     */
    public boolean hasYawSigmaR() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional double yawSigmaR = 18 [default = 0];</code>
     */
    public double getYawSigmaR() {
      return yawSigmaR_;
    }

    public static final int FORWARDSIGMAM_FIELD_NUMBER = 19;
    private double forwardSigmaM_;
    /**
     * <code>optional double forwardSigmaM = 19 [default = 0];</code>
     */
    public boolean hasForwardSigmaM() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional double forwardSigmaM = 19 [default = 0];</code>
     */
    public double getForwardSigmaM() {
      return forwardSigmaM_;
    }

    public static final int RIGHTSIGMAM_FIELD_NUMBER = 20;
    private double rightSigmaM_;
    /**
     * <code>optional double rightSigmaM = 20 [default = 0];</code>
     */
    public boolean hasRightSigmaM() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double rightSigmaM = 20 [default = 0];</code>
     */
    public double getRightSigmaM() {
      return rightSigmaM_;
    }

    public static final int DOWNSIGMAM_FIELD_NUMBER = 21;
    private double downSigmaM_;
    /**
     * <code>optional double downSigmaM = 21 [default = 0];</code>
     */
    public boolean hasDownSigmaM() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional double downSigmaM = 21 [default = 0];</code>
     */
    public double getDownSigmaM() {
      return downSigmaM_;
    }

    private void initFields() {
      ownID_ = "";
      targetID_ = "";
      timeS_ = 0D;
      rollR_ = 0D;
      pitchR_ = 0D;
      yawR_ = 0D;
      forwardM_ = 0D;
      rightM_ = 0D;
      downM_ = 0D;
      forwardDeltaM_ = 0D;
      rightDeltaM_ = 0D;
      downDeltaM_ = 0D;
      forwardDeltaSigmaM_ = 0D;
      rightDeltaSigmaM_ = 0D;
      downDeltaSigmaM_ = 0D;
      rollSigmaR_ = 0D;
      pitchSigmaR_ = 0D;
      yawSigmaR_ = 0D;
      forwardSigmaM_ = 0D;
      rightSigmaM_ = 0D;
      downSigmaM_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOwnID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTargetID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimeS()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRollR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPitchR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasYawR()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasForwardDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRightDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDownDeltaM()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getOwnIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, timeS_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rollR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, pitchR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, yawR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, forwardM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeDouble(8, rightM_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeDouble(9, downM_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, rightDeltaM_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeDouble(12, downDeltaM_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeDouble(13, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(15, downDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeDouble(16, rollSigmaR_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeDouble(17, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeDouble(18, yawSigmaR_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeDouble(19, forwardSigmaM_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, rightSigmaM_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeDouble(21, downSigmaM_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getOwnIDBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTargetIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, timeS_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rollR_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, pitchR_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, yawR_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, forwardM_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, rightM_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, downM_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, forwardDeltaM_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, rightDeltaM_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, downDeltaM_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(13, forwardDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, rightDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, downDeltaSigmaM_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(16, rollSigmaR_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(17, pitchSigmaR_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(18, yawSigmaR_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(19, forwardSigmaM_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, rightSigmaM_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, downSigmaM_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static nav.RelFusedState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelFusedState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelFusedState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nav.RelFusedState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nav.RelFusedState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelFusedState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static nav.RelFusedState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static nav.RelFusedState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static nav.RelFusedState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static nav.RelFusedState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(nav.RelFusedState prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nav.RelFusedState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nav.RelFusedState)
        nav.RelFusedStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nav.internal_static_nav_RelFusedState_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nav.internal_static_nav_RelFusedState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nav.RelFusedState.class, nav.RelFusedState.Builder.class);
      }

      // Construct using nav.RelFusedState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ownID_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        targetID_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        timeS_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        rollR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        pitchR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        yawR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        forwardM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        rightM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000080);
        downM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000100);
        forwardDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        rightDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        downDeltaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000800);
        forwardDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00001000);
        rightDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        downDeltaSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        rollSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00008000);
        pitchSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00010000);
        yawSigmaR_ = 0D;
        bitField0_ = (bitField0_ & ~0x00020000);
        forwardSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00040000);
        rightSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        downSigmaM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nav.internal_static_nav_RelFusedState_descriptor;
      }

      public nav.RelFusedState getDefaultInstanceForType() {
        return nav.RelFusedState.getDefaultInstance();
      }

      public nav.RelFusedState build() {
        nav.RelFusedState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nav.RelFusedState buildPartial() {
        nav.RelFusedState result = new nav.RelFusedState(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ownID_ = ownID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.targetID_ = targetID_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timeS_ = timeS_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rollR_ = rollR_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.pitchR_ = pitchR_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.yawR_ = yawR_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.forwardM_ = forwardM_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rightM_ = rightM_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.downM_ = downM_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.forwardDeltaM_ = forwardDeltaM_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rightDeltaM_ = rightDeltaM_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.downDeltaM_ = downDeltaM_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.forwardDeltaSigmaM_ = forwardDeltaSigmaM_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.rightDeltaSigmaM_ = rightDeltaSigmaM_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.downDeltaSigmaM_ = downDeltaSigmaM_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.rollSigmaR_ = rollSigmaR_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.pitchSigmaR_ = pitchSigmaR_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.yawSigmaR_ = yawSigmaR_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.forwardSigmaM_ = forwardSigmaM_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.rightSigmaM_ = rightSigmaM_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.downSigmaM_ = downSigmaM_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nav.RelFusedState) {
          return mergeFrom((nav.RelFusedState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nav.RelFusedState other) {
        if (other == nav.RelFusedState.getDefaultInstance()) return this;
        if (other.hasOwnID()) {
          bitField0_ |= 0x00000001;
          ownID_ = other.ownID_;
          onChanged();
        }
        if (other.hasTargetID()) {
          bitField0_ |= 0x00000002;
          targetID_ = other.targetID_;
          onChanged();
        }
        if (other.hasTimeS()) {
          setTimeS(other.getTimeS());
        }
        if (other.hasRollR()) {
          setRollR(other.getRollR());
        }
        if (other.hasPitchR()) {
          setPitchR(other.getPitchR());
        }
        if (other.hasYawR()) {
          setYawR(other.getYawR());
        }
        if (other.hasForwardM()) {
          setForwardM(other.getForwardM());
        }
        if (other.hasRightM()) {
          setRightM(other.getRightM());
        }
        if (other.hasDownM()) {
          setDownM(other.getDownM());
        }
        if (other.hasForwardDeltaM()) {
          setForwardDeltaM(other.getForwardDeltaM());
        }
        if (other.hasRightDeltaM()) {
          setRightDeltaM(other.getRightDeltaM());
        }
        if (other.hasDownDeltaM()) {
          setDownDeltaM(other.getDownDeltaM());
        }
        if (other.hasForwardDeltaSigmaM()) {
          setForwardDeltaSigmaM(other.getForwardDeltaSigmaM());
        }
        if (other.hasRightDeltaSigmaM()) {
          setRightDeltaSigmaM(other.getRightDeltaSigmaM());
        }
        if (other.hasDownDeltaSigmaM()) {
          setDownDeltaSigmaM(other.getDownDeltaSigmaM());
        }
        if (other.hasRollSigmaR()) {
          setRollSigmaR(other.getRollSigmaR());
        }
        if (other.hasPitchSigmaR()) {
          setPitchSigmaR(other.getPitchSigmaR());
        }
        if (other.hasYawSigmaR()) {
          setYawSigmaR(other.getYawSigmaR());
        }
        if (other.hasForwardSigmaM()) {
          setForwardSigmaM(other.getForwardSigmaM());
        }
        if (other.hasRightSigmaM()) {
          setRightSigmaM(other.getRightSigmaM());
        }
        if (other.hasDownSigmaM()) {
          setDownSigmaM(other.getDownSigmaM());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOwnID()) {
          
          return false;
        }
        if (!hasTargetID()) {
          
          return false;
        }
        if (!hasTimeS()) {
          
          return false;
        }
        if (!hasRollR()) {
          
          return false;
        }
        if (!hasPitchR()) {
          
          return false;
        }
        if (!hasYawR()) {
          
          return false;
        }
        if (!hasForwardM()) {
          
          return false;
        }
        if (!hasRightM()) {
          
          return false;
        }
        if (!hasDownM()) {
          
          return false;
        }
        if (!hasForwardDeltaM()) {
          
          return false;
        }
        if (!hasRightDeltaM()) {
          
          return false;
        }
        if (!hasDownDeltaM()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nav.RelFusedState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nav.RelFusedState) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object ownID_ = "";
      /**
       * <code>required string ownID = 1;</code>
       */
      public boolean hasOwnID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string ownID = 1;</code>
       */
      public java.lang.String getOwnID() {
        java.lang.Object ref = ownID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ownID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ownID = 1;</code>
       */
      public com.google.protobuf.ByteString
          getOwnIDBytes() {
        java.lang.Object ref = ownID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ownID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ownID = 1;</code>
       */
      public Builder setOwnID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ownID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ownID = 1;</code>
       */
      public Builder clearOwnID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ownID_ = getDefaultInstance().getOwnID();
        onChanged();
        return this;
      }
      /**
       * <code>required string ownID = 1;</code>
       */
      public Builder setOwnIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ownID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object targetID_ = "";
      /**
       * <code>required string targetID = 2;</code>
       */
      public boolean hasTargetID() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string targetID = 2;</code>
       */
      public java.lang.String getTargetID() {
        java.lang.Object ref = targetID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            targetID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string targetID = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetIDBytes() {
        java.lang.Object ref = targetID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          targetID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string targetID = 2;</code>
       */
      public Builder setTargetID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 2;</code>
       */
      public Builder clearTargetID() {
        bitField0_ = (bitField0_ & ~0x00000002);
        targetID_ = getDefaultInstance().getTargetID();
        onChanged();
        return this;
      }
      /**
       * <code>required string targetID = 2;</code>
       */
      public Builder setTargetIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        targetID_ = value;
        onChanged();
        return this;
      }

      private double timeS_ ;
      /**
       * <code>required double timeS = 3;</code>
       */
      public boolean hasTimeS() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double timeS = 3;</code>
       */
      public double getTimeS() {
        return timeS_;
      }
      /**
       * <code>required double timeS = 3;</code>
       */
      public Builder setTimeS(double value) {
        bitField0_ |= 0x00000004;
        timeS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double timeS = 3;</code>
       */
      public Builder clearTimeS() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timeS_ = 0D;
        onChanged();
        return this;
      }

      private double rollR_ ;
      /**
       * <code>required double rollR = 4;</code>
       */
      public boolean hasRollR() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double rollR = 4;</code>
       */
      public double getRollR() {
        return rollR_;
      }
      /**
       * <code>required double rollR = 4;</code>
       */
      public Builder setRollR(double value) {
        bitField0_ |= 0x00000008;
        rollR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rollR = 4;</code>
       */
      public Builder clearRollR() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rollR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchR_ ;
      /**
       * <code>required double pitchR = 5;</code>
       */
      public boolean hasPitchR() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required double pitchR = 5;</code>
       */
      public double getPitchR() {
        return pitchR_;
      }
      /**
       * <code>required double pitchR = 5;</code>
       */
      public Builder setPitchR(double value) {
        bitField0_ |= 0x00000010;
        pitchR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double pitchR = 5;</code>
       */
      public Builder clearPitchR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pitchR_ = 0D;
        onChanged();
        return this;
      }

      private double yawR_ ;
      /**
       * <code>required double yawR = 6;</code>
       */
      public boolean hasYawR() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required double yawR = 6;</code>
       */
      public double getYawR() {
        return yawR_;
      }
      /**
       * <code>required double yawR = 6;</code>
       */
      public Builder setYawR(double value) {
        bitField0_ |= 0x00000020;
        yawR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double yawR = 6;</code>
       */
      public Builder clearYawR() {
        bitField0_ = (bitField0_ & ~0x00000020);
        yawR_ = 0D;
        onChanged();
        return this;
      }

      private double forwardM_ ;
      /**
       * <code>required double forwardM = 7;</code>
       */
      public boolean hasForwardM() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required double forwardM = 7;</code>
       */
      public double getForwardM() {
        return forwardM_;
      }
      /**
       * <code>required double forwardM = 7;</code>
       */
      public Builder setForwardM(double value) {
        bitField0_ |= 0x00000040;
        forwardM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardM = 7;</code>
       */
      public Builder clearForwardM() {
        bitField0_ = (bitField0_ & ~0x00000040);
        forwardM_ = 0D;
        onChanged();
        return this;
      }

      private double rightM_ ;
      /**
       * <code>required double rightM = 8;</code>
       */
      public boolean hasRightM() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required double rightM = 8;</code>
       */
      public double getRightM() {
        return rightM_;
      }
      /**
       * <code>required double rightM = 8;</code>
       */
      public Builder setRightM(double value) {
        bitField0_ |= 0x00000080;
        rightM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightM = 8;</code>
       */
      public Builder clearRightM() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rightM_ = 0D;
        onChanged();
        return this;
      }

      private double downM_ ;
      /**
       * <code>required double downM = 9;</code>
       */
      public boolean hasDownM() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required double downM = 9;</code>
       */
      public double getDownM() {
        return downM_;
      }
      /**
       * <code>required double downM = 9;</code>
       */
      public Builder setDownM(double value) {
        bitField0_ |= 0x00000100;
        downM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downM = 9;</code>
       */
      public Builder clearDownM() {
        bitField0_ = (bitField0_ & ~0x00000100);
        downM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaM_ ;
      /**
       * <code>required double forwardDeltaM = 10;</code>
       */
      public boolean hasForwardDeltaM() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required double forwardDeltaM = 10;</code>
       */
      public double getForwardDeltaM() {
        return forwardDeltaM_;
      }
      /**
       * <code>required double forwardDeltaM = 10;</code>
       */
      public Builder setForwardDeltaM(double value) {
        bitField0_ |= 0x00000200;
        forwardDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double forwardDeltaM = 10;</code>
       */
      public Builder clearForwardDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000200);
        forwardDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaM_ ;
      /**
       * <code>required double rightDeltaM = 11;</code>
       */
      public boolean hasRightDeltaM() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required double rightDeltaM = 11;</code>
       */
      public double getRightDeltaM() {
        return rightDeltaM_;
      }
      /**
       * <code>required double rightDeltaM = 11;</code>
       */
      public Builder setRightDeltaM(double value) {
        bitField0_ |= 0x00000400;
        rightDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double rightDeltaM = 11;</code>
       */
      public Builder clearRightDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000400);
        rightDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaM_ ;
      /**
       * <code>required double downDeltaM = 12;</code>
       */
      public boolean hasDownDeltaM() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required double downDeltaM = 12;</code>
       */
      public double getDownDeltaM() {
        return downDeltaM_;
      }
      /**
       * <code>required double downDeltaM = 12;</code>
       */
      public Builder setDownDeltaM(double value) {
        bitField0_ |= 0x00000800;
        downDeltaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double downDeltaM = 12;</code>
       */
      public Builder clearDownDeltaM() {
        bitField0_ = (bitField0_ & ~0x00000800);
        downDeltaM_ = 0D;
        onChanged();
        return this;
      }

      private double forwardDeltaSigmaM_ ;
      /**
       * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
       */
      public boolean hasForwardDeltaSigmaM() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
       */
      public double getForwardDeltaSigmaM() {
        return forwardDeltaSigmaM_;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
       */
      public Builder setForwardDeltaSigmaM(double value) {
        bitField0_ |= 0x00001000;
        forwardDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardDeltaSigmaM = 13 [default = 0];</code>
       */
      public Builder clearForwardDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00001000);
        forwardDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightDeltaSigmaM_ ;
      /**
       * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
       */
      public boolean hasRightDeltaSigmaM() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
       */
      public double getRightDeltaSigmaM() {
        return rightDeltaSigmaM_;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
       */
      public Builder setRightDeltaSigmaM(double value) {
        bitField0_ |= 0x00002000;
        rightDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightDeltaSigmaM = 14 [default = 0];</code>
       */
      public Builder clearRightDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00002000);
        rightDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double downDeltaSigmaM_ ;
      /**
       * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
       */
      public boolean hasDownDeltaSigmaM() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
       */
      public double getDownDeltaSigmaM() {
        return downDeltaSigmaM_;
      }
      /**
       * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
       */
      public Builder setDownDeltaSigmaM(double value) {
        bitField0_ |= 0x00004000;
        downDeltaSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downDeltaSigmaM = 15 [default = 0];</code>
       */
      public Builder clearDownDeltaSigmaM() {
        bitField0_ = (bitField0_ & ~0x00004000);
        downDeltaSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rollSigmaR_ ;
      /**
       * <code>optional double rollSigmaR = 16 [default = 0];</code>
       */
      public boolean hasRollSigmaR() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional double rollSigmaR = 16 [default = 0];</code>
       */
      public double getRollSigmaR() {
        return rollSigmaR_;
      }
      /**
       * <code>optional double rollSigmaR = 16 [default = 0];</code>
       */
      public Builder setRollSigmaR(double value) {
        bitField0_ |= 0x00008000;
        rollSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rollSigmaR = 16 [default = 0];</code>
       */
      public Builder clearRollSigmaR() {
        bitField0_ = (bitField0_ & ~0x00008000);
        rollSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double pitchSigmaR_ ;
      /**
       * <code>optional double pitchSigmaR = 17 [default = 0];</code>
       */
      public boolean hasPitchSigmaR() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional double pitchSigmaR = 17 [default = 0];</code>
       */
      public double getPitchSigmaR() {
        return pitchSigmaR_;
      }
      /**
       * <code>optional double pitchSigmaR = 17 [default = 0];</code>
       */
      public Builder setPitchSigmaR(double value) {
        bitField0_ |= 0x00010000;
        pitchSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pitchSigmaR = 17 [default = 0];</code>
       */
      public Builder clearPitchSigmaR() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pitchSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double yawSigmaR_ ;
      /**
       * <code>optional double yawSigmaR = 18 [default = 0];</code>
       */
      public boolean hasYawSigmaR() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional double yawSigmaR = 18 [default = 0];</code>
       */
      public double getYawSigmaR() {
        return yawSigmaR_;
      }
      /**
       * <code>optional double yawSigmaR = 18 [default = 0];</code>
       */
      public Builder setYawSigmaR(double value) {
        bitField0_ |= 0x00020000;
        yawSigmaR_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double yawSigmaR = 18 [default = 0];</code>
       */
      public Builder clearYawSigmaR() {
        bitField0_ = (bitField0_ & ~0x00020000);
        yawSigmaR_ = 0D;
        onChanged();
        return this;
      }

      private double forwardSigmaM_ ;
      /**
       * <code>optional double forwardSigmaM = 19 [default = 0];</code>
       */
      public boolean hasForwardSigmaM() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional double forwardSigmaM = 19 [default = 0];</code>
       */
      public double getForwardSigmaM() {
        return forwardSigmaM_;
      }
      /**
       * <code>optional double forwardSigmaM = 19 [default = 0];</code>
       */
      public Builder setForwardSigmaM(double value) {
        bitField0_ |= 0x00040000;
        forwardSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double forwardSigmaM = 19 [default = 0];</code>
       */
      public Builder clearForwardSigmaM() {
        bitField0_ = (bitField0_ & ~0x00040000);
        forwardSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double rightSigmaM_ ;
      /**
       * <code>optional double rightSigmaM = 20 [default = 0];</code>
       */
      public boolean hasRightSigmaM() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double rightSigmaM = 20 [default = 0];</code>
       */
      public double getRightSigmaM() {
        return rightSigmaM_;
      }
      /**
       * <code>optional double rightSigmaM = 20 [default = 0];</code>
       */
      public Builder setRightSigmaM(double value) {
        bitField0_ |= 0x00080000;
        rightSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double rightSigmaM = 20 [default = 0];</code>
       */
      public Builder clearRightSigmaM() {
        bitField0_ = (bitField0_ & ~0x00080000);
        rightSigmaM_ = 0D;
        onChanged();
        return this;
      }

      private double downSigmaM_ ;
      /**
       * <code>optional double downSigmaM = 21 [default = 0];</code>
       */
      public boolean hasDownSigmaM() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional double downSigmaM = 21 [default = 0];</code>
       */
      public double getDownSigmaM() {
        return downSigmaM_;
      }
      /**
       * <code>optional double downSigmaM = 21 [default = 0];</code>
       */
      public Builder setDownSigmaM(double value) {
        bitField0_ |= 0x00100000;
        downSigmaM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double downSigmaM = 21 [default = 0];</code>
       */
      public Builder clearDownSigmaM() {
        bitField0_ = (bitField0_ & ~0x00100000);
        downSigmaM_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:nav.RelFusedState)
    }

    static {
      defaultInstance = new RelFusedState(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:nav.RelFusedState)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_LabViewIn_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_LabViewIn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_LabViewOut_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_LabViewOut_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_Mission_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_Mission_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_Waystates_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_Waystates_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_Ctrl_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_Ctrl_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_Img_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_Img_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_RPY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_RPY_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_LatLon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_LatLon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_Alt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_Alt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_BodyRPYDelta_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_BodyRPYDelta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_BodyFRDDelta_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_BodyFRDDelta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_BodyFRDRateDelta_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_BodyFRDRateDelta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_RelRPY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_RelRPY_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_RelFRD_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_RelFRD_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_FusedState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_FusedState_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nav_RelFusedState_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_nav_RelFusedState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tnav.proto\022\003nav\"\031\n\tLabViewIn\022\014\n\004data\030\001 " +
      "\002(\014\"\032\n\nLabViewOut\022\014\n\004data\030\001 \002(\014\"*\n\007Missi" +
      "on\022\037\n\010behavior\030\001 \002(\0162\r.nav.Behavior\"\363\001\n\t" +
      "Waystates\022\r\n\005timeS\030\001 \003(\001\022\r\n\005rollR\030\002 \003(\001\022" +
      "\016\n\006pitchR\030\003 \003(\001\022\014\n\004yawR\030\004 \003(\001\022\014\n\004latR\030\005 " +
      "\003(\001\022\014\n\004lonR\030\006 \003(\001\022\014\n\004altM\030\007 \003(\001\022\023\n\013rollR" +
      "ateRPS\030\010 \003(\001\022\024\n\014pitchRateRPS\030\t \003(\001\022\022\n\nya" +
      "wRateRPS\030\n \003(\001\022\026\n\016forwardRateMPS\030\013 \003(\001\022\024" +
      "\n\014rightRateMPS\030\014 \003(\001\022\023\n\013downRateMPS\030\r \003(" +
      "\001\"#\n\004Ctrl\022\r\n\005uReal\030\001 \003(\001\022\014\n\004uInt\030\002 \003(\005\"`",
      "\n\003Img\022\r\n\005timeS\030\001 \002(\001\022\014\n\004fovR\030\002 \002(\001\022\r\n\005st" +
      "eps\030\003 \002(\r\022\017\n\007strides\030\004 \002(\r\022\016\n\006layers\030\005 \002" +
      "(\r\022\014\n\004data\030\006 \002(\014\"\206\001\n\003RPY\022\r\n\005timeS\030\001 \002(\001\022" +
      "\r\n\005rollR\030\002 \002(\001\022\016\n\006pitchR\030\003 \002(\001\022\014\n\004yawR\030\004" +
      " \002(\001\022\025\n\nrollSigmaR\030\005 \001(\001:\0010\022\026\n\013pitchSigm" +
      "aR\030\006 \001(\001:\0010\022\024\n\tyawSigmaR\030\007 \001(\001:\0010\"_\n\006Lat" +
      "Lon\022\r\n\005timeS\030\001 \002(\001\022\014\n\004latR\030\002 \002(\001\022\014\n\004lonR" +
      "\030\003 \002(\001\022\024\n\tlatSigmaR\030\004 \001(\001:\0010\022\024\n\tlonSigma" +
      "R\030\005 \001(\001:\0010\"8\n\003Alt\022\r\n\005timeS\030\001 \002(\001\022\014\n\004altM" +
      "\030\002 \002(\001\022\024\n\taltSigmaM\030\003 \001(\001:\0010\"\307\001\n\014BodyRPY",
      "Delta\022\r\n\005timeS\030\001 \002(\001\022\022\n\ntimeDeltaS\030\002 \002(\001" +
      "\022\022\n\nrollDeltaR\030\003 \002(\001\022\023\n\013pitchDeltaR\030\004 \002(" +
      "\001\022\021\n\tyawDeltaR\030\005 \002(\001\022\034\n\021rollDeltaSigmaRP" +
      "S\030\006 \001(\001:\0010\022\035\n\022pitchDeltaSigmaRPS\030\007 \001(\001:\001" +
      "0\022\033\n\020yawDeltaSigmaRPS\030\010 \001(\001:\0010\"\311\001\n\014BodyF" +
      "RDDelta\022\r\n\005timeS\030\001 \002(\001\022\022\n\ntimeDeltaS\030\002 \002" +
      "(\001\022\025\n\rforwardDeltaM\030\003 \002(\001\022\023\n\013rightDeltaM" +
      "\030\004 \002(\001\022\022\n\ndownDeltaM\030\005 \002(\001\022\035\n\022forwardDel" +
      "taSigmaM\030\006 \001(\001:\0010\022\033\n\020rightDeltaSigmaM\030\007 " +
      "\001(\001:\0010\022\032\n\017downDeltaSigmaM\030\010 \001(\001:\0010\"\361\001\n\020B",
      "odyFRDRateDelta\022\r\n\005timeS\030\001 \002(\001\022\022\n\ntimeDe" +
      "ltaS\030\002 \002(\001\022\033\n\023forwardRateDeltaMPS\030\003 \002(\001\022" +
      "\031\n\021rightRateDeltaMPS\030\004 \002(\001\022\030\n\020downRateDe" +
      "ltaMPS\030\005 \002(\001\022#\n\030forwardRateDeltaSigmaMPS" +
      "\030\006 \001(\001:\0010\022!\n\026rightRateDeltaSigmaMPS\030\007 \001(" +
      "\001:\0010\022 \n\025downRateDeltaSigmaMPS\030\010 \001(\001:\0010\"\233" +
      "\001\n\006RelRPY\022\020\n\010targetID\030\001 \002(\t\022\r\n\005timeS\030\002 \002" +
      "(\001\022\r\n\005rollR\030\003 \002(\001\022\016\n\006pitchR\030\004 \002(\001\022\014\n\004yaw" +
      "R\030\005 \002(\001\022\025\n\nrollSigmaR\030\006 \001(\001:\0010\022\026\n\013pitchS" +
      "igmaR\030\007 \001(\001:\0010\022\024\n\tyawSigmaR\030\010 \001(\001:\0010\"\243\001\n",
      "\006RelFRD\022\020\n\010targetID\030\001 \002(\t\022\r\n\005timeS\030\002 \002(\001" +
      "\022\020\n\010forwardM\030\003 \002(\001\022\016\n\006rightM\030\004 \002(\001\022\r\n\005do" +
      "wnM\030\005 \002(\001\022\030\n\rforwardSigmaM\030\006 \001(\001:\0010\022\026\n\013r" +
      "ightSigmaM\030\007 \001(\001:\0010\022\025\n\ndownSigmaM\030\010 \001(\001:" +
      "\0010\"\367\005\n\nFusedState\022\r\n\005timeS\030\001 \002(\001\022\022\n\ntime" +
      "DeltaS\030\002 \002(\001\022\r\n\005rollR\030\003 \002(\001\022\016\n\006pitchR\030\004 " +
      "\002(\001\022\014\n\004yawR\030\005 \002(\001\022\022\n\nrollDeltaR\030\006 \002(\001\022\023\n" +
      "\013pitchDeltaR\030\007 \002(\001\022\021\n\tyawDeltaR\030\010 \002(\001\022\014\n" +
      "\004latR\030\t \002(\001\022\014\n\004lonR\030\n \002(\001\022\014\n\004altM\030\013 \002(\001\022" +
      "\025\n\rforwardDeltaM\030\014 \002(\001\022\023\n\013rightDeltaM\030\r ",
      "\002(\001\022\022\n\ndownDeltaM\030\016 \002(\001\022\033\n\023forwardRateDe" +
      "ltaMPS\030\017 \002(\001\022\031\n\021rightRateDeltaMPS\030\020 \002(\001\022" +
      "\030\n\020downRateDeltaMPS\030\021 \002(\001\022\025\n\nrollSigmaR\030" +
      "\022 \001(\001:\0010\022\026\n\013pitchSigmaR\030\023 \001(\001:\0010\022\024\n\tyawS" +
      "igmaR\030\024 \001(\001:\0010\022\034\n\021rollDeltaSigmaRPS\030\025 \001(" +
      "\001:\0010\022\035\n\022pitchDeltaSigmaRPS\030\026 \001(\001:\0010\022\033\n\020y" +
      "awDeltaSigmaRPS\030\027 \001(\001:\0010\022\024\n\tlatSigmaR\030\030 " +
      "\001(\001:\0010\022\024\n\tlonSigmaR\030\031 \001(\001:\0010\022\024\n\taltSigma" +
      "M\030\032 \001(\001:\0010\022\035\n\022forwardDeltaSigmaM\030\033 \001(\001:\001" +
      "0\022\033\n\020rightDeltaSigmaM\030\034 \001(\001:\0010\022\032\n\017downDe",
      "ltaSigmaM\030\035 \001(\001:\0010\022#\n\030forwardRateDeltaSi" +
      "gmaMPS\030\036 \001(\001:\0010\022!\n\026rightRateDeltaSigmaMP" +
      "S\030\037 \001(\001:\0010\022 \n\025downRateDeltaSigmaMPS\030  \001(" +
      "\001:\0010\"\303\003\n\rRelFusedState\022\r\n\005ownID\030\001 \002(\t\022\020\n" +
      "\010targetID\030\002 \002(\t\022\r\n\005timeS\030\003 \002(\001\022\r\n\005rollR\030" +
      "\004 \002(\001\022\016\n\006pitchR\030\005 \002(\001\022\014\n\004yawR\030\006 \002(\001\022\020\n\010f" +
      "orwardM\030\007 \002(\001\022\016\n\006rightM\030\010 \002(\001\022\r\n\005downM\030\t" +
      " \002(\001\022\025\n\rforwardDeltaM\030\n \002(\001\022\023\n\013rightDelt" +
      "aM\030\013 \002(\001\022\022\n\ndownDeltaM\030\014 \002(\001\022\035\n\022forwardD" +
      "eltaSigmaM\030\r \001(\001:\0010\022\033\n\020rightDeltaSigmaM\030",
      "\016 \001(\001:\0010\022\032\n\017downDeltaSigmaM\030\017 \001(\001:\0010\022\025\n\n" +
      "rollSigmaR\030\020 \001(\001:\0010\022\026\n\013pitchSigmaR\030\021 \001(\001" +
      ":\0010\022\024\n\tyawSigmaR\030\022 \001(\001:\0010\022\030\n\rforwardSigm" +
      "aM\030\023 \001(\001:\0010\022\026\n\013rightSigmaM\030\024 \001(\001:\0010\022\025\n\nd" +
      "ownSigmaM\030\025 \001(\001:\0010*J\n\010Behavior\022\n\n\006LOITER" +
      "\020\000\022\014\n\010APPROACH\020\001\022\013\n\007CAPTURE\020\002\022\013\n\007RELEASE" +
      "\020\003\022\n\n\006DEPART\020\004B\007\n\000B\003nav"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_nav_LabViewIn_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_nav_LabViewIn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_LabViewIn_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_nav_LabViewOut_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_nav_LabViewOut_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_LabViewOut_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_nav_Mission_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_nav_Mission_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_Mission_descriptor,
        new java.lang.String[] { "Behavior", });
    internal_static_nav_Waystates_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_nav_Waystates_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_Waystates_descriptor,
        new java.lang.String[] { "TimeS", "RollR", "PitchR", "YawR", "LatR", "LonR", "AltM", "RollRateRPS", "PitchRateRPS", "YawRateRPS", "ForwardRateMPS", "RightRateMPS", "DownRateMPS", });
    internal_static_nav_Ctrl_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_nav_Ctrl_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_Ctrl_descriptor,
        new java.lang.String[] { "UReal", "UInt", });
    internal_static_nav_Img_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_nav_Img_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_Img_descriptor,
        new java.lang.String[] { "TimeS", "FovR", "Steps", "Strides", "Layers", "Data", });
    internal_static_nav_RPY_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_nav_RPY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_RPY_descriptor,
        new java.lang.String[] { "TimeS", "RollR", "PitchR", "YawR", "RollSigmaR", "PitchSigmaR", "YawSigmaR", });
    internal_static_nav_LatLon_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_nav_LatLon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_LatLon_descriptor,
        new java.lang.String[] { "TimeS", "LatR", "LonR", "LatSigmaR", "LonSigmaR", });
    internal_static_nav_Alt_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_nav_Alt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_Alt_descriptor,
        new java.lang.String[] { "TimeS", "AltM", "AltSigmaM", });
    internal_static_nav_BodyRPYDelta_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_nav_BodyRPYDelta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_BodyRPYDelta_descriptor,
        new java.lang.String[] { "TimeS", "TimeDeltaS", "RollDeltaR", "PitchDeltaR", "YawDeltaR", "RollDeltaSigmaRPS", "PitchDeltaSigmaRPS", "YawDeltaSigmaRPS", });
    internal_static_nav_BodyFRDDelta_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_nav_BodyFRDDelta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_BodyFRDDelta_descriptor,
        new java.lang.String[] { "TimeS", "TimeDeltaS", "ForwardDeltaM", "RightDeltaM", "DownDeltaM", "ForwardDeltaSigmaM", "RightDeltaSigmaM", "DownDeltaSigmaM", });
    internal_static_nav_BodyFRDRateDelta_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_nav_BodyFRDRateDelta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_BodyFRDRateDelta_descriptor,
        new java.lang.String[] { "TimeS", "TimeDeltaS", "ForwardRateDeltaMPS", "RightRateDeltaMPS", "DownRateDeltaMPS", "ForwardRateDeltaSigmaMPS", "RightRateDeltaSigmaMPS", "DownRateDeltaSigmaMPS", });
    internal_static_nav_RelRPY_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_nav_RelRPY_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_RelRPY_descriptor,
        new java.lang.String[] { "TargetID", "TimeS", "RollR", "PitchR", "YawR", "RollSigmaR", "PitchSigmaR", "YawSigmaR", });
    internal_static_nav_RelFRD_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_nav_RelFRD_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_RelFRD_descriptor,
        new java.lang.String[] { "TargetID", "TimeS", "ForwardM", "RightM", "DownM", "ForwardSigmaM", "RightSigmaM", "DownSigmaM", });
    internal_static_nav_FusedState_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_nav_FusedState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_FusedState_descriptor,
        new java.lang.String[] { "TimeS", "TimeDeltaS", "RollR", "PitchR", "YawR", "RollDeltaR", "PitchDeltaR", "YawDeltaR", "LatR", "LonR", "AltM", "ForwardDeltaM", "RightDeltaM", "DownDeltaM", "ForwardRateDeltaMPS", "RightRateDeltaMPS", "DownRateDeltaMPS", "RollSigmaR", "PitchSigmaR", "YawSigmaR", "RollDeltaSigmaRPS", "PitchDeltaSigmaRPS", "YawDeltaSigmaRPS", "LatSigmaR", "LonSigmaR", "AltSigmaM", "ForwardDeltaSigmaM", "RightDeltaSigmaM", "DownDeltaSigmaM", "ForwardRateDeltaSigmaMPS", "RightRateDeltaSigmaMPS", "DownRateDeltaSigmaMPS", });
    internal_static_nav_RelFusedState_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_nav_RelFusedState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_nav_RelFusedState_descriptor,
        new java.lang.String[] { "OwnID", "TargetID", "TimeS", "RollR", "PitchR", "YawR", "ForwardM", "RightM", "DownM", "ForwardDeltaM", "RightDeltaM", "DownDeltaM", "ForwardDeltaSigmaM", "RightDeltaSigmaM", "DownDeltaSigmaM", "RollSigmaR", "PitchSigmaR", "YawSigmaR", "ForwardSigmaM", "RightSigmaM", "DownSigmaM", });
  }

public static nav.LabViewIn.Builder LabViewInBuilder() {return nav.LabViewIn.newBuilder();}
public static nav.LabViewOut.Builder LabViewOutBuilder() {return nav.LabViewOut.newBuilder();}
public static nav.Mission.Builder MissionBuilder() {return nav.Mission.newBuilder();}
public static nav.Waystates.Builder WaystatesBuilder() {return nav.Waystates.newBuilder();}
public static nav.Ctrl.Builder CtrlBuilder() {return nav.Ctrl.newBuilder();}
public static nav.Img.Builder ImgBuilder() {return nav.Img.newBuilder();}
public static nav.RPY.Builder RPYBuilder() {return nav.RPY.newBuilder();}
public static nav.LatLon.Builder LatLonBuilder() {return nav.LatLon.newBuilder();}
public static nav.Alt.Builder AltBuilder() {return nav.Alt.newBuilder();}
public static nav.BodyRPYDelta.Builder BodyRPYDeltaBuilder() {return nav.BodyRPYDelta.newBuilder();}
public static nav.BodyFRDDelta.Builder BodyFRDDeltaBuilder() {return nav.BodyFRDDelta.newBuilder();}
public static nav.BodyFRDRateDelta.Builder BodyFRDRateDeltaBuilder() {return nav.BodyFRDRateDelta.newBuilder();}
public static nav.RelRPY.Builder RelRPYBuilder() {return nav.RelRPY.newBuilder();}
public static nav.RelFRD.Builder RelFRDBuilder() {return nav.RelFRD.newBuilder();}
public static nav.FusedState.Builder FusedStateBuilder() {return nav.FusedState.newBuilder();}
public static nav.RelFusedState.Builder RelFusedStateBuilder() {return nav.RelFusedState.newBuilder();}

}
